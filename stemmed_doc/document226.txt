next prev python modul thi tutori will learn understand code what modul stand abstract syntax tree which potent tool python program languag allow interact with python code itself modifi have ever thought about python code get run there magic behind those don know python interpret respons run python code follow pre written instruct that translat python code into instruct that machin run follow process convert python code into machin code when code code pars into smaller chunk call token these token creat predefin instruct that should treat differ exampl keyword els differ keyword than numer valu like token store list transform build abstract syntax tree ast collect more node link togeth base grammar python languag compil produc lower level instruct known binari code from ast thi code veri gener that comput easili when interpret get instruct like byte code interpret code byte code respons call function oper system which will eventu interact with memori program abov descript rough sketch interpret run python code use ast mode code compil there three mode avail compil code they given below exec thi mode use execut normal python code eval thi mode use evalu python express will return result after evalu singl thi mode work python shell that execut statement time execut python code use modul python code let understand follow exampl exampl import code ast pars print hello learner welcom javatpoint print code exec compil code filenam mode exec output ast modul object hello learner welcom javatpoint evalu python express modul allow evalu python express return result from express let understand follow exampl exampl import express code ast pars express mode eval print eval compil code mode eval print ast dump code output express bodi binop left constant valu kind none add right constant valu kind none creat multi line ast previou exampl have seen singl line dump them now will learn creat multi line ast first let understand follow exampl exampl import tree ast ast pars subject comput scienc alorithm name ricki subject print learn format name subject print ast dump tree ast output modul bodi assign target name subject ctx store valu list elt constant valu comput scienc kind none constant valu alorithm kind none ctx load type comment none assign target name name ctx store valu constant valu ricki kind none type comment none for target name fruit ctx store iter name fruit ctx load bodi expr valu call func name print ctx load arg call func attribut valu constant valu learn kind none attr format ctx load arg name name ctx load name subject ctx load keyword keyword orels type comment none type ignor nodetransform nodevisitor nodetransform class use take differ type modifi accord requir modul also provid nodevisitor class which help call visit function everi time through tree that more control node let understand follow exampl exampl import class visitor ast nodevisitor visit str self node print string node node class mytransform ast nodetransform visit str self node return ast str str node pars ast pars print hello world mytransform visit pars visitor visit pars output welcom javatpoint explan abov code have import modul that pars code then have defin visitor class that inherit nodevisitor class everi time find string node get transform that prefix also modul when directli sourc code let understand follow exampl exampl import from pprint import pprint main with open ast modul sourc ast tree ast pars sourc read analysi analyz analysi visit ast tree analysi report class analyz ast nodevisitor init self self stat import from node visit self node alia node name self stat import append alia name self gener visit node node visitfrom self node alia node name self stat from append alia name self gener visit node report self pprint self stat name main output from pprint import ast explan abov code convert python file into abstract syntax tree then analyz tree help inform have open python file read mode then creat name ast tree then pars function process token follow languag rule build tree data structur that consist much use inform tree noth collect node where tree variabl referenc root node thu visit each node tree perform oper but first visit each node process data analyz onc tree analyz follow visitor pattern use nodevisitor class track node python need implement method visit node type visit particular node type previou exampl use below script exampl class analyz ast nodevisitor node visit self node alia node name self stat import append alia name self gener visit node node visitfrom self node alia node name self stat from append alia name self gener visit node code accept name modul store list statist with help nodevisitor class analyz tree analyz analyz analyz visit tree visit method will work same visit node type method use analysi tool after python code turn into byte code can readabl human make interpret fast which mean byte code design machin human consist enough structur inform which make them help learn about python code howev ast still user friendli they much understand than byte code represent when python modul abstract syntax tree quit help code coverag tool pars sourc code find possibl flaw error code also use custom python interpret use analyz static code make ide intellig which known intellisens conclus have learn about modul python which respons run python code then have built tree from python code perform analysi use nodevisitor class next topicpython request modul http request prev next