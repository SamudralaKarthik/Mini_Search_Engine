next prev check given link list circular link list thi tutori will write python program check whether given link list circular link list not will understand variou effici method determin circular link list understood that familiar with basic concept link list circular link list can skip introduct part familiar with link list let briefli overview link list what link list link list linear data structur that store address next element each element known node node consist data memori address next element access link list element through pointer first node known head link list provid advantag over array becaus store element dynam where array fix size link list insert delet element easili circular link list circular link list type link list which last follow pointer field refer element list other hand next pointer field pointer element null valu loop exist link list when null reach travers entir link list check given link list circular definit both link list find easili when travers link list node point null node link list point toward head start node then link list circular let understand solut solut follow below step check whether given list circular not travers entir link list check node point head return true mean given link list circular let understand below code exampl class node function initialis current object init self data self data data self next none link list class contain current object class linkedlist function initi head init self self head none circular head head none return true next head current head next thi loop would stop both case circular circular while current none current head current current next return current head node linkedlist node head node second node third node fourth node node head next second second next third third next fourth circular node head print the given link list circular list els print the given link list circular list fourth next node head circular node head print the given link list circular list els print the given link list circular list output given link list circular list given link list circular list explan abov code have creat node class initi node link list then creat linkedlist class that will point head node link list initi none final defin circularlist function that determin whether given link list circular not thi function check head equal none true then return true head none assign head next element current zero then defin while loop which will until current none current head loop termin condit return current equal head solut pointer solut pointer with differ speed determin whether given link list circular link list not defin slow pointer fast pointer these pointer travers link list slow pointer move step time fast pointer move step time link list circular fast pointer will reach element whose next pointer null let understand approach check head null return fals not creat pointer slow fast slow head fast head next loop while slow equal fast insid loop fast null next null then return fals then assign slow slow next fast fast next next return true let implement abov approach into python code exampl class node function initialis current object init self data self data data self next none link list class contain current object class linkedlist function initi head init self self head none circular list head head none return the given list circular list slow head fast head next while slow fast fast none fast next none return the given list circular list slow slow next head fast next next return the given list circular list node linkedlist node head node second node third node fourth node node head next second second next third third next fourth print circular list node head output given list circular list explan have creat node linkedlist class initi node head abov code then creat circular list function which take head argument there link list head none otherwis assign slow pointer head fast pointer head next element then iter link list till slow equal fast loop check fast pointer none fast next element none condit true return link list circular link list otherwis assign slow next element slow pointer fast next next element fast pointer slow fast pointer becam equal mean given link list circular link list loop finish return true indic circular link list complex analysi pointer solut link list doesn have cycl fast pointer will reach end therefor time complex will thi case link list cycl need calcul number step make fast pointer catch slow pointer let understand movement both pointer slow pointer requir step enter cycl where fast pointer alreadi cycl element apart from slow pointer link list direct total time will where number element between head start element cycl repres distanc between pointer when slow pointer reach cycl space complex conclus thi tutori have learn about check link list circular link list have discuss solut first brute forc approach second two pointer solut two pointer solut easi implement also more effici next topicrevers link list python prev next