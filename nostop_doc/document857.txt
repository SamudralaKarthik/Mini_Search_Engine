next prev Python Discord must have heard about discord familiar with online communities member owner one. discord, might have seen bots managing those groups. Therefore, we'll Discord developer portal account create Discord this tutorial. simple with only most essential features, always more features need them. Describe Discord. Millions people free chat programme Discord, which offers variety chat functions including audio, video, text chat, both personal business purposes. Discord, communities known servers, other users join these servers hang talk people about their interests. Discord also create private servers that only invited users access, allowing users privately communicate with their loved ones. Discord servers populated channels that owner built; these channels might text, audio, video channels. server, discussions about subjects take place these channels. Discord bots: What they? Using these statistics, apparent that more than million people Discord every that interest communities Discord rising. servers being investigated joined users. People tend join servers they become more popular, number players increases, becomes more difficult admins control server. This where bots come into play. Admin bots carry variety tasks improve user experience server. Some these jobs include welcoming participants. Providing answers commonly requested questions. removing harmful users from servers. sending, deleting, replying messages Managing server's list keeps Following this tutorial, also construct your Discord bot, which something that administrators large Discord groups always desire. Let's started. Making Discord Server first thing need dedicated server where install bot. this server, this will only operate channel. don't already have one, easily establish going https://discord.com/. build server, must have discord account. First, enter create server interface clicking server icon left sidebar. Choose your server's template. Decide you're using this server community enjoyment. you're utilising your server community, just name group organisation. Otherwise, clever memorable name. your server been created. Making Server Channel must establish channel where this will operate because will only respond there. text channels list, click Add. Select "text channel" channel type, then give your channel name. channel made. Developing construct first Discord developer page server account prepared. Discord Developer Portal platform made available Discord users want expand features utilise build more exciting things, such making bots. Step Join portal: Visit https://discord.com/developers/applications sign using discord account that used create server wish create for. Step2: Application refers capabilities this step. instance, Bot. When starting your first bot, click Application give name. Keep mind that your will have same name application. Step3: create bot, select from left sidebar then click Bot. Step4: When prompted confirm want bot, click Yes, button next pop-up window. When prompted confirm want bot, click Yes, button next pop-up window. Never share your token with anyone, please! Creating Authenticating that been established, it's time specify scopes provide user's access. Permission describes what permitted server, such send messages. Scope describes function that will play. Step When click OAuth2 then Generator, several checkboxes pertaining various scopes will appear. We're going only scope this bot, choose checkbox. Step following checkboxes box's approval. Please tick boxes linked that because will granting this authorization send react messages. always create modify these permissions later. Make sure select applications. Commands Step want programme slash commands. Step3: Scroll down click copy link copy that produced bot. Step this step, we'll authorise with server pasting copied into tab. Click proceed after selecting server previously created. Step view bot's permissions here. Click Authorize edit these you'd like. Step Complete captcha prove that human, should approved. Step Visit server where name list persons online. Writing Bot's Code will write Python code Discord this step. Step save renewal that copied previously; will create an.env file. This file will safeguard credentials when host code anywhere. Create file with extension.env your project folder before adding following code. TOKEN='<YOUR_KEY>' Step Importing modules step two. core code, create Python file, name anything like, import required modules. Discord: Discord offers library leveraging feature-rich API. Os: environment variables, Importing them involves using module. Random: used apply different random operations data. Dotenv: Importing main Python file from the.env file. import discord import import random from dotenv import load_dotenv Step Setting Variables load_dotenv() client discord.Bot() token os.getenv('TOKEN') Importing environment variables using load dotenv() function. discord client created, request sent discord API, lastly, environment variable token obtained initialised. Step Launching @client.event async on_ready(): print("Logged {0.user}".format(client)) When client been initialised, leveraging ready() event supplied Discord API, which will cause given operation performed. name being printed right now. Step Setting answers step five have configured bots respond user messages appropriately. This accomplished using Discord event message, which accepts message parameter provides information message, author, channel which sent. Etc First, gather details about communication, such username, channel, message content. message sent itself, then next line crucial. this condition met, then don't respond will activated random channel created server, though activate other channels well. While writing numerous if-else lines will suffice, machine learning also used construct chatbot. Here, created if-else statements react common greetings like "hi," "hello," "bye," well straightforward statement deliver joke. always expand features increase interactivity your bot. Step Jogging Robot client that developed above includes function called that accepts input auth token launches invoking ready event. client.run(token) Output: Next TopicPython Documentation Best Practices prev next