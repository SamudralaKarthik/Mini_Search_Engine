next prev Python Collection Module Python collection module defined container that used store collections data, example list, dict, set, tuple, etc. introduced improve functionalities built-in collection containers. Python collection module first introduced 2.4 release. There different types collection modules which follows: namedtuple() Python namedtuple() function returns tuple-like object with names each position tuple. used eliminate problem remembering index each field tuple object ordinary tuples. Examples pranshu ('James', 'M') print(pranshu) Output: ('James', 'M') OrderedDict() Python OrderedDict() similar dictionary object where keys maintain order insertion. insert again, previous value will overwritten that key. Example import collections d1=collections.OrderedDict() d1['A']=10 d1['C']=12 d1['B']=11 d1['D']=13 k,v d1.items(): print (k,v) Output: defaultdict() Python defaultdict() defined dictionary-like object. subclass built-in dict class. provides methods provided dictionary takes first argument default data type. Example from collections import defaultdict number defaultdict(int) number['one'] number['two'] print(number['three']) Output: Counter() Python Counter subclass dictionary object which helps count hashable objects. Example from collections import Counter Counter() list [1,2,3,4,5,7,8,5,9,6,10] Counter(list) Counter({1:5,2:4}) list [1,2,4,7,5,1,6,7,6,9,1] Counter(list) print(c[1]) Output: deque() Python deque() double-ended queue which allows remove elements from both ends. Example from collections import deque list ["x","y","z"] deq deque(list) print(deq) Output: deque(['x', 'y', 'z']) Chainmap Objects chainmap class used groups multiple dictionary together create single list. linked dictionary stores list public accessed attribute. Consider following example. Example from collections import ChainMap baseline {'Name': 'Peter', 'Age': '14'} adjustments {'Age': '14', 'Roll_no': '0012'} print(list(ChainMap(adjustments, baseline))) Output: ['Name', 'Age', 'Roll_no' UserDict Objects UserDict behaves wrapper around dictionary objects. dictionary accessed attribute using UserDict object. provides easiness work with dictionary. provides following attribute. data real dictionary used store contents UserDict class. UserList Objects UserList behaves wrapper class around list-objects. useful when want functionality lists. provides easiness work with dictionary. provides following attribute. data real list used store contents User class. UserString Objects UserList behaves wrapper class around list objects. dictionary accessed attribute using UserString object. provides easiness work with dictionary. provides following attribute. data real object used store contents UserString class. Next TopicPython math module prev next