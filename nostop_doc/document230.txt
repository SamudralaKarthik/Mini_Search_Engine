next prev Python Statement Introduction Python, keyword generally used delete object. Since everything Python represents some kind object, keyword also used delete lists, variables, parts list, etc. statement does return type value. Syntax statement obj_name Note: keyword, obj_name lists, dictionaries, user-defined objects, variables, etc. Examples Statement Let's look some examples statements delete some items. Example this program will delete variable using statement print(c) delete variables print variable after delete print(c) Output: Traceback (most recent call last): File line NameError: name defined Example this program will delete list slice list using keyword items_1 items_2 =["a", "b", "c", "d", "e", "f"] print items_1 items_2 print(items_1) print(items_2) delete element items_1 items_1[2] check element items_1 deleted print(items_1) slice items_1 from index items_1[4:9] check elements from index items_1 deleted print(items_1) delete element items_2 items_2[1] check element items_2 deleted print(items_2) delete items_2 items_2 check items_2 exists print(items_2) Output: ['a', 'b', 'c', 'd', 'e', 'f'] ['a', 'c', 'd', 'e', 'f'] Traceback (most recent call last): File line NameError: name 'items_2' defined Example this program, will statement delete dictionaries key-value pairs dictionary_1 {"up": "down", "forward": "backward", "small": "down"} dictionary_2 {"short": "long", "you": "me", "Jack": "John"} check dictionary_1 dictionary_2 exists print(dictionary_1) print(dictionary_2) delete key-value pair with "up" from dictionary_1 dictionary_1["up"] check key-value pair with "up" from dictionary_1 deleted print(dictionary_1) delete dictionary_2 dictionary_2 check dictionary_2 exists print(dictionary_2) Output: {'up': 'down', 'forward': 'backward', 'small': 'down'} {'short': 'long', 'you': 'me', 'Jack': 'John'} {'forward': 'backward', 'small': 'down'} Traceback (most recent call last): File line NameError: name 'dictionary_2' defined Example Delete User-Defined Object defining class class employee: name "John wik" address "C-26, London" phone_no 61562347 declaring object employee class employee() print employee data print("Name: emp.name) print("Age: emp.age) print("Address: emp.address) print("Phone emp.phone_no) deleting object printing values will generate NameError print("Name: emp.name) print("Age: emp.age) print("Address: emp.address) print("Phone emp.phone_no) Output: Name: John wik Age: Address: C-26, London Phone 61562347 Traceback (most recent call last): File line NameError: name 'emp' defined Next TopicLooping technique Python prev next