next prev Tkinter PanedWindow PanedWindow widget acts like Container widget which contains more child widgets (panes) arranged horizontally vertically. child panes resized user, moving separator lines known sashes using mouse. Each pane contains only widget. PanedWindow used implement different layouts python applications. syntax PanedWindow given below. Syntax w= PanedWindow(master, options) list possible options given below. Option Description represents background color widget when doesn't have focus. represents border size widget. default option specifies that trough contains border whereas arrowheads slider contain 2-pixel border size. borderwidth represents border width widget. default pixel. cursor mouse pointer changed specified cursor type when over window. handlepad This option represents distance between handle sash. horizontal orientation, distance between sash handle. default pixels. handlesize represents size handle. default size pixels. However, handle will always square. height represents height widget. specify height, will calculated height child window. orient orient will HORIZONTAL want place child windows side side. VERTICAL want place child windows from bottom. relief represents type border. default FLAT. sashpad represents padding done around each sash. default sashrelief represents type border around each sash. default FLAT. sashwidth represents width sash. default pixels. showhandle True display handles. default value false. Width represents width widget. don't specify width widget, will calculated size child widgets. Methods There following methods that associated with PanedWindow. Method Description add(child, options) used window parent window. get(startindex, endindex) This method used text present specified range. config(options) used configure widget with specified options. Example !/usr/bin/python3 from tkinter import add(): int(e1.get()) int(e2.get()) leftdata str(a+b) left.insert(1,leftdata) PanedWindow() w1.pack(fill BOTH, expand left Entry(w1, w1.add(left) PanedWindow(w1, orient VERTICAL) w1.add(w2) Entry(w2) Entry(w2) w2.add(e1) w2.add(e2) bottom Button(w2, text "Add", command add) w2.add(bottom) mainloop() Output: Next TopicTkinter LabelFrame prev next