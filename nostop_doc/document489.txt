next prev Statistic with Python this tutorial, will learn statistics component using Python, solving statistic problems also explore concept behind Statistics concept that every data science enthusiast should have good understanding Python provides some statistic libraries that comprehensive, widely used, powerful. These libraries help smooth working with data Statistic collection data, tabulation, interpolation numeric data. allows describe, summarize, represent data visually. Statistic field applied mathematics concern with interpolation, visual representation data, data collection analysis. There types statistic Descriptive statistic inferential statistic. will cover descriptive statistic this tutorial. Some Python Statistics Libraries Python provides many libraries that used statistic will describe some most important widely used libraries. Numpy This library widely used numerical computing, optimized scientific calculation. third-party library helpful working with single multidimensional arrays. ndarray primary array type. comes with many methods statistical analysis. SciPy third-party library used scientific computation based Numpy. extends Numpy features including scipy.stats statistical analysis. Pandas based Numpy library. also used numerical computation. outshines handling labeled one-dimensional data with Series two-dimensional (2D) labeled with DataFrame objects. Matplotlib This library works more effectively combination with Scipy, NumPy, Pandas. Python built-in statistics Library Python's built-in library used descriptive statistic. performs effectively dataset small can't depend importing other libraries. Measure Central Tendency measure central tendency represents single value that attempts define whole data. consists three main central tendencies. Mean Median Median Median High Mode Calculate Mean Mean represents observations divided total number observation. also refer average which divided count. Python's statistic library provides mode() method that returns mean, raises StatisticError, passed argument empty. Let's understand following example Example Python example check working mean() method importing statistics module import statistics find_mean(list1): return statistics.mean(observation_list) initializing observation list observation_list print ("The average list values ",end="") print (find_mean(observation_list)) Output: mean value Explanation above code, have imported statistic module initialized list that contains observation values. passed list into mean() method that returned average list values. also calculate mean using built-in sum() which takes iterable numeric values gives their total sum. len() method returns length object iterable (string, list, tuple, byte, dictionary, range). Example list1 mean sum(list1)/len(list1) print("The mean is:", mean) Output: mean Calculate Median Median represents middle value dataset which splits data into halves. Median calculated calculating average central elements case even dataset otherwise central element would odd. Numbers N+1/2 Even Numbers n/2, n/2+1 statistics library provides median() method calculate median, middle element data. raises StatisticError, passed argument empty. Let's understand following example. Example Python program show working median() importing statistics module from statistics import median Importing fractions module from fractions import Fraction find_median(value): return median(value) integer value tuple value_set1 floating point values tuple value_set2 (4.4, 2.1, 6.8, 8.0) tuple fractional numbers value_set3 (fr(1, fr(40, 15), 		fr(20, fr(12, 30)) positive negative integers value_set4 (-5, Printing median above datasets print("Median data-set (find_median(value_set1))) print("Median data-set (find_median(value_set2))) print("Median data-set (find_median(value_set3))) print("Median data-set (find_median(value_set4))) Output: Median data-set Median data-set 5.6 Median data-set 23/15 Median data-set 0.0	 Calculate Median median_low() method used median data data odd. data even, returns lower middle elements. raises StatisticError, passed argument empty. Let's understand following example. Example importing statistics module import statistics data_set1 data_set2 Print median data-set Median value print("Median (statistics.median(data_set1))) Print median data-set print("Low Median even data statistics.median_low(data_set1)) print("Low Median data statistics.median_low(data_set2)) Output: Median Median even data Median data Calculate Median High median_high() method used median data data odd. data even, returns lower middle elements. raises StatisticError, passed argument empty. Let's understand following example. Example importing statistics module import statistics data_set1 data_set2 Print median data-set Median value print("Median statistics.median(data_set1)) Print median data-set print("Low Median even data statistics.median_low(data_set1)) print("Low Median data statistics.median_low(data_set2)) Output: Median Median even data Median data Measure Variability have learned about measure central tendency describe data. also need know about measure variability. Measure variability states well data distributed. Below most common variability measure. Range Variance Standard deviation Calculate Range range known difference between largest smallest data point. range bigger more spread data vice versa. range Largest data value smallest data value Let's understand following example Example Sample List list1 [20, getting maximum max(list1) getting minimum min(list1) Difference range maximum-minimum	 print("Maximum Minimum Range {}".format( 	maximum, minimum, range)) Output: Maximum Minimum Range Explanation above code, assigned list with some data calculated using built-in max() method using min() method. Calculate Variance variance statistical measure spread between numbers data set. calculate variance, following formula. Where Ïƒ2 population variance each value population mean number values population Python's statistics module provides varience() method. Let's understand following example. Example Python code calculate variance using variance() importing statistics module from statistics import variance importing fractions parameter values from fractions import Fraction tuple positive integers data1 tuple negative integers data2 (-3, tuple positive negative numbers data3 (10, tuple fractional numbers data4 (fr(2, fr(2, fr(3, 		fr(5, fr(7, Print variance each samples print("Variance data1 (variance(data1))) print("Variance data2 (variance(data2))) print("Variance data3 (variance(data3))) print("Variance data4 (variance(data4))) Output: Variance data1 11.238095238095237 Variance data2 10.666666666666666 Variance data3 69.64285714285714 Variance data4 1277/36000 Calculate Standard Deviation square root variance. calculate standard deviation, following example. Where standard deviation each value mean number values population Python's statistics module provides stdev() method. Let's understand following example. Example Python code calculate variance using variance() importing statistics module from statistics import stdev importing fractions parameter values from fractions import Fraction tuple positive integers data1 tuple negative integers data2 (-3, tuple positive negative numbers data3 (10, tuple fractional numbers data4 (fr(2, fr(2, fr(3, 		fr(5, fr(7, Print variance each samples print("Standard Deviation data1 (stdev(data1))) print("Standard Deviation data2 (stdev(data2))) print("Standard Deviation data3 (stdev(data3))) print("Standard Deviation data4 (stdev(data4))) Output: Standard Deviation data1 3.352326839390103 Standard Deviation data2 3.265986323710904 Standard Deviation data3 8.345229603962801 Standard Deviation data4 0.18834070782022197 multimode() Method This method returns most frequently occurring values. returns values order first occurrence data. return multiple results there multiple modes. Let's understand following example. Example import statistics statistics.multimode('aaaaaabbbbccdddddddddddeeffffgg') print(a) Output: ['d'] will cover some important statistics topics data science that will help understand this topic most precisely. Python Statistics Probability Theory have discussed perform basic operations using statistics library Python. Probability theory highly valuable learning statistics with python. It's analysis random phenomena means random event produce non-predictive. There various possible outcomes eventual outcome resolute chance. Probability theory consists conceptual origins statistics. Statistical Modeling Fitting Python Statistical models represent what produces data used data analysis. helps summarize data, simulate, predict data. other words, used generate data used summaries, predictions simulations. However, essential that should also able ascertain whether your data fits that model. Data estimation suitable provide best between model estimation. Conclusion This tutorial included learn statistics using Python programing language. have covered basic operations including types statistics, find mean, median, mode using statistics library. have also explored measure central tendency including calculate standard deviation, variance, range. This tutorial gives idea about descriptive statistics using Python. Next TopicWhat Python? Global Interpreter Lock prev next