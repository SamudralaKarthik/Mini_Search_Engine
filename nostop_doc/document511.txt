next prev Python os.chdir() Method module Python includes chdir() function. current working directory used utilize default path command execution, directory creation, file creation. current working directory frequently used commands functions command-line interfaces like bash, MS-DOS, PowerShell. change current working directory, chdir() technique. About module: When working with Python, there many moments when we'd like take advantage underlying operating system's features. This made possible python module, which allows communicate with underlying operating system various ways provides portable mechanism employ operating system-dependent functionality. Python's built-in operating system dependant modules designed that they utilize same interface long same functionality accessible. module also provides extensions specific given operating system, although utilizing them ultimately compromises portability. functions that take path file names accept both bytes string objects input, output also object same type path file name returned. When incorrect unavailable file names paths, other parameters that have right type recognized operating system, methods python module raise OSError subclasses thereof). module allows operating system-dependent functions only want read write file, open(), os.path module want change paths, file input module want read lines files command line. tempfile module used create temporary files directories, while shutil module handle high-level file directory operations. Notes these functionalities' availability: Python's built-in operating system dependant modules designed such that they utilize same interface long same capability available; example, function os.stat(path) provides stat information about path same manner (which happens have originated with POSIX interface). module also provides extensions specific given operating system; however, utilizing them compromises portability. path file name supplied, functions handling path file names accept both bytes string objects return object same kind. popen, os.fork, os.execv, os.spawn*p* supported VxWorks. Code: sample python code show usage chdir() method provided library python importing required libraries import import class written that will have member functions which will perform various operations like Changing current directory another directory which will specified parameter that function listing content particular directory class NirnayOSClass: __init__(self): pass this function used print current working directory program execution there parameter this function also doesn't return value will just print current working directory print_current_working_directory(self): os.getcwd() print("The present working directory {}".format(cwd)) this function used change current working directory directory which specified parameter this function this function performs operation changing present working directory there parameter this function that holds path current working directory which want change return type this function Boolean that means returns true successful change directory current working directory other hand specified path which want change invalid there some issue while changing current working directory return type this function will changed false changed_current_working_directory(self,path_to_new_dir): os.getcwd() return_code os.chdir(path_to_new_dir) print("Directory changed from {}.".format(cwd,path_to_new_dir)) this function used list contents particular directory this function performs similar task command Linux there parameter this function which part directory whose content want list directory which passed parameter this function will considered current working directory program executions files directories inside that particular directory listed. list_files_in_the_directory(self,dir_path_to_list): dir_path_to_list os.getcwd() list_of_contents os.listdir(dir_path_to_list) print("The contents current directory are::") file_or_folder_name list_of_contents: print(file_or_folder_name,end="\t") print() main function used create object above-written class call various functions that will perform different operations like printing current working directory changing current working directory directory which specified parameter that function last listing contents particular directory main(): while(True): print("Please choose appropriate options::") print("1. check current directory code execution. (using getcwd() function)") print("2. change current directory code execution. (using chdir() function)") print("3. list contents directory code execution. (using listdir() function)") print("4. exit from code execution.") menu_choice input() menu_choice int(menu_choice) dir_entity NirnayOSClass() user chooses first option which printing current working directory once user chooses first option user displayed with complete absolute path current working directory which code getting executed right menu_choice dir_entity.print_current_working_directory() selection second choice which changing current working directory code execution first user asked complete absolute path directory which want change current working directory once user provides absolute path user prompted with message saying that current working directory code execution been changed successfully successful change director elif menu_choice print(">Enter absolute path directory which want change::") input_str input() dir_entity.changed_current_working_directory(input_str) user Third option which listing contents current working directory contents current working directory which code getting executed listed incase user changed current working directory content latest directory which user moved displayed elif menu_choice input_str dir_entity.list_files_in_the_directory(input_str) print("Do want continue exit code execution?[y/n]") continue_or_exit input() #After completion round question prompted user asking whether want continue code execution want exit code depending upon input provided user further actions taken user wants continue code execution perform further operations related listing dir, code continued whereas other hand user wants exit code execution exit function called program ended continue_or_exit continue_or_exit 'Y': pass elif continue_or_exit continue_or_exit 'N': sys.exit() __name__ '__main__': main() Output: Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. present working directory want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. >Enter absolute path directory which want change:: level_1_dir Directory changed from level_1_dir. want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. present working directory /level_1_dir want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. contents current directory are:: level_2_dir_1	level_2_dir_2	level_2_dir_3	 want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. >Enter absolute path directory which want change:: level_2_dir_1 Directory changed from /level_1_dir level_2_dir_1. want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. present working directory /level_1_dir/level_2_dir_1 want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. contents current directory are:: test_files_1_2_1_no4	test_files_1_2_1_no9	test_files_1_2_1_no8	test_files_1_2_1_no1	test_files_1_2_1_no7	test_files_1_2_1_no6	test_files_1_2_1_no10	test_files_1_2_1_no2	test_files_1_2_1_no3	test_files_1_2_1_no5	 want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. >Enter absolute path directory which want change:: /level_1_dir/level_2_dir_3 Directory changed from /level_1_dir/level_2_dir_1 /level_1_dir/level_2_dir_3. want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. present working directory /level_1_dir/level_2_dir_3 want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. contents current directory are:: test_files_1_2_3_no7	test_files_1_2_3_no8	test_files_1_2_3_no3	test_files_1_2_3_no5	test_files_1_2_3_no10	level_3_dir	test_files_1_2_3_no9	test_files_1_2_3_no6	test_files_1_2_3_no2	test_files_1_2_3_no4	test_files_1_2_3_no1	 want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. >Enter absolute path directory which want change:: level_3_dir Directory changed from /level_1_dir/level_2_dir_3 level_3_dir. want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. present working directory /level_1_dir/level_2_dir_3/level_3_dir want continue exit code execution?[y/n] Please choose appropriate options:: check current directory code execution. (using getcwd() function) change current directory code execution. (using chdir() function) list contents directory code execution. (using listdir() function) exit from code execution. contents current directory are:: test_file1	test_file8	test_file2	test_file4	test_file3	test_file5	test_file7	test_file6	test_file9	test_file10	 want continue exit code execution?[y/n] Explanation: let's look output above-written code. code written above, have created different functions different functionalities related directories. This functionality like printing current working directory code execution changing current working directory working directory code execution. last another functionality list contents current working directory. last, menu-driven code written, which used providing user these three functionalities options. execution, have executed code root directory. After that, have change current working directory code execution level directory, which consists three more directories which have confirmed opting third option, which prints contents level direct current working directory code execution level direct have opted option change current working directory level directory then, have listed contents this directory selecting options that list contents within current working directory. perform these steps couple times with code execution selecting option when code asks whether want continue code execution hold code execution. this article, have seen chdir() method provided module python. have also understood various case scenarios users this function understood actual implementation with help sample code. Next TopicBalancing Parentheses Python prev next