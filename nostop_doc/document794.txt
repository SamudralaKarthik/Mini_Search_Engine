next prev Create Calendar using PyQt5 Python calendar created python using PyQt5 module widget QCalendar. most recent version Riverbank Computing's widget toolkit PyQt5. most effective well-liked cross-platform libraries, Python interface. Python programming language library combined PyQt5. PyQt build graphical apps with this basic tutorial. Date picking controls quality reasons that makes QCalendar widget more helpful. offers month-based perspective. With today's date default, user choose date using mouse keyboard. specify calendar's date range well. class QCalendarWidget, which part QWidgets class, offers monthly-based calendar widget that lets user choose date. organise days social, religious, business, administrative objectives, calendars. This accomplished providing names discrete time intervals, most often days, weeks, months, years. such system, date designates single, particular day. Here some this class's useful methods which will used code setDateRange() This establishes lower upper dates that chosen. setFirstDayOfWeek() setFirstDayOfWeek() determines first column calendar. present constants Monday setting Monday. Tuesday setting Tuesday. Wednesday setting Wednesday. Thursday setting Thursday. Friday setting Friday. Saturday setting Saturday. Sunday setting Sunday. setMinimumDate() This used lower date selection. setMaximumDate() This establishes deadline selection. setSelectedDate() This establishes QDate object chosen date. showToday() This displays current month. selectedDate() Retrievr chosen date using this. setGridvisible() This helps controlling Calendar grid visibility. Walking through code importing required modules from PyQt5.QtWidgets import from PyQt5 import QtCore, QtGui from PyQt5.QtGui import from PyQt5.QtCore import import First all, will import modules that will needing create this GUI. These modules include QtWidgets, QtCore, QtGui sys. class Window(QMainWindow): 	def __init__(self): 		super().__init__() window title 		self.setWindowTitle("Python window geometry 		self.setGeometry(100, 100, 600, 400) calling components func. 		self.UiComp() Displaying present widgets 		self.show() Then, will create class Window window. After initialization, title, geometry window will display widgets. Also, will call function introducing Uicomponents. function various components 	def UiComp (self): Defining QCalendarWidget object 		clndr QCalendarWidget(self) geometry calendar 		clndr.setGeometry(10, 580, 380) Then, defined function Uicomp() which includes QCalendarWidget which will display calendar then will geometry too. creating pyqt5 application Base QApplication(sys.argv) creating instance Window made window Window() starting application sys.exit(Base.exec()) Ultimately, will create application creating instance object executing application using exit method. Complete code Python program create calendar using PyQt5 importing required modules from PyQt5.QtWidgets import from PyQt5 import QtCore, QtGui from PyQt5.QtGui import from PyQt5.QtCore import import class Window(QMainWindow): 	def __init__(self): 		super().__init__() window title 		self.setWindowTitle("Python window geometry 		self.setGeometry(100, 100, 600, 400) calling components func. 		self.UiComp() Displaying present widgets 		self.show() function various components 	def UiComp (self): Defining QCalendarWidget object 		clndr QCalendarWidget(self) geometry calendar 		clndr.setGeometry(10, 580, 380) creating pyqt5 application Base QApplication(sys.argv) creating instance Window made window Window() starting application sys.exit(Base.exec()) Output: user view different months window with QCalendarWidget choose day. output above implemented code been attached here screenshot. Next TopicSnake Game using PyGame Python prev next