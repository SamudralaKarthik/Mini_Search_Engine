next prev Static Python static variable static method widely used programming concepts various languages such C++, PHP, Java, etc. These variables methods belong class objects. this section, will learn create static variables methods Python. Python Static Variable When declare variable inside class, outside method, called static class variable. called directly from class through instances class. However, static variables quite different from other member, does conflict with same variable name Python program. Let's consider program demonstrate static variables Python. Static.py class Employee: create Employee class name dept 'Information technology' define class variable __init__(self, name, id): self.name name instance variable self.id instance variable Define objects Employee class emp1 Employee('John', 'E101') emp2 Employee('Marcus', 'E105') print (emp1.dept) print (emp2.dept) print (emp1.name) print (emp2.name) print (emp1.id) print (emp2.id) Access class variable using class name print (Employee.dept) print department change department particular instance emp1.dept 'Networking' print (emp1.dept) print (emp2.dept) change department instances class Employee.dept 'Database Administration' print (emp1.dept) print (emp2.dept) Output: Information technology Information technology John Marcus E101 E105 Information technology Networking Information technology Networking Database Administration above example, dept class variable defined outside class methods inside class definition. Where name instance variable that defined inside method. Access static variable using same class object directly access static variable Python using same class object with operator. Let's consider program access static variable Python using same class object. staticVar.py class Car: define class variable static variable class 'This good Car.' create object class Car() Access static variable using class name with operator. print ("Lucky No.", Car.num) print (Car.msg) Output: Lucky This good Static Method Python static method that belongs class. just like static variable that bounds class rather than class's object. static method called without creating object class. means directly call static method with reference class name. Furthermore, static method constrained with class; hence cannot change state object. Features static methods Following features static method: static method Python related class. called directly from class reference class name. cannot access class attributes Python program. bound only class. cannot modify state object also used divide utility methods class. only defined inside class objects class. objects class share only copy static method. There ways define static method Python: Using staticmethod() Method Using @staticmethod Decorator Using staticmethod() Method staticmethod() built-in function Python that used return given function static method. Syntax: staticmethod (function) staticmethod() takes single parameter. Where passed parameter function that needs converted static method. Let's consider program create function static method using staticmethod() Python. staticMethod.py class Marks: Math_num(a, define static Math_num() function return Sci_num(a, define static Sci_num() function return Eng_num(a, define static Eng_num() function return create Math_num static method Marks.Math_num staticmethod(Marks.Math_num) print total marks Maths print Total Marks Maths" Marks.Math_num(64, 28)) create Sci_num static method Marks.Sci_num staticmethod(Marks.Sci_num) print total marks Science print Total Marks Science" Marks.Sci_num(70, 25)) create Eng_num static method Marks.Eng_num staticmethod(Marks.Eng_num) print total marks English print Total Marks English" Marks.Eng_num(65, 30)) Output: Total Marks Maths Total Marks Science Total Marks English above program, declared Math_num method, Sci_num method, Eng_num method static method outside class using staticmethod() function. After that, call static method directly using class name Marks. Using @staticmethod Decorator @staticmethod inbuilt decorator that defines static method inside class. does receive argument reference class instance class calling static method itself. Syntax: class Abc: @staticmethod function_name (arg1, arg2, ?): Statement executed Returns: static method function function_name Note: @staticmethod modern approach define method static method, most programmer uses this approach Python programming. Let's create program define static method using @staticmethod decorator Python. staticFun.py class Marks: @staticmethod Math_num(a, define static Math_num() function return @staticmethod Sci_num(a, define static Sci_num() function return @staticmethod Eng_num(a, define static Eng_num() function return print total marks Maths print Total Marks Maths" Marks.Math_num(64, 28)) print total marks Science print Total Marks Science" Marks.Sci_num(70, 25)) print total marks English print Total Marks English" Marks.Eng_num(65, 30)) Output: Total Marks Maths Total Marks Science Total Marks English Access static method using same class object Consider program access static method class using @staticmethod Python. Test.py class Test: define static method using @staticmethod decorator Python. @staticmethod beg(): print ("Welcome World!! create object class Test Test() call static method obj.beg() Output: Welcome World!! Function returns value using static method Let's write program return value using @staticmethod Python. Static_method.py class Person: @staticmethod (age): (age 18): check whether Person eligible vote not. print ("The person eligible vote.") else: print ("The person eligible vote.") Person.Age(17) Output: person eligible vote. Next TopicHow current date Python prev next