next prev Python Tkinter Entry Entry widget used provde single line text-box user accept value from user. Entry widget accept text strings from user. only used line text from user. multiple lines text, must text widget. syntax Entry widget given below. Syntax Entry (parent, options) list possible options given below. Option Description background color widget. border width widget pixels. cursor mouse pointer will changed cursor type arrow, dot, etc. exportselection text written inside entry will automatically copied clipboard default. exportselection copy this. represents color text. font represents font type text. highlightbackground represents color display traversal highlight region when widget does have input focus. highlightcolor represents color traversal highlight rectangle that drawn around widget when input focus. highlightthickness represents non-negative value indicating width highlight rectangle draw around outside widget when input focus. insertbackground represents color background area covered insertion cursor. This color will normally override either normal background widget. insertborderwidth represents non-negative value indicating width border draw around insertion cursor. value have forms acceptable Tk_GetPixels. insertofftime represents non-negative integer value indicating number milliseconds insertion cursor should remain "off" each blink cycle. this option zero, then cursor doesn't blink: time. insertontime Specifies non-negative integer value indicating number milliseconds insertion cursor should remain "on" each blink cycle. insertwidth represents value indicating total width insertion cursor. value have forms acceptable Tk_GetPixels. justify specifies text organized text contains multiple lines. relief specifies type border. default value FLAT. selectbackground background color selected text. selectborderwidth width border display around selected task. selectforeground font color selected task. show used show entry text some other type instead string. example, password typed using stars (*). textvariable instance StringVar retrieve text from entry. width width displayed text image. xscrollcommand entry widget linked horizontal scrollbar want user enter more text then actual width widget. Example !/usr/bin/python3 from tkinter import Tk() top.geometry("400x250") name Label(top, text "Name").place(x 30,y email Label(top, text "Email").place(x password Label(top, text "Password").place(x 130) sbmitbtn Button(top, text "Submit",activebackground "pink", activeforeground "blue").place(x 170) Entry(top).place(x Entry(top).place(x Entry(top).place(x 130) top.mainloop() Output: Entry widget methods Python provides various methods configure data written inside widget. There following methods provided Entry widget. Method Description delete(first, last none) used delete specified characters inside widget. get() used text written inside widget. icursor(index) used change insertion cursor position. specify index character before which, cursor placed. index(index) used place cursor left character written specified index. insert(index,s) used insert specified string before character placed specified index. select_adjust(index) includes selection character present specified index. select_clear() clears selection some selection been done. select_form(index) sets anchor index position character specified index. select_present() returns true some text Entry selected otherwise returns false. select_range(start,end) selects characters exist between specified range. select_to(index) selects characters from beginning specified index. xview(index) used link entry widget horizontal scrollbar. xview_scroll(number,what) used make entry scrollable horizontally. Example: simple calculator import tkinter from functools import partial call_result(label_result, n1, n2): num1 (n1.get()) num2 (n2.get()) result int(num1)+int(num2) label_result.config(text="Result result) return root tk.Tk() root.geometry('400x200+100+200') root.title('Calculator') number1 tk.StringVar() number2 tk.StringVar() labelNum1 tk.Label(root, text="A").grid(row=1, column=0) labelNum2 tk.Label(root, text="B").grid(row=2, column=0) labelResult tk.Label(root) labelResult.grid(row=7, column=2) entryNum1 tk.Entry(root, textvariable=number1).grid(row=1, column=2) entryNum2 tk.Entry(root, textvariable=number2).grid(row=2, column=2) call_result partial(call_result, labelResult, number1, number2) buttonCal tk.Button(root, text="Calculate", command=call_result).grid(row=3, column=0) root.mainloop() Output: Next TopicPython Tkinter Frame prev next