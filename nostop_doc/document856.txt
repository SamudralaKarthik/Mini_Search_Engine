next prev Legb Rule Python LEGB rule, which would named just after Python scope names, used Python resolve names. Here's brief explanation what each these phrases means: code block body Python function lambda expression falls under local function) scope. names which provide inside function contained this Python scope. Only function's code will allow these names. will have many separate local scopes there function calls because formed function call, function definition. Each call would result creation fresh local scope. Only nested functions have enclosing nonlocal) scope, unique scope. variables that specify enclosing procedure contained this scope. code inner enclosing functions shows names inside enclosing scope. top-most scope Python program, script, module global module) scope. Every variables that specify level program module contained this Python scope. parts code names this Python scope. unique Python scope called "built-in scope" produced loaded each time script start interactive session. This scope includes names built-in Python terms like keywords, functions, exceptions, well other properties. Names this Python scope accessible across code well. Python loads automatically whenever launch program script. LEGB rule controls manner wherein Python looks names type name lookup operation. conclusion, names resolved when utilize nested functions first verifying local scope local scope innermost function. Then, from deepest scope outermost scope, Python examines surrounding scopes outer functions. Python then checks global well built-in scopes there isn't match. will receive warning name cannot located. Depending where within code during execution, there will only ever maximum four active Python scopes: local, enclosing, global, built-in. global well built-in scopes, contrast hand, will always least active scopes. These scopes constantly disposal. Example f(a): print(f'The value {a}') f(8) Output: value Explanation: global namespace, variable will defined with value function will defined with parameter that prints string parameter's value. When called, local namespace function initializes parameter with value line Python starts looking local namespace. then moves innermost namespace finds term that maps integer with value Python then stops looking there and8outputs "The value is," followed value that discovered, "8." Example f(b): g(c): print(f'The value {a}') g(b) f(3) Output: value Explanation: Line defines global namespace variable which value global namespace, define function line call line This generates function parameter with value local namespace (inside global namespace). Line calls which creates local namespace with parameter having value local namespace that previously created invoking enclosing namespace. have arrived print statement! Python looks object with name namespaces already use. Python tries enclosing namespace because there isn't similar variable local namespace. Python looks global namespace because declared there either. discover name that corresponds object with value there. Python thus outputs "The value is," then "2," which value global namespace. Next TopicPython Discord prev next