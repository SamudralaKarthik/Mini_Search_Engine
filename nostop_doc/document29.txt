next prev Python Modules This tutorial will explain construct import custom Python modules. Additionally, import integrate Python's built-in modules various methods. What Modular Programming? Modular programming practice segmenting single, complicated coding task into multiple, simpler, easier-to-manage sub-tasks. call these subtasks modules. Therefore, build bigger program assembling different modules that like building blocks. Modularizing code application benefits. Simplification: module often concentrates comparatively small area overall problem instead full task. will have more manageable design problem think about only concentrating module. Program development simpler much less vulnerable mistakes. Flexibility: Modules frequently used establish conceptual separations between various problem areas. less likely that changes module would influence other portions program modules constructed fashion that reduces interconnectedness. might even capable editing module despite being familiar with program beyond it.) increases likelihood that group numerous developers will able collaborate project. Reusability: Functions created particular module readily accessed different sections assignment (through suitably established api). result, duplicate code longer necessary. Scope: Modules often declare distinct namespace prevent identifier clashes various parts program. Python, modularization code encouraged through functions, modules, packages. What Modules Python? document with definitions functions various statements written Python called Python module. Python, define module ways: Python itself allows creation modules. Similar (regular expression) module, module primarily written programming language then dynamically inserted run-time. built-in module, such itertools module, inherently included interpreter. module file containing Python code, definitions functions, statements, classes. example_module.py file module will create whose name example_module. employ modules divide complicated programs into smaller, more understandable pieces. Modules also allow reuse code. Rather than duplicating their definitions into several applications, define most frequently used functions separate module then import complete module. Let's construct module. Save file example_module.py after entering following. Code Python program show create module. defining function module reuse square( number """This function will square number passed it""" result number return result Here, module called example_module contains definition function square(). function returns square given number. Import Modules Python? Python, import functions from module into program, into, another module. this, make import Python keyword. Python window, next import keyword, name module need import. will import module defined earlier example_module. Code import example_module functions that defined example_module immediately imported into present program. Only name module, i.e., example_ module, imported here. operator functions using module name. instance: Code result example_module.square( print( using module square number result Output: using module square number There several standard modules Python. complete list Python standard modules available. list seen using help command. Similar imported module, user-defined module, import statement import other standard modules. Importing module done variety ways. Below list them. Python import Statement Using import Python keyword operator, import standard module access defined functions within Here's illustration. Code Python program show import standard module will import math module which standard module import math print( "The value euler's number is", math.e Output: value euler's number 2.718281828459045 Importing also Renaming While importing module, change name too. Here example show. Code Python program show import module rename will import math module give different name import math print( "The value euler's number is", mt.e Output: value euler's number 2.718281828459045 math module named this program. some circumstances, might help type faster case modules having long names. Please take note that scope program does include term math. Thus, mt.pi proper implementation module, whereas math.pi invalid. Python from...import Statement import specific names from module without importing module whole. Here example. Code Python program show import specific objects from module will import euler's number from math module using from keyword from math import print( "The value euler's number is", Output: value euler's number 2.718281828459045 Only constant from math module imported this case. avoid using operator these scenarios. follows, import many attributes same time: Code Python program show import multiple objects from module from math import print( "The value constant print( "The value euler's number Output: value constant 6.283185307179586 value euler's number 2.718281828459045 Import Names From import Statement import objects from module within present namespace, symbol from import keyword. Syntax: from name_of_module import There benefits drawbacks using symbol advised unless certain particular requirements from module; otherwise, Here example same. Code importing complete math module using from math import accessing functions math module without using operator print( "Calculating square root: sqrt(25) print( "Calculating tangent angle: tan(pi/6) here also imported from math module Output: Calculating square root: Calculating tangent angle: 0.5773502691896257 Locating Path Modules interpreter searches numerous places when importing module Python program. Several directories searched built-in module present. list directories accessed using sys.path. Python interpreter looks module described below: module initially looked current working directory. Python then explores every directory shell parameter PYTHONPATH module cannot located current directory. list folders makes environment variable known PYTHONPATH. Python examines installation-dependent folders when Python downloaded that also fails. Here example print path. Code will import module import will import sys.path print(sys.path) Output: ['/home/pyodide', '/home/pyodide/lib/Python310.zip', '/lib/Python3.10', '/lib/Python3.10/lib-dynload', '/lib/Python3.10/site-packages'] dir() Built-in Function dir() method identify names declared within module. instance, have following names standard module str. print names, will dir() method following way: Code Python program print directory module print( "List functions:\n dir( end=", Output: List functions: ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'] Namespaces Scoping Objects represented names identifiers called variables. namespace dictionary containing names variables (keys) objects that with them (values). Both local global namespace variables accessed Python statement. When variables with same name local global, local variable takes role global variable. There separate local namespace every function. scoping rule class methods same regular functions. Python determines parameters local global based reasonable predictions. variable that allocated value method regarded being local. Therefore, must global statement before provide value global variable inside function. Python informed that Var_Name global variable line global Var_Name. Python stops looking variable inside local namespace. declare variable Number, instance, within global namespace. Since provide Number value inside function, Python considers Number local variable. UnboundLocalError will outcome access value local variable without before declaring global. Code Number AddNumber(): accessing global namespace global Number Number Number print( Number AddNumber() print( Number Output: Next TopicPython Exception Handling prev next