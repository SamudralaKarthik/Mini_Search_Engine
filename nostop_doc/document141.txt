next prev Encode Sequence Data Python this tutorial, will learn convert input output sequence data one-hot encoding sequence classification. Encoding useful feature machine learning because Machine learning algorithms cannot work with categorical data directly. While working with datasets, come across column that holds specific order preference. working with sequence classification type problem, categorical data must converted numbers. This technique also used when work with deep learning methods such Long Short-term Memory recurrent neural networks. First, will discuss Categorical Data. What Categorical Data? Categorical Data types variables that have label value rather than numerical values. These types variables also called nominal. Let's following example categorical data. "car" variable with values: "Maruti" "Jaguar". "food" variable with values: "Veg", "Non-Veg". "place" variable with values: "first", "second", "third". above code, some categories have natural relationship such natural ordering. third example, "place" variable natural ordering values. Problem with Categorical Data Some machine learning algorithms have ability work with categorical data directly. algorithms cannot operate label data directly because they require data variables output variables numeric. Therefore, have convert hierarchical data into numerical form. Suppose categorical variable output variable. that case, also want change forecasts model back into categorical form represent them them some application. Convert Categorical Data Numeric Data There methods that convert categorical data into numerical data. Integer Encoding One-Hot Encoding next section, will discuss One-Hot Encoding. What Encoding? encoding used convert categorical variables into numeric values. Before doing further data analysis, categorical values mapped integer values. Each column contains corresponding which column been placed. this process, each integer value represented binary vector that zero expect index integer, which marked with Example Encoding Let's understand using following simple example. Suppose have sequence labels with value 'yellow' 'red.' convert them into numerical value, assign 'yellow' integer value corresponding number categories present column 'red' When encounter these labels, will assign same integer value. called integer encoding. Let's another example Suppose there category called animal fours values Cat, Dog, Camel. Consider following table which consists animals their corresponding categorical values. Input Table Animal Categorical Value Animal Camel output will shown below after encoding. Camel represent above output vector form then will look like below. Camel Encoding? best advantages encoding that represents categorical data more expressive. discussed earlier, many machine learning algorithms cannot able work with categorical data directly, that needs converted into integer. integer value directly where needed. solve problem where natural ordinal relationship between categories. example assign integer values "weather" label, such 'winter', 'summer' 'Monsoon'. there problems ordinal relationship find. allow representation lean such relationship, might damaged learning solve problems. Manual Encoding following example, will consider example string alphabet letters that will converted into integer value. hello world Now, will implement coding above given string value. Let's following example. Example from numpy import argmax Here define input string str_data 'hello python' print(str_data) Here defining possible input values english alphabate eng_alphabet 'abcdefghijklmnopqrstuvwxyz define mapping chars integers char_to_int dict((c, enumerate(eng_alphabet)) int_to_char dict((i, enumerate(eng_alphabet)) input data encoding integer int_encoded [char_to_int[char] char data] print(int_encoded) encode onehot_encoded list() value int_encoded: letter range(len(eng_alphabet))] letter[value] onehot_encoded.append(letter) print(onehot_encoded) invert encoding inverted int_to_char[argmax(onehot_encoded[0])] print(inverted) Output: hello python [[0, Explanation: above code, have declared input string printed Next, defined universe possible input value. Then, mapping possible inputs created from char values integer values. used this mapping encode input string. above output, first letter encoded Then, this integer coding converted encoding. integer encodes character time. Each character specific index value; marked that index specific character first character represented binary vector marked index h. Now, will learn implement coding using scikit-learn library. Encode using Scikit-learn this example, let's assume following output sequence labels. "apple" "mango" "banana" example sequence time step apple, apple, mango, apple, banana, banana, mango, apple. encode with integer value above labels, such encoding, will binary vector with values, such sequence includes least example possible value sequence. will scikit-learn library. will LabelEncoder module from creating integer encoding labels OneHotEncoder creating encoding integer encode value. Let's understand following example. Example from numpy import array from numpy import argmax from sklearn.preprocessing import LabelEncoder from sklearn.preprocessing import OneHotEncoder defining sequence example data_1 ['apple', 'apple', 'mango', 'apple', 'banana', 'banana', 'mango', 'apple'] values_of_seq array(data_1) print(values_of_seq) first appling integer encode label_encoder LabelEncoder() integer_encoded label_encoder.fit_transform(values_of_seq) print(integer_encoded) doing binary encode onehot_encoder OneHotEncoder(sparse=False) integer_encoded integer_encoded.reshape(len(integer_encoded), onehot_encoded onehot_encoder.fit_transform(integer_encoded) print(onehot_encoded) Output: ['apple' 'apple' 'mango' 'apple' 'banana' 'banana' 'mango' 'apple'] [[1. 0.]] Explanation above code, first, have printed sequence labels. Then, performed integer encoding finally encoding. OneHotEncoder class returns well-organized sparse encoding. this efficient some application such with keras library. Encoding with Keras Let's suppose have sequence that already integer encoded. work with integer encoding directly integer encoding label values. to_categorical() function encodes integer data. this example, have five integer values have input sequence following numbers. data_1 Let's understand following example. Example from numpy import array from numpy import argmax from keras.utils import to_categorical define example data_1 data array(data_1) print(data) encoding using to_categorical() method encoded to_categorical(data) print(encoded) invert encoding inverted argmax(encoded[0]) print(inverted) Output: [[0. 0.]] Explanation above code, have encoded integer encoded binary vectors printed. Then, used Numpy argmax() function invert encoding first value sequence. Next TopicHow write square root Python prev next