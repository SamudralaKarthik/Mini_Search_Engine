next prev Simple FLAMES game Python Python programming language that serves multiple purposes programmers perform activity easily. Python also utilized game development. following tutorial, build simple FLAMES game without using external game libraries such PyGame. before started, briefly understand what FLAMES game What FLAMES game? FLAMES game named after abbreviation: Friends, Lovers, Affectionate, Marriage, Enemies, Siblings. famous game among young girls sleepovers, specifically with pre-teens teens starting explore world crushes. This game does precisely predict whether individual perfect someone not; however, play with friends. Play FLAMES game? FLAMES game originally played paper. Thus, general requirement this game pen/pencil paper. However, will playing this game Computer. method playing involves following steps: STEP Take names will start writing names. example, will "LOID FORGER" "YOR FORGER". STEP Cancel common letters both names will cancel common letters both names irrespectively case which letters written. Note that only have cancel instance letter both names, instances letter. above example, will "LID" "YR" from "LOID FORGER" "YOR FORGER". observe, have eliminated common letters G, from both words. STEP Count number remaining letters Once eliminate common letters, will count remaining letters both names. above example, will combine uncancelled letters "LIDYR" count total letters word. result, Step Compare number acronym FLAMES remove letters accordingly. will start assigning each number each letter acronym, like A..., till that number. Counting done anti-clockwise circular fashion. acronym, restart counter till number. example, will begin again until number. Once end, will remove that letter restart counting until only letter left. will then compare result with following table: Letter Meaning Friends Lovers Affectionate Marriage Enemies Siblings consider implementing above example compare number acronym FLAMES. There total letters present word. will start counting from F; fifth count, will eliminate begin counting again; however, this time, will start from Now, fifth count, will eliminate begin counting from fifth count, will eliminate begin counting from fifth count, will eliminate begin counting from fifth count will eliminate have only letter remaining; thus, this final answer. Hence, relationship i.e., Friends. Implementation FLAMES game Python will accept names input then remove common characters with their respective common occurrences. remove, will create user-defined function that will store list characters players' names respectively return list concatenated lists. Once remove common characters, will count total number remaining characters create result list with FLAMES acronyms, i.e., ["Friends", "Lovers", "Affectionate", "Marriage", "Enemies", "Siblings"]. will then begin removing word after word until list left with only word, with help count got. word which remains list will result. consider following snippet code demonstrating same: File: flames.py function removing common characters eliminateCommonChars(listOne, listTwo) range(len(listOne)) range(len(listTwo)) listOne[i] listTwo[j] listOne[i] listOne.remove(c) listTwo.remove(c) listThree listOne ["*"] listTwo return [listThree, True] listThree listOne ["*"] listTwo return [listThree, False] Driver code __name__ "__main__" playerOne input("First Player Name playerOne playerOne.lower() playerOne.replace(" playerOneList list(playerOne) playerTwo input("Second Player Name playerTwo playerTwo.lower() playerTwo.replace(" playerTwoList list(playerTwo) proceed True while proceed retList eliminateCommonChars(playerOneList, playerTwoList) conList retList[0] proceed retList[1] starIndex conList.index("*") playerOneList conList[ starIndex] playerTwoList conList[starIndex theCount len(playerOneList) len(playerTwoList) list FLAMES acronym ["Friends", "Lovers", "Affectionate", "Marriage", "Enemies", "Siblings"] while len(res) splitIndex (theCount len(res) splitIndex right res[splitIndex left res[ splitIndex] right left else res[ len(res) print final result print("Relationship Status res[0]) Explanation: above snippet code, have defined function eliminateCommonChars() remove common characters with their respective occurrences. This function accepts lists arguments. have used for-loops within this function iterate through these lists. have then checked common character found. have then removed that character returned list concatenated lists with True Flag. common characters found, another concatenated list returned with False Flag. have then defined main function that accepts users' names converts them into lower case, replacing space with empty string making list letters characters. have then assigned initial flag True. have then used while loop called eliminateCommonChars() function until common characters found keep looping until proceed flag True. then counted total remaining letters list created another list consisting FLAMES acronym. used while loop again kept looping until only item left list. have also stored index value from where have perform slicing. perform anti-clockwise circular fashion counting, have check split index greater than equal zero. last, have done list slicing list concatenation printed result. save this Python file execute following command command shell terminal output: Command: python flames.py Output First Player Name LOID FORGER Second Player Name YOR FORGER Relationship status Friends Output First Player Name STEVE ROGERS Second Player Name PEGGY CARTER Relationship status Lovers Next TopicAlarm Clock with Python prev next