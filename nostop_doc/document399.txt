next prev Python imaplib Module happens many times when want retrieve information data from mail through program, don't want download mail device. This even happens when want just fetch information look some particular data from mail. have many Python modules through which fetch data emails using program, most these modules download mail while retrieving information from them. This exactly what don't want because don't need save mail's information system many times working other's system, only have take look some specific information present emails. there some modules protocols available Python through which retrieve information from emails without actually downloading them system. such modules Python 'imaplib' module which provides access IMAP protocol accessing retrieving data from mail. will learn about this 'imaplib' module Python IMAP protocol this tutorial, will also learn this protocol retrieve information from emails. imaplib Module Python imaplib Python module library that provide with client classes that communication with IMAP version servers, through this IMAP communication, retrieve data from emails. imaplib library provides with three client classes that used while communicating with servers using IMAP protocol Python. Following three client classes that provided imaplib module Python: IMAP_4 IMAP4_Stream IMAP_SSL These classes imaplib module used communication with server while using IMAP protocol access emails' data through Python program. imaplib Module Python: Installation imaplib module pre-installed library Python that comes with Python installation packages, that's don't have installation process installing this library. Instead directly function imaplib module Python program importing into program using 'import' keyword. IMAP Protocol Python IMAP email retrieval protocol that stands Internet Mail Access Protocol, will this protocol through Python program have access data present email. IMAP protocol first proposed 1986, this module does download emails system retrieving data from them. IMAP module just reads data present emails displays them program's output. This protocol very helpful devices that present bandwidth condition. have IMAP module with imaplib module Python (which client-side library) retrieve data from emails. IMAP module will client classes imaplib module communication with server that retrieve data from emails show them output. Points IMAP Protocol: Following some points IMAP protocol that have remember very useful while using this protocol retrieving data from emails through should remember that email from which retrieve data through IMAP protocol held maintained remote server. IMAP protocol also helps search through emails establishing connection with server using client classes imaplib module. IMAP protocol also allows client programs (Python program which will this protocol) manipulate emails server without downloading them devices local computer. IMAP protocol also enables delete, manipulate, create single multiple remote message folder which called mailboxes. IMAP module also allows concurrent access multiple mailboxes multiple email accounts), will present multiple mail servers. IMAP protocol also allows take various actions emails without even reading email, such deleting mail, downloading mail, etc. These some points IMAP protocol which should remember, will very helpful while using this protocol Python program. perform actions that mentioned above points IMAP protocol. IMAP Commands IMAP protocol several different commands which used perform several different actions through Using these commands IMAP protocol, perform multiple actions email box, thus these commands help retrieve information from emails. Following list commands IMAP protocol with their description, which some them going implementation part this protocol: IMAP command Description Command LOGIN This command used open connection with email server logging into server through credentials will provide. SELECT this command select mailbox folder which mail want access, thus accesses emails present mailbox. even make changes mailbox after selecting mailbox through this SELECT command. CAPABILITY this command when want know capabilities that server supports, this requesting from server listing capabilities. CREATE When want create mailbox with some specified name, this CREATE command IMAP protocol. NOOP NOOP command acts like used periodic poll alert about messages update message status during some period inactivity EXAMINE EXAMINE command works same SELECT command, only difference between these commands that EXAMINE command doesn't allow make changes mailbox. This command only allows read retrieve information from mail check many emails present selected mailbox. RENAME When want change name mailbox from email, have RENAME perform same. DELETE DELETE command used permanently delete emails present mailbox have selected created, action performed this command cannot undone. LOGOUT When using IMAP protocol when have done work with emails, then want close connection with email server, this using LOGOUT command. This command informs email server that user done with session, session should closed. server will first send BYE response through protocol, followed response from client-side then connection with server will closed. These important command IMAP protocol. have these commands while using IMAP protocol retrieve information from mail make changes mailbox. also these commands while making closing connection with email server. imaplib Module Python: Implementation have learned IMAP protocol commands from this protocol used retrieve information from emails make changes mailbox previous sections this tutorial. implement this IMAP protocol Python through imaplib module using functions from this module program. learn implement IMAP protocol through imaplib module, will example program where functions from this module communicate with email server. Example: Look following Python program where will imaplib module make connection with email server: Import imaplib library program import imaplib Also import pprint module import pprint Targeting host server email imapHostServer 'imap.gmail.com' User email imapUserEmail 'forpythoncontent@gmail.com' Password user Email imapPassword 'NotAPassword' Connecting host server using client class imapVar imp.IMAP4_SSL(imapHostServer) Login email server with credentials imapVar.login(imapUserEmail, imapPassword) Mailbox folder where emails present imapVar.select('Inbox') Searching data through mail tmp, data imapVar.search(None, 'ALL') Using loop print data data[0].split(): 	tmp, data imapVar.fetch(n, '(RFC822)') 	print('Message: {0}\n'.format(n)) 	pp.pprint(data[0][1]) 	break Closing connection with server imapVar.close() Output: Message: b'1' (b'Delivered-To: [emailÂ protected]\r\nReceived: 2002:a05:6839:408' b'e:0:0:0:0 with SMTP dt14csp1139908nkc;\r\n Thu, 2021 21:1' b'8:23 -0800 (PST)\r\nX-Received: 2002:a02:6901:: with SMTP e1mr248002' b'85jac.0.1637299103144;\r\n Thu, 2021 21:18:23 -0800 (PST)\r\nA' b'RC-Seal: i=1; a=rsa-sha256; t=1637299103; cv=none;\r\n d=google.com'? https://notifications.google.c=\r\nom/' b'g/img/AD-FnEznfDyGI_ixnq3rHvh5p8bctFcd4ga52j55D-mp0uud4w.gif></body>\r\n b'</html>\r\n\r\n--000000000000b5138a05d11d6681--\r\n') see, data from emails present inbox printed output output will different everyone. Explanation: have first imported imaplib pprint module program their functions implementing IMAP protocol. imported imaplib pprint module program. After that, have initialized imapHostServer variable which defined server path email. Then, have initialized variables, i.e., imapUserEmail imapPassword, which defined User Email password email (The password defined program correct password security reasons), respectively. their email password while implementing this program their system. After that, defined imapVar variable which used IMAP4_SSL() function from imaplib module, using imapHostServer argument function. This function will make connections with email server, then login() function access emails. have used imapUserEmail imapPassword arguments login() function Email password email account. Then, used select() function select 'Inbox' mailbox retrieve emails present inbox. After that, used search() function search data from emails present inbox. last, used loop loop over emails present inbox retrieve information from them output. have used fetch() function loop fetch data from emails pprint() function print information present mail. Note: have used pprint module program, which also in-built module Python, important print data output. Conclusion IMAP protocol retrieve data from emails without actually downloading them system. implement IMAP protocol, have imaplib module, which provides with three IMAP client classes. various commands IMAP perform multiple functions email. have imaplib module Python program implement IMAP protocol fetch data maintain connection from emails. Next TopicPython lxml Module prev next