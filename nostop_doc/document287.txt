next prev Python Comprehensions this article, shall comprehension done data structures Python like lists, dictionaries, set, generators. Comprehension provides precise writing program Python. reduces code size without affecting easy readability. here will discuss following comprehensions List Comprehension Dictionary Comprehension Comprehension Generator Comprehension List Comprehension know that elements list enclosed square brackets hold values multiple data types. program given below, will take even numbers from list. Let's below example list. Example list1= [20,25,24,30,35,40,44] list2=[] list1: i%2==0: list2.append(i) print("The elements list2 ,list2) Output- elements list2 [20, Here have specified elements list1, then used loop take each element checked using modulus operator that divisible not. program given below, performed same using list comprehension. Example 2-Using List Comprehension list1=[20,25,24,30,35,40,44] list2=[i list1 i%2==0] print("The elements obtained using list comprehension ,list2) Output- elements obtained using list comprehension [20, Here, observe that provided comprehension list2 where used loop decision making single line. next program based obtaining cube elements present list1. Example list1=[2,3,4,5,6,7,8,9,10] list2=[] list1: list2.append(i**3) print("The cube elements present list1 ",list2) Output- cube elements present list1 125, 216, 343, 512, 729, 1000] used append() method stored cube each element list2 then displayed same thing using list comprehension- Example 4-Using List Comprehension list1=[2,3,4,5,6,7,8,9,10] list2=[i**3 list1 print("The cube elements obtained list comprehension ",list2) Output- cube elements obtained list comprehension 125, 216, 343, 512, 729, 1000] Dictionary Comprehension know that dictionary uses key-value pairs, have look program displaying these pairs. Example fruits=['Apple','Bananas','Custard Apple','Pineapple','Blueberries'] color=['Red','Yellow','Green','Brown','Violet'] result_dict={} key,value zip(fruits,color): result_dict[key]=value print("The resultant dictionary would ",result_dict) Output- resultant dictionary would {'Apple': 'Red', 'Bananas': 'Yellow', 'Custard Apple': 'Green', 'Pineapple': 'Brown', 'Blueberries': 'Violet'} next program, same thing implemented using comprehension Example 2-Usind Dictionary Comprehension fruits=['Apple','Bananas','Custard Apple','Pineapple','Blueberries'] color=['Red','Yellow','Green','Brown','Violet'] result_dict={key:value (key,value) zip(fruits,color)} print("The resultant dictionary using comprehension would ",result_dict) Output- resultant dictionary using comprehension would {'Apple': 'Red', 'Bananas': 'Yellow', 'Custard Apple': 'Green', 'Pineapple': 'Brown', 'Blueberries': 'Violet'} Here, observe that provided comprehension result_dict where have given expression displaying key-value pairs from lists fruits color. Comprehension used display unique elements from given collection. Let's obtain square elements list using set. Example list1=[2,3,4,5,6,7,8,9,10] result_set=set() list1: result_set.add(i**2) print("The square numbers present list1 ",result_set) Output- square numbers present list1 {64, 100, program given below, have done same thing using comprehension. Example Using comprehension list1=[2,3,4,5,6,7,8,9,10] result_set={i**2 list1} print("The square numbers obtained through comprehension: ",result_set) Output- square numbers obtained through comprehension: {64, 100, have taken each element from list1 provided expression result_set calculating square these elements. Generator Comprehension generators quite similar functions. uses yield keyword generate value. comprehension used here. Example list1=[12,16,17,20,21,24,28,30,31] result_gen=(i list1 i%2==0) result_gen: print("The element which even list1 ",i) Output- element which even list1 element which even list1 element which even list1 element which even list1 element which even list1 element which even list1 executing program, displays even elements from list1. Next TopicInfluxDB Python prev next