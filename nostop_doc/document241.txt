next prev Time clock() Method Python this tutorial, will discuss clock() function time module Python. will also syntax Python time clock() method along with some examples better understanding. Understanding time clock() method Python clock() method function time module Python programming language. represented total number seconds return current floating-point computations time. Since many functions defined time module call equivalent library function, clock() method also calls equivalent library method return output. Moreover, precision returned floating-point value relies library function called. Therefore, works alternative time() function time module measure time consumption. Note: clock() method shows different meanings different systems. systems like UNIX, this function returns "process time", which floating-point value other words, timestamp) seconds. Whereas systems like WINDOWS, function returns actual processing time first call current processing time subsequent call. (Actually, WIN32 QueryPerformanceCount(), relies much more accurate precise than milliseconds). understand syntax clock() method time module Python Syntax time clock() function syntax Python time clock() function shown below: Syntax: time.clock() Parameter: time clock() function does require parameter. Return Value: time clock() function displays functionalities: first call, this function returns actual processing time program. subsequent call, this function returns processing time after first call, this call will made interval. Under Win32 system, this function returns real-time other terms, wall time), whereas this function returns time Unix Linux systems. Now, take look some examples based clock() method Python. Examples Python clock() function Here some examples based clock() function time module Python programming language. Example: importing time module import time using clock() function time module processing_time time.clock() printing current processing time print("Current Processing Time sec):", processing_time) Output: Current Processing Time sec): 0.109375 Explanation: above snippet code, have imported time module. have then defined object that uses time clock() function return current processing time. have then printed this value users. result, current processing time successfully printed users. Note: clock() function time module been deprecated since Python version 3.3. users time perf_counter() time process_time() functions instead, depending their requirements. Now, consider another example based clock() function: Example: importing time module import time defining function proc(): time.sleep( measuring current processing time pro_time time.clock() proc() print("Current Processing Time sec):", pro_time) measuring wall time wall_time time.time() proc() print("Wall Time sec):", time.time() wall_time) Output: Current Processing Time sec): 0.109375 Wall Time sec): 2.5002729892730713 Explanation: above snippet code, have imported time module. have then defined function proc() used time sleep() function with value parameter. have then measured current processing time using time clock() function, called proc() function, printed current processing time users. have then measured wall time using time() function, called proc() function again, printed Wall time users. result, required values returned successfully. Next TopicDeque Python prev next