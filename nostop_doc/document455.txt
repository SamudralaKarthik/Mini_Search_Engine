next prev randint() Function Python this tutorial, will learn about "randint()" function Python. "randint()" built-in function random module Python. random module used getting access various functions like generating random numbers using randint() function. First, have import random module Python randint() function. This function basically used creating pseudo-randomness. Syntax: randint(start_range, end_range) Parameters: (start_range, end_range): Both parameters must integer type values. Parameters: will return random integer range [start_range, end_range], including both starting ending numbers. Errors Exceptions: ValueError: Returns ValueError when user passes floating point parameters. TypeError: Returns TypeError when user passes anything other than integer value parameters. Example random number between given range positive numbers, negative numbers, positive negative number. import random First, will generate random number between positive number range random_1 rnd.randint(55, 75) print ("The random number between (random_1)) Then, will generate random number between given negative number range random_2 rnd.randint(-40, -20) print ("The random number between (random_2)) will now, generate random number between positive number negative number range random_3 rnd.randint(-20, print ("The random number between (random_3)) Output: random number between random number between random number between random number between random number between -29 random number between Example this example, will users ValueError Python program while using randint() function. First, will import random module import random user passes floating point values parameters randint() function. random_1 rnd.randint(2.543, 12.786) print (random_1) Output: --------------------------------------------------------------------------- ValueError Traceback (most recent call last) user passes floating point values parameters randint() function. ----> random_1 rnd.randint(2.543, 12.786) print(random_1) c:\users\User Name\appdata\local\programs\python\python39\lib\random.py randint(self, return self.randrange(a, b+1) c:\users\user name\appdata\local\programs\python\python39\lib\random.py randrange(self, start, stop, step) istart int(start) istart start: raise ValueError("non-integer randrange()") stop None: istart ValueError: non-integer randrange() Example this example, will user TypeError Python while using randint() function. First, will import random module import random user passes string character value parameters randint() function random_2 rnd.randint('String', 'Character') print (random_2) Output: --------------------------------------------------------------------------- TypeError Traceback (most recent call last) user passes string character value parameters randint() function ----> random_2 rnd.randint('String', 'Character') print (random_2) c:\users\user name\appdata\local\programs\python\python39\lib\random.py randint(self, return self.randrange(a, b+1) TypeError: only concatenate (not "int") Applications: users randint() function simulating lucky draw game. Suppose have participated lucky draw game such "Casino Game". player will three chances guess number between have guessed number correctly, will win, else will lose game. Example: code application First, will import randint function from random module Python from random import randint rdt will create function which generate random number everytime code will execute generator_1(): return rdt(1, Now, will create function which takes input from user returns true false depending whether user guessed correct number wins lucky draw not. random_guess(): calls generator_1() which returns random integer between random_number_1 generator_1() here, will define number guesses user will guess_left_1 now, will flag variable checking win-condition user flag_1 Then, will loop number times user will chances while guess_left_1 Here, will take input from user. guess_1 (input ("Please select your number "enter lucky draw game \n")) then, will check whether guess user matched generated win-condition not. guess_1 random_number_1: Then, will flag user have guessed correct number then loop will broke flag_1 break else: guess user does matched win-condition then will print print ("You have guessed Wrong Number!!") then, will decrease number guesses left guess_left_1 condition winning satisfied then, function random_guess will return "True" flag_1 return True Otherwise, function will return "False" else: return False Driver code __name__ '__main__': random_guess() True: print ("Congratulation!! have game.") else print ("Sorry, have Lost game!") Output: Please select your number enter lucky draw game have guessed Wrong Number!! Please select your number enter lucky draw game have guessed Wrong Number!! Please select your number enter lucky draw game have guessed Wrong Number!! Sorry, have Lost game! Please select your number enter lucky draw game have guessed Wrong Number!! Please select your number enter lucky draw game have guessed Wrong Number!! Please select your number enter lucky draw game Congratulation!! have game. Conclusion this tutorial, have discussed randint() function Python's random module. have shown types errors user while using randint() function. have also discussed randint() function used creating application lucky draw games. Next TopicVisualize Tiff File using Matplotlib GDAL Python prev next