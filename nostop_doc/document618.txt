next prev Automate Instagram Messages using Python this article, will automate operation sending Instagram Messages using Python. First all, look what Instagram. Instagram prominent social media platform that focuses photo video sharing. It's been operating since 2010 maintained appeal introducing inventive features like Instagram Stories, shopping, Instagram Reels, more. Instagram picture video-sharing social networking website created Kevin Systrom Mike Krieger 2010 later bought Facebook Inc. Users upload photographs videos that filtered grouped using hashtags geotagging. Posts shared with entire public only with pre-approved followers. Users browse other people's content location, check what's popular, such photos, follow other people their content their personal feed. When resolution upgraded 1080 pixels 2015, this restriction removed. also included texting features, ability share multiple photos videos single post, Stories feature, similar Snapchat's, that allowed users post content chronological feed that accessible others hours. January 2019, million individuals utilize Stories every day. Instagram, which bought Facebook 2012 over billion users, become ingrained people's lives. Instagram first defined fact that only allowed material framed square (1:1) aspect ratio pixels, which corresponded width iPhone time. Instagram platform that both individuals businesses utilize. Companies photo-sharing promote their brand products creating free business account. Businesses with business accounts free engagement impression analytics. According Instagram's website, more than million marketers utilize platform share their stories achieve commercial goals. Furthermore, users report that assists them discovering products. have look code Code: This sample python code that represents automation sending message particular user with desired message Instagram importing module models which required performing this automation operation included beginning file from selenium import webdriver import import time from selenium.webdriver.common.by import from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions from selenium.webdriver.common.keys import Keys from webdriver_manager.chrome import ChromeDriverManager class written which will have different functions each which function performing different task that required automating operation sending message particular list users Instagram class AutomateInstagram: constructor written class which various class variables like username user password user list usernames users whom send message, list messages that need sent those users base Instagram website Selenium object which will referred website handler this code initialized this constructor. __init__(self): self.username None self.password None self.target_usernames None self.target_messages None self.base_url 'https://www.instagram.com/' self.webiste_handler webdriver.Chrome(ChromeDriverManager().install()) 		self.login() this first function this class this function user asked credentials, this function user first username Instagram website from which user wants send message other users, once user provides username, user asked respective password that associated with that particular user name which entered user, once both these credential values them class variables which have initialized above-written constructor get_user_credentials(self): print("Enter username login {}".format(self.base_url)) username input() print("Enter password login {}".format(self.base_url)) password input() self.username username self.password password This second function this class this function user asked list user names users user wants send message, this function first user asked number users whom user want send message, entering number users user asked number times username uses going receive message after providing username users those list user names stored class variable which initialized constructor which written this class get_the_recievers_usernames(self): print("Enter number users whom want send messages") number_of_users int(input()) list_of_usernames list() range(number_of_users): print("Enter username user {}".format(i+1)) target_username input() list_of_usernames.append(target_username) self.target_usernames list_of_usernames this function each user name that entered user particular message asked which going sent that particular user this function user printed with user name which entered then respective message which needs sent that user, this step repeated user names that user added inputs provided users stored into list messages variable which initialized constructor this class, This variable will later referred when need actually send messages this list usernames list messages initialized separate functions while actual sending message they used respective messages sent their respective users messages_for_target_usernames(self): list_of_target_messages list() target_username self.target_usernames: print("Enter message user with username {}".format(target_username)) message input() list_of_target_messages.append(message) self.target_messages list_of_target_messages This function used login intended website once login website next step navigate homepage once login Instagram many popups coming this function handles pop-ups that handcrafted after login into Instagram website dedication successful user able successfully logged into website first offer popup comes. have minimize popup this code written that popup disabled handled show with help this handle purposes that encountered after login into Instagram website. easily navigate homepage website. login_to_target_website(self): 		self.webiste_handler.get(self.base_url) 		username_element_handler WebDriverWait(self.webiste_handler, 20).until( 			expected_conditions.presence_of_element_located((By.NAME, 'username'))) 		username_element_handler.send_keys(self.username) 		password_element_handler WebDriverWait(self.webiste_handler, 20).until( 			expected_conditions.presence_of_element_located((By.NAME, 'password'))) 		password_element_handler.send_keys(self.password) 		password_element_handler.send_keys(Keys.RETURN) 		time.sleep(5) first pop-up 		self.webiste_handler.find_element_by_xpath( 			'//*[@id="react-root"]/section/main/div/div/div/div/button').click() 		time.sleep(3) pop-up 		self.webiste_handler.find_element_by_xpath( 			'/html/body/div[4]/div/div/div/div[3]/button[2]').click() 		time.sleep(4) Once login access website successfully navigated homepage Instagram website next step take list users respective messages which need send those users entered user, show first first user picked from list usernames which provided user their respective message which intended sent that user typed chat this happen first have open chat that particular user, first all, chat user click typing area after clicking type area culture enabled type intended message which required sent that user, then type message from list messages which taken input from user previous steps once message typed user next step click send button send type message. This step repeated user's data present list user names which provided method used initial execution this program, once users present list usernames which provided user have received their message this function exited, main operation this function type messages respective chat users send those message users feature present list user name list which provided user. type_and_send_message(self): zip(self.target_usernames,self.target_messages): print("[{}] message sent [{}] successfully.".format(i,j)) direct button 		self.webiste_handler.find_element_by_xpath( 			'//a[@class="xWeGp"]/*[name()="svg"][@aria-label="Direct"]').click() 		time.sleep(3) clicks pencil icon 		self.webiste_handler.find_element_by_xpath( 			'//*[@id="react-root"]/section/div/div[2]/div/div/div[2]/div/button').click() 		time.sleep(2) 		for user: 			# enter username 			self.webiste_handler.find_element_by_xpath( 				'/html/body/div[4]/div/div/div[2]/div[1]/div/div[2]/input').send_keys(i) 			time.sleep(2) 			# click username 			self.webiste_handler.find_element_by_xpath( 				'/html/body/div[4]/div/div/div[2]/div[2]/div').click() 			time.sleep(2) 			# next button 			self.webiste_handler.find_element_by_xpath( 				'/html/body/div[4]/div/div/div[1]/div/div[2]/div/button').click() 			time.sleep(2) 			# click message area 			send self.webiste_handler.find_element_by_xpath( 				'/html/body/div[1]/section/div/div[2]/div/div/div[2]/div[2]/div/div[2]/div/div/div[2]/textarea') 			# types message 			send.send_keys(self.message) 			time.sleep(1) 			# send message 			send.send_keys(Keys.RETURN) 			time.sleep(2) 			# clicks direct option pencl icon 			self.webiste_handler.find_element_by_xpath( 				'/html/body/div[1]/section/div/div[2]/div/div/div[1]/div[1]/div/div[3]/button').click() 			time.sleep(2) main function written which object created above written class, this created object used calling different functions which written above class, sequence program goes like this user provided with list options select from user select operation from list operation which provided list like provide credentials login website, provide list usernames whom user wants send messages, provide list messages which needs sent those usernames which provided previous steps, after providing required input user select login function navigate home page, after success authentication login website user then choose option type send message, this option will will invoke main function which written class that will actually perform operation typing message respective chat office username which provided second step corresponding message typed chat work that user then there click send button send that message target user this process repeated user that present list user name which provided user previous steps. main(): instagram_automation_obj AutomateInstagram() None while(True): print("from listed below list operations select operations:") print("1. provide credentials(username/password) login website.") print("2. provide list usernames users whom send messages.") print("3. provide list messages that will sent specified users.") print("4. login website navigate homepage website.") print("5. type message users send those typed messages.") print("6. exit from code execution.") menu_choice input() menu_choice int(menu_choice) menu_choice instagram_automation_obj.get_user_credentials() elif menu_choice instagram_automation_obj.get_the_recievers_usernames() elif menu_choice instagram_automation_obj.messages_for_target_usernames() elif menu_choice instagram_automation_obj.login_to_target_website() print("Logged Successfully naviagted homepage.") elif menu_choice instagram_automation_obj.type_and_send_message() print("Messages sent successfully.") elif menu_choice sys.exit() print("To move forward with code, enter either halt") continue_or_exit input() continue_or_exit continue_or_exit 'Y': pass elif continue_or_exit continue_or_exit 'N': sys.exit() __name__ '__main__': main() Output: from listed below list operations select operations: provide credentials(username/password) website. provide list usernames users whom send messages. provide list messages that will sent specified users. website navigate homepage website. type messages users send those typed messages. exit from code execution. Enter username login https://www.instagram.com/ user_name_demo Enter password login https://www.instagram.com/ [email protected] move forward with code, enter either halt from listed below list operations select operations: provide credentials(username/password) login into website. provide list usernames users whom send messages. provide list messages that will sent specified users. website navigate homepage website. type messages users send those typed messages. exit from code execution. Enter number users whom want send messages Enter username user target_user_1 Enter username user target_user_2 Enter username user target_user_3 move forward with code, enter either halt from listed below list operations select operations: provide credentials(username/password) website. provide list usernames users whom send messages. provide list messages that will sent specified users. website navigate homepage website. type messages users send those typed messages. exit from code execution. Enter message user with username target_user_1 this message user1. Enter message user with username target_user_2 Hope this message. Enter message user with username target_user_3 User3 this message you. move forward with code, enter either halt from listed below list operations select operations: provide credentials(username/password) website. provide list usernames users whom send messages. provide list messages that will sent specified users. website navigate homepage website. type messages users send those typed messages. exit from code execution. Logged Successfully navigated homepage. move forward with code, enter either halt from listed below list operations select operations: provide credentials(username/password) website. provide list usernames users whom send messages. provide list messages that will sent specified users. login website navigate homepage website. type messages users send those typed messages. exit from code execution. [target_user_1] message sent this message user1.] successfully. [target_user_2] message sent [Hope this message.] successfully. [target_user_3] message sent [User3 this message you.] successfully. Messages were sent successfully. move forward with code, enter either halt from listed below list operations select operations: provide credentials(username/password) website. provide list usernames users whom send messages. provide list messages that will sent specified users. website navigate homepage website. type messages users send those typed messages. exit from code execution. Enter number users whom want send messages Enter username user Ronaldo. Chris move forward with code, enter either halt from listed below list operations select operations: provide credentials(username/password) website. provide list usernames users whom send messages. provide list messages that will sent specified users. website navigate homepage website. type messages users send those typed messages. exit from code execution. Enter message user with username Ronaldo.Chris your game. move forward with code, enter either halt from listed below list operations select operations: provide credentials(username/password) website. provide list usernames users whom send messages. provide list messages that will sent specified users. website navigate homepage website. type messages users send those typed messages. exit from code execution. [ronaldo. cris] message sent your game.] successfully. Messages were sent successfully. move forward with code, enter either halt from listed below list operations select operations: provide credentials(username/password) website. provide list usernames users whom send messages. provide list messages that will sent specified users. website navigate homepage website. type messages users send those typed messages. exit from code execution. Explanation: code which written above output main function written which object created above written class, this created object used calling different functions which written above class, sequence program goes like this user provided with list options select from user select operation from list operation which provided list like provide credentials login website, provide list usernames whom user wants send messages, provide list messages which needs sent those usernames which provided previous steps, after providing required input user select login function navigate home page, after success authentication login website user then choose option type send message, this option will will invoke main function which written class that will actually perform operation typing message respective chat office username which provided second step corresponding message typed chat work that user then there click send button send that message target user this process repeated user that present list user name which provided user previous steps. Advantages Automation: Increasing Reliability: Automation clear productivity boost. However, actual diamond that shines with automation reliability. foundation every effective operations department; without there would confusion, turmoil, dissatisfied users. operations necessitate mastery opposing skill sets: hand, operations manager requires advanced technical abilities, such ability comprehend complexity operating system assess resolve problems they develop. This same individual, other hand, must comfortable with pushing buttons loading paper. Off-shift operations, let's face involve some organization's most tedious, repetitive, error-prone duties. However, removing human aspect eliminates majority batch processing problems. Optimizing Performance: Every firm wishes business like thoroughbred. actuality, it's more probable that you're overworked. Despite fact that every year, advances computer technology make them quicker less expensive, demands them inevitably catch eventually surpass capabilities company's computer infrastructure. result, many businesses strive increase their system's performance. Upgraded hardware purchase newer machine pricey solutions improving performance. It's also feasible tweak system improved performance, this requires highly competent expert isn't always accessible. When system tuned given workload, settings longer optimal workload changes. Reducing Operational Costs: Automation software more intelligent effective method cost management reduction. best potential improve customer (end-user) service while gradually lowering expenses. This potential cost reductions frequently overlooked management. running costs most current servers inexpensive, total cost ownership decreasing. Despite this, cost operations crew might account entire cost. Ensuring High Availability: Companies becoming increasingly reliant technology. firm suffers computer unavailable. purposes management ensure high availability. Increasing Productivity: Productivity becomes more issue when organization's technological demands expand. Automated operations help with these problems variety ways. automation program then performs commands accurately exact sequence, avoiding operator mistakes. Forecasting completion being able undertake "what evaluations schedule changes help operations removing uncertainty from day-to-day chores. Disadvantages Automation: Worker displacement: most serious downside automation that eliminates human labor. This fact that computerized task completed faster with higher precision than human can. Disney World, example, been utilizing self-driving cars shuttle visitors around park years. Many individuals concerned that this will lead less human employment. Initial training required: industry relied heavily automation decades. However, before making leap automation, producers must consider potential unforeseen effects. these ramifications necessity significant financial investment maintain service automated systems. These technologies also more prone cyber assaults than manual ones, putting firms risk their infrastructure isn't adequately safeguarded. Could introduce safety hazards: When working circumstances change unexpectedly, automation pose safety dangers. driverless automobile, example, might designed drive independently still cause accident person steps onto roadway under less-than-ideal conditions (night, limited visibility, etc.). Still requires human intervention: While benefits automation have been demonstrated general, some activities still require human interaction. We'll self-driving example above: these vehicles recognize most road obstructions taught stop. However, under some circumstances, like driving over barrier that clearly visible car's sensor, these technologies might misread information have unwanted results. become redundant: Automation practical answer variety issues. However, instances when change introduced automation must updated, this convenience become obsolete. These sorts modifications will simply company's workload cost them valuable time resources. Incompatible with Customization: Automation entails reduction variety flexibility. contrast humans, machines only execute restricted range jobs only accomplish what they designed individuals undertake wide range tasks. Automation implies repeatedly doing same procedure, which frequently necessitates uniformity. Some automated procedures incompatible with one-off customization specific consumers. Security Concerns: Businesses using important data attract consumers, grow sales, enhance efficiency today's data-driven environment. Unfortunately, hackers exploit automated technologies that manage massive amounts customer/company data. Many small firms want risk data theft, despite fact that adequate security protection methods place avoid fraud. this article, have understood automate process sending Instagram messages using python. Next TopicPython SimpleHTTPServer Module prev next