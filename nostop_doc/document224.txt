next prev strftime() function Python this tutorial, will understand working strftime() function Python programming language along with variations. begin. already know, there variety modules provided Python that contain clusters functions order implement different types functionalities data. time module Python utilized implement manipulations based various timestamp over. Moreover, strftime() function Python accepts time different formats returns string with time representing standard form. Using Python strftime() function present time Python strftime() function together with datetime module order fetch present timestamp proper format format codes. syntax same shown below. Syntax: datetime.now().strftime('format codes') Here, parameter strftime() function, format codes, actually predefined codes utilized order represent timestamp standard proper way. will understand much more about format codes detail throughout this tutorial. before that, consider example. Example: importing datetime module from datetime import datetime storing value current timestamp cur_timestamp datetime.now() using strftime() function represent timestamp into proper standard format the_time cur_timestamp.strftime( the_date cur_timestamp.strftime( printing values print("Present Time:", the_time) print("Present Date:", the_date) Output: Present Time: Present Date: 2021 Explanation: above example, have imported datetime module from datetime library. have then defined variable storing value current date time. have then used strftime() function represent current date time into specified standard format printed them users. result, current date time have been printed successfully proper standard format. Using Python strftime() function along with predefined timestamp Sometimes happens when want show date time past datasets. perform same with help strftime() function Python. fromtimestamp() method datetime module helps user fetch predefined timestamp. Moreover, strftime() function order represent that fetched timestamp standard format using different format codes explained earlier. syntax usage strftime() function follows: Syntax: datetime.fromtimestamp(timestamp).strftime('format code') Now, consider example illustrating working strftime() function together with predefined timestamp. Example: importing datetime module from datetime import datetime provided timestamp provided_timestamp 114579923 storing value provided timestamp my_timestamp datetime.fromtimestamp(provided_timestamp) using strftime() function represent timestamp into proper standard format the_time my_timestamp.strftime( the_date my_timestamp.strftime( printing values print("Time provided Timestamp:", the_time) print("Date provided Timestamp:", the_date) Output: Time provided Timestamp: Date provided Timestamp: 1973 Explanation: above example, have then defined variable storing value predefined timestamp. have then used fromtimestamp() method fetch stored value strftime() function represent fetched timestamp into proper standard format. have then printed resultant values users. result, timestamp been represented proper specified format successfully. Using various Format codes with Python strftime() function Python strftime() function utilizes different format codes order represent date time maintained standard form. Moreover, these format codes used segregate hours, days, weeks, more from timestamp show same. consider example representing usage Format code. Example: importing strftime function from time import strftime using "%A" format code "%A" displays current local time the_day strftime( "%A" printing values print("Present Day:", the_day) Output: Present Day: Tuesday Explanation: above example, have imported strftime function from time module. have then defined variable that uses strftime() function along with parameter "%A" format code current local time. have then printed values user. result, program printed full name accordingly. consider some more examples using other Format codes. Using "%c" format code order show current local time following format: Month Date hours:minutes:seconds Year Example: importing strftime function from time import strftime using "%c" format code "%c" displays current local time the_timestamp strftime( "%c" printing values print("Present Timestamp:", the_timestamp) Output: Present Timestamp: Jun 16:06:41 2021 Explanation: above program, have again carried equivalent procedure earlier. However, have used "%c" format code. result, program printed current timestamp format code specified above. Using "%R" format code order represent time 24-hour format. Example: importing strftime function from time import strftime using "%R" format code "%R" displays current time 24-hour format the_24hour strftime( "%R" printing values print("Present Time 24-hour format:", the_24hour) Output: Present Time 24-hour format: 16:14 Explanation: have again followed same syntax above program, include format code "%R" display current time 24-hour format. Using "%r" format code order represent time 12-hour format Hours:Minutes:Seconds format along with notation. Example: importing strftime function from time import strftime using "%r" format code "%r" displays current local time H:M:S format the_time strftime( "%r" printing values print("Present Time 12-hour format:", the_time) Output: Present Time 12-hour format: 04:33:12 Explanation: Similar what have done earlier, have added "%r" parameter strftime() function print current time 12-hour format. Using multiple format codes single function. Example: importing strftime function from time import strftime using multiple format code "%x" displays current date "%X" displays current time 24-hour format "%p" provides discriptions current time i.e., the_timestamp strftime( "%x %p" printing values print("Present Timestamp:", the_timestamp) Output: Present Timestamp: 06/02/21 16:44:11 Explanation: above example, have used format code "%x" order show date from local timestamp. have also utilized format code "%X" order display current time 24-hour format along with format code "%p" order provide notation current time, i.e., Apart from above format codes, there many format codes available. These format codes listed below: Format Code Description Weekday name short Complete weekday name Name month short Complete month name Chosen date time representation %C Number Century (the year divided 100, ranging from Month (ranging from %D Similar function %e Month (ranging from %g Similar function %G; however, value printed without century %G 4-digit year equivalent week number (refer %V) %h Similar function Hour, utilizing 24-hour clock (ranging from Hour, utilizing 12-hour clock (ranging from Year (ranging from 001 366) Month (ranging from Minute %n Newline character Either provided time value Time notation %R Time 24-hour notation Second %t character %T Current time, equal "%H:%M:%S" format %u Days Week represented number (ranging from where Monday considered Warning: Solaris Sunday considered week number current year, beginning with first Sunday first first week. %V 8601-week number current year (ranging from 53), where week first week that least four days current year, with Monday considered first week week decimal, where Sunday considered Week number current year, beginning with first Monday first first week. Chosen depiction date without time Chosen depiction time without date Year lacking century (ranging from Year together with century Time zone name abbreviation actual character Next TopicVerbose Flag Python Regex prev next