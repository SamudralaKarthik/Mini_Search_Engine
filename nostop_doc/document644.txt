next prev Python Bitwise Operator Binary language language computer. inner mechanisms computer happen concerning bits. Bitwise operators operators that allow programmer perform bitwise operations integers. These operators allow programmer manipulate lower-level data computer. There total bitwise operators Python: Bitwise Bitwise Bitwise Bitwise Bitwise right shift Bitwise left shift This article discusses Bitwise operator with examples. When apply bitwise operator operands, integer values converted into their binary forms-into bits. Then, operator performs operation bit-by-bit every individual bit. After operation, binary number converted decimal form returned output. Now, understand operation Bitwise XOR: called "Exclusive OR". excludes condition from 'or'. binary operator performed between operands. Representation: where operands. Return value: returns integer when performed between integers Boolean value when performed between Boolean values. Operation: given integers converted into binary form. binary notations: both corresponding bits same returns both corresponding bits different returns After performed bits, resultant binary number converted back decimal returned. truth table XOR: (operand (operand Return value understand concept using example: want perform: Both integers converted into binary forms: Now, applied bitwise: Finally, resultant binary number converted back decimal form. represents Output Now, same operands, write code xor: (input ("Enter value (input ("Enter value print ("Bitwise xor: Output: Boolean values: perform Boolean values. When operate integers, equivalent Boolean True, equivalent Boolean False. Truth table: Operand Operand Operand Operand True True False False False False True False True False True True True False True False print ("True True print ("True False:", print ("False True print ("False False:", Output: Structure outputs: performed result, some integer then, perform will output perform will output take above example: Code: (input ("Enter value (input ("Enter value print ("a "^", "=", print "^", "=", print "^", "=", Output: Understanding: Then, know output operand, find other operand using this relation. This relation only possible with because truth table. Role cryptography: above relation small role cryptography models. person wants send numerically encoded message another person confidentially, needs more simple cover encoded message. Both will have secret known each other beforehand. Now, will message with secret send After receiving, perform again with received result secret message. Example: wants send message their secret will send already knows secret will decrypt message using again: Message successfully received. This method simplest, weakest cryptography method. Next TopicPython Line prev next