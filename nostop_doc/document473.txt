next prev reprlib module Python following tutorial, will understand reprlib module Python programming language with help examples. let's started. Understanding reprlib module Python Python reprlib module offers means producing object representations with limits size resulting strings. This used Python debugger beneficial other contexts. This module offers class, instance, function. class reprlib.Repr This Class offers formatting services beneficial implementation functions similar built-in repr() function. This class also size limits various object types avoid generation excessively long representations. reprlib.aRepr aRepr object Repr, which utilized offer repr() function shown below. Altering attributes this object will affect size limits utilized repr() function Python debugger. reprlib.repr(obj) repr() method aRepr. However, this method returns string similar that returned built-in function same name, with limits most sizes. Moreover, along with size-limiting tools, this module also offers decorator detect recursive calls __repr__() substitute placeholder string. @reprlib.recursive_repr(fillvalue 'â€¦') This decorator __repr__() methods detect recursive calls inside same thread. case recursive call made, fillvalue returned; else usual __repr__() call made. consider following demonstrating same: Example: importing required module from reprlib import recursive_repr defining class class TheList(list): using decorator @recursive_repr() defining function __repr__(self): return '|'.join(map(repr, self)) '>' instantiating class TheList('abc') appending elements list one.append(one) one.append('x') printing final list print(one) Output: <'a'|'b'|'c'|...|'x'> Explanation: above snippet code, have imported required module defined class TheList. have then used decorator defined function __repr__() that returns fillvalue. have then instantiated class appended elements list. last, have printed list. Understanding Repr Objects Repr objects offer different attributes, which provide size limits represent different object types, methods that format specific object types. Methods/Variables Descriptions Repr.maxlevel This object type represents depth limit recursive representation. default value Repr.maxlong This object type consists maximum number represent long value. default value Repr.maxstring This object type limits number characters string-type object. default value Repr.maxother This object type limits size some other data, where formatting specified. Repr.repr(obj) This method serves same purpose built-in repr() method. Repr.repr1(obj, level) This method recursive implementation repr() method. Moreover, have specify level recursive output. There some other limits dict, lists, tuples, sets, array many more. consider example demonstrating Repr objects. Example: importing required modules import reprlib import math creating list factorials using functions math library factList [math.factorial(x) range(100)] print(reprlib.repr(factList)) creating Repr object long size myRept reprlib.Repr() using maxlong myRept.maxlong print(myRept.repr(factList[53])) Output: 120, ...] 427488...000000 Explanation: above snippet code, have imported required libraries defined list containing factorials numbers ranging from 100. printed value repr() function. created Repr object long size using maxlong object type. last, have again printed result repr() function. Next TopicHow take Multiple Input from User Python prev next