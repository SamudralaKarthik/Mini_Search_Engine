next prev Simple Registration form using PyQt5 Python this tutorial, we'll look utilise PyQt5 develop user form. user form essentially dialogue that gives user additional control ease while entering user data. occasionally necessary create user forms while developing user interface application order gather crucial data. Python programming language library were combined create toolkit known PyQt. most popular Frameworks Python, PyQt strong community tonne excellent documentation. fundamental components user interfaces components widgets. label, button, menu, combo box, scroller, toolbar, file dialogue, etc. examples widgets. PyQt framework must first installed using package manager before used. install most recent version PyQt, command below already installed your computer $pip install pyqt5 This particular form will mainly have fields Name Degree these fields will have separate labels text fields grouped together whole form. degree component will also have dropdown section order chose degree that user wants pursue. Steps implementation Make window class that descended from QDialog. Create window's title geometry. Make object called QGroupBox. Create combo choose degree, spin obtain age, line edit retrieve name. Create method called creatingForm that will generate form. form's create method, make form layout include rows. Each should include label input method, such name label line edit input. Labels degree should also have combo boxes spin boxes input. Construct QDialogButtonBox with cancel buttons. Make acceptance rejection buttons active. button pushed, entire page will print; cancel button pressed, window will close. Walking through code import required libraries from PyQt5.QtWidgets import import Firstly, will import modules that required program starting only, from standard Python library. These modules include QtWidgets sys. create class that will inherit class QDialog class Window(QDialog): defining constructor 	def __init__(self): 		super(Window, self).__init__() title window 		self.setWindowTitle("Python") geometry window 		self.setGeometry(100, 100, 300, 400) Then, will create window called window with inherited class will initialize defining constructor. Followed setting title window along with geometry too. create group 		self.formGrpBox QGroupBox("Form create spin selecting 		self.spinAgeBar QSpinBox() create combo selecting degree 		self.ComboBoxDeg QComboBox() items into combo 		self.ComboBoxDeg.addItems(["BTech", "MTech", "PhD"]) Next, will create group which will used contain elements widgets together group. Then, will create spin selection user followed creating combo select degree they want pursue. then, will dropdown items combo display getting clicked. create line edit 	self.lineEditName QLineEdit() call function which will helping create form 	self.creatingForm() creating dialog button actions cancel 	self.btnBox QDialogBtnBox(QDialogBtnBox.Ok QDialogBtnBox.Cancel) action buttons, when form gets accepted 	self.btnBox.accepted.connect(self.getInfo) action button, when form gets rejected 	self.btnBox.rejected.connect(self.reject) Next, will create line edit enter editable text will call creatingForm() method create form. Then, will create button that will contains functions namely Cancel. Then, will respective actions both buttons group that needs performed being clicked. create vertical layout 	layoutMain QVBoxLayout() form group main layout 	layoutMain.addWidget(self.formGrpBox) button main layout 	layoutMain.addWidget(self.btnBox) layout 	self.setLayout(layoutMain) Then, will introduce main layout form group first, followed adding button main layout. getting info method which called when form gets accepted getInfo(self): print information form 	print("Person Name {0}".format(self.lineEditName.text())) 	print("Degree {0}".format(self.ComboBoxDeg.currentText())) 	print("Age {0}".format(self.spinAgeBar.text())) close window 	self.close() Next, will create method called getInfo() order information that form already accepted from user. Then, will print three components namely name, degree entered user closing window after that. creating form function creatingForm(self): create form layout 	layout QFormLayout() some rows names input text 	layout.addRow(QLabel("Name"), self.lineEditName) degree combo 	layout.addRow(QLabel("Degree"), self.ComboBoxDeg) spin 	layout.addRow(QLabel("Age"), self.spinAgeBar) layout 	self.formGrpBox.setLayout(layout) Next, will create another method called creatingForm() create main form window. this form, will create another layout will start some rows three sections name, degree user. Finally, will layout properties. main function __name__ '__main__': creating pyqt5 application 	Base QApplication(sys.argv) creating instance Window 	window Window() displaying window 	window.show() starting application 	sys.exit(Base.exec()) Finally, will introduce main function will create PyQt5 application. will then create instance window will display screen using show() method. Ultimately, will start application executing code. Complete code Python program create simple registration form using PyQt5 import required libraries from PyQt5.QtWidgets import import create class that will inherit class QDialog class Window(QDialog): defining constructor 	def __init__(self): 		super(Window, self).__init__() title window 		self.setWindowTitle("Python") geometry window 		self.setGeometry(100, 100, 300, 400) create group 		self.formGrpBox QGroupBox("Form create spin selecting 		self.spinAgeBar QSpinBox() create combo selecting degree 		self.ComboBoxDeg QComboBox() items into combo 		self.ComboBoxDeg.addItems(["BTech", "MTech", "PhD"]) create line edit 		self.lineEditName QLineEdit() call function which will helping create form 		self.creatingForm() creating dialog button actions cancel 		self.btnBox QDialogBtnBox(QDialogBtnBox.Ok QDialogBtnBox.Cancel) action buttons, when form gets accepted 		self.btnBox.accepted.connect(self.getInfo) action button, when form gets rejected 		self.btnBox.rejected.connect(self.reject) create vertical layout 		layoutMain QVBoxLayout() form group main layout 		layoutMain.addWidget(self.formGrpBox) button main layout 		layoutMain.addWidget(self.btnBox) layout 		self.setLayout(layoutMain) getting info method which called when form gets accepted 	def getInfo(self): print information form 		print("Person Name {0}".format(self.lineEditName.text())) 		print("Degree {0}".format(self.ComboBoxDeg.currentText())) 		print("Age {0}".format(self.spinAgeBar.text())) close window 		self.close() creating form function 	def creatingForm(self): create form layout 		layout QFormLayout() some rows names input text 		layout.addRow(QLabel("Name"), self.lineEditName) degree combo 		layout.addRow(QLabel("Degree"), self.ComboBoxDeg) spin 		layout.addRow(QLabel("Age"), self.spinAgeBar) layout 		self.formGrpBox.setLayout(layout) main function __name__ '__main__': creating pyqt5 application 	Base QApplication(sys.argv) creating instance Window 	window Window() displaying window 	window.show() starting application 	sys.exit(Base.exec()) Output output code "Simple Registration Form using PyQt5 Python" after implementation program given below. Next TopicConditional Expressions Python prev next