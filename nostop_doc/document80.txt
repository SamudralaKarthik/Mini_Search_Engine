next prev Join Operation combine columns from more tables using some common column among them using join statement. have only table database, let's create more table Departments with columns department_id department_name. create table Departments (Dept_id int(20) primary null, Dept_Name varchar(20) null); have created table Departments shown above image. However, haven't inserted value inside Let's insert some Departments departments names that this Employee table. insert into Departments values (201, "CS"); insert into Departments values (202, "IT"); Let's look values inserted each tables. Consider following image. Now, let's create python script that joins tables common column, i.e., dept_id. Example import mysql.connector #Create connection object myconn mysql.connector.connect(host "localhost", user "root",passwd "google",database "PythonDB") #creating cursor object myconn.cursor() try: #joining tables departments_id cur.execute("select Employee.id, Employee.name, Employee.salary, Departments.Dept_id, Departments.Dept_Name from Departments join Employee Departments.Dept_id Employee.Dept_id") print("ID Name Salary Dept_Id Dept_Name") cur: print("%d %s"%(row[0], row[1],row[2],row[3],row[4])) except: myconn.rollback() myconn.close() Output: Name Salary Dept_Id Dept_Name John 25000 	201 		CS John 25000 	201 		CS David 25000 		IT Nick 90000 	201 		CS Mike 28000 	202 		IT Right Join Right join shows columns right-hand side table have tables database PythonDB, i.e., Departments Employee. have Employee table working department (Employee which department null). However, understand concept right join let's create one. Execute following query MySQL server. insert into Employee(name, salary, branch_name) values ("Alex",108,29900,"Mumbai"); This will insert employee Alex doesn't work department (department null). Now, have employee Employee table whose department present Departments table. Let's perform right join tables now. Example import mysql.connector #Create connection object myconn mysql.connector.connect(host "localhost", user "root",passwd "google",database "PythonDB") #creating cursor object myconn.cursor() try: #joining tables departments_id result cur.execute("select Employee.id, Employee.name, Employee.salary, Departments.Dept_id, Departments.Dept_Name from Departments right join Employee Departments.Dept_id Employee.Dept_id") 	print("ID Name Salary Dept_Id Dept_Name") 	for cur: print(row[0]," row[1]," ",row[2]," ",row[3]," ",row[4]) except: myconn.rollback() myconn.close() Output: Name Salary Dept_Id Dept_Name John 25000.0 John 25000.0 David 25000.0 Nick 90000.0 Mike 28000.0 Alex 29900.0 None None Left Join left join covers data from left-hand side table. just opposite effect right join. Consider following example. Example import mysql.connector #Create connection object myconn mysql.connector.connect(host "localhost", user "root",passwd "google",database "PythonDB") #creating cursor object myconn.cursor() try: #joining tables departments_id result cur.execute("select Employee.id, Employee.name, Employee.salary, Departments.Dept_id, Departments.Dept_Name from Departments left join Employee Departments.Dept_id Employee.Dept_id") print("ID Name Salary Dept_Id Dept_Name") cur: print(row[0]," row[1]," ",row[2]," ",row[3]," ",row[4]) except: myconn.rollback() myconn.close() Output: Name Salary Dept_Id Dept_Name John 25000.0 John 25000.0 David 25000.0 Nick 90000.0 Mike 28000.0 Next TopicPerforming Transactions prev next