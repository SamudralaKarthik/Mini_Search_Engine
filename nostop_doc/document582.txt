next prev Lemmatization Tokenize with TextBlob Lemmatization process joining different inflected terms considered thing. Lemmatization similar stemming. However, offers contextual meaning terms. also links words that share same meaning considered word. Text pre-processing includes stemming Lemmatization. There instances when people confused with terms, they often viewed being same. However, Lemmatization more advantageous than stemming because permits study morphology words. Applications Lemmatization: comprehensive retrieval systems such search engines. Utilized small indexing. Examples lemmatization: painters: painter birds: bird worst: main difference between stemming lemmatizing that lemmatize requires speech part parameters, "pos" provided, default will "noun." Below implement lemmatization with TextBlob. Code: from textblob library will import Word module from textblob import Word WD here, will create Word object. WD("painters") here, will apply lemmatization. print("painters:", P.lemmatize()) here, will create Word object again. WD("birds") here, will apply lemmatization. print("birds:", Q.lemmatize()) here, willcreate Word object. WD("worst") Now, will apply lemmatization with parameter "a", denotes adjective. print("worst:", R.lemmatize("a")) Output: painters: painter birds: bird worst: Tokenize Text using TextBlob TextBlob module Python library that offers that simple methods perform simple tasks. This module developed base NLTK module. Install TextBlob using following commands terminal: !pip3 install textblob from textblob import download_corpora will then enable TextBlob addition downloading needed NLTK corpora. above process take long time large number tokenizers, chunkers, various algorithms, entire corpus download. terms that commonly used include: Corpus: Body text singular. Corpora plural this. Lexicon: Meanings words well their definitions. Token: Every "entity" that part something else divided according rules. this case, every word token when sentence been "tokenized" into words. sentence also token when tokenize sentences paragraph. Code: First, will import TextBlob method from textblob library from textblob import TextBlob text1 ("There were three friends name, Jemmy, Jacky, Kenny. 	"They have been friends forever since school." 	"but somehow Jemmy's bestfriend Jacky whenever jemmy kenny lefts alone, they endup being quite." 	"One they decided plan trip together after graduation. 	"They went Kashmire" 	"Kashmire trip really good, they created lifetime memories together. 	"After that trip they have focus there future. 	"Which stream they have choose career path they should choose future.") Now, will create TextBlob object blob_object1 Txb(text1) Here, will tokenize paragraph into words. print(" Word Tokenize from paragraph:\n", blob_object1.words) tokenize paragraph into sentences. print("\n Sentence Tokenize from paragraph:\n", blob_object1.sentences) Output: Word Tokenize from paragraph: ['There', 'were', 'three', 'friends', 'name', 'Jemmy', 'Jacky', 'Kenny', 'They', 'have', 'been', 'friends', 'forever', 'since', 'pre', 'school.but', 'somehow', 'Jemmy', "'s", 'bestfriend', 'is', 'Jacky', 'and', 'whenever', 'jemmy', 'and', 'kenny', 'lefts', 'alone', 'they', 'endup', 'being', 'quite.One', 'day', 'they', 'all', 'decided', 'to', 'plan', 'a', 'trip', 'together', 'after', 'graduation', 'They', 'all', 'went', 'to', 'KashmireKashmire', 'trip', 'was', 'really', 'good', 'they', 'all', 'created', 'lifetime', 'memories', 'together', 'After', 'that', 'trip', 'they', 'have', 'to', 'focus', 'on', 'there', 'future', 'Which', 'stream', 'they', 'have', 'to', 'choose', 'and', 'career', 'path', 'they', 'should', 'choose', 'for', 'future'] Sentence Tokenize from paragraph: [Sentence("There were three friends name, Jemmy, Jacky, Kenny."), Sentence("They have been friends forever since school.but somehow Jemmy's bestfriend Jacky whenever jemmy kenny lefts alone, they endup being quite.One they decided plan trip together after graduation."), Sentence("They went KashmireKashmire trip really good, they created lifetime memories together."), Sentence("After that trip they have focus there future."), Sentence("Which stream they have choose career path they should choose future.")] Next TopicHow Round Numbers Python prev next