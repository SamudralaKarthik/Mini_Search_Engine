next prev number python Greatest Common Divisor (GCD) mathematical term find greatest common factor that perfectly divide numbers. also known Highest Common Factor (HCF). example, HCF/ numbers Because largest common divisor that completely divides Using gcd() Function python, gcd() inbuilt function offered math module find greatest common divisor numbers. Syntax gcd(a, Where integer number passes argument function gcd(). Let's create program print number using inbuilt function math.gcd() python. math_fun.py create program print number python using math.gcd() function. import math print(" number math.gcd(0, #math.gcd(a, integer number print(" number math.gcd(0, 48)) assign number variable assign number variable print(" number math.gcd(a, pass variable math.gcd() function. print(" number math.gcd(48, -12)) pass integer number print(" number math.gcd(-24, -18)) print(" number -60 math.gcd(-60, 48)) Output: above example, math.gcd() function generates given numbers. gcd() function, pass argument that returns greatest common divisor integer numbers, completely dividing numbers. Using recursion Recursion memory consuming function defined python that calls itself self-referential expression. means that function will continuously call repeat itself until defined condition return greatest common divisor number. Pseudo Code Algorithm Step Take inputs, from user. Step Pass input number argument recursive function. Step second number equal zero (0), returns first number. Step Else recursively calls function with second number argument until gets remainder, which divides second number first number. Step Call assign gcd_fun() variable. Step Display numbers. Step Exit from program. Let's understand program find number using recursion. gcdRecur.py write program understand number python using recursion. gcd_fun divide every number return return else: return gcd_fun (y, =int (input ("Enter first number: take first =int (input ("Enter second number: take second gcd_fun(x, call gcd_fun() find result print("GCD number print(num) call Output: Using Loop Let's create program find number python using loops. gcdFile.py GCD_Loop( define condition temp else: temp range(1, temp )): return int(input Enter first number: take first =int (input Enter second number: take second GCD_Loop(x, call gcd_fun() find result print("GCD number print(num) call Output: above program, take values input pass these numbers GCD_Loop function return GCD. Using Euclid's algorithm Euclidean Algorithm Euclid's algorithm efficient method find greatest common divisor numbers. oldest algorithm that divides greater number into smaller ones takes remainder. Again, divides smaller number from remainder, this algorithm continuously divides number until remainder becomes example, suppose want calculate H.C.F numbers, 48. Then divide 48; returns remainder again divide number then returns remainder this way, H.C.F Pseudo Code Euclid Algorithm Step There integer numbers, such Step then GCD(a, Step GCD(a, Step find Step Suppose Step Repeat steps until equal greater than Step then print result. Step Stop program. Let's find H.C.F numbers using Euclid's algorithm python. Euclid.py Create program find number python using Euclid's Algorithm. find_hcf(a,b): while(b): return int(input Enter first number: take first int(input Enter second number: take second find_hcf(a, call find_hcf() result print(" number print(num) call Output: Next TopicPython Program generate Random String prev next