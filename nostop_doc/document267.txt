next prev re.search() re.findall() Python Regex regular expression, also known rational expression, sequence characters used defining search pattern. mostly uses pattern matching with strings string matching such find replace operations. Regular expressions generalized matching patterns with sequences characters. Module Regular Expressions (RE) used specifying strings that matches pattern. understanding analogy, MetaCharacters used functions module. There MetaCharacters, will discuss them they follow into functions: used dropping special meaning character following used representing character class used matching beginning used matching used matching character except newline used matching zero occurrence. means OR. This used matching with characters separated used number occurrences (including occurrences) used more occurrences used indicating number occurrences preceding match. used enclosing group REs. re.search() method re.search() method used returning None case pattern does match), re.MatchObject which contains information about matching parts string. This method stops functioning after first match, this perfectly suited testing Regular expression more than extracting data. Example: import will regular expression matching string data form Weekday's name followed number regex r"([A-Za-z]+) (\d+)" match re.search(regex, "Day Date Today Tuesday 12") match None: print ("The String match index (match.start(), match.end())) print ("Full match Pattern: (match.group(0))) print ("The Weekday Today (match.group(1))) print ("The Date Today (match.group(2))) else: print ("The pattern Python regex does match with string Data imported.") Output: String match index Full match Pattern: Tuesday Weekday Today Tuesday Date Today Explanation: above code, have imported module used regular expression matching string data with pattern, that Weekday Date Today. expression "([A-Za-z]+) (\d+)" should match string data imported. will then print [25, 35] matches string 25th index ends 35th index number. have used group() function getting matches captured groups getting required output pattern. These groups contain matched values. Such match.group(0) will always return fully matched string data, match.group(1) match.group(2) will return capture groups order left right input string. (match.group() also means match.group(0)). data string matches pattern, will print right sequence; otherwise, will else statement. re.findall() method re.findall() method used getting non-overlapping matches pattern string data return, form list strings. string data will scanned from left right, matches will returned same order found. Example: import string text where regular expression will searched. string_1 """Here some student's student student 564 student student student E: 234""" Setting regular expression finding digits string. regex_1 "(\d+)" match_1 re.findall(regex_1, string_1) print(match_1) Output: ['676', '564', '567', '112', '234'] Explanation: above code, first import string text which contains some digits. Then regular expression "(\d+)" matching string with pattern. match will non-overlapping data text string. After importing re.findall() method, non-overlapping matched data string output. Conclusion this tutorial, have discussed difference between re.search() method re.findall() method Python regex, with examples. Next TopicHow install statsmodels Python prev next