next prev sort dictionary Python Python dictionary collection data which stored key-value form. Each associated with value. mutable nature, which means change data after creation. unordered collection data allows storing duplicate values, must unique. Dictionary declared using curly braces key-value pair separated comma. dict1 {'name': 'Devansh', 'age': 'Rollno':90014} print(dict1) Output: need sort dictionary search time complexity list O(n), dictionary search time complexity 0(1), which makes that dictionary faster than list. dictionary used place list whenever needs. sorting allows analyze data efficiently when working with data-structure. sorted dictionary provides better understanding handle complex operations. Let's understand various ways sort dictionary. Sorting keys Sorting values Sorting Algorithm Reversing sorted order Sorting Keys Values Python offers built-in keys functions keys() values() functions sort dictionary. takes iterable argument returns sorted list keys. keys sort dictionary ascending order. Let's understand following example. Example names {1:'Alice' ,2:'John' ,4:'Peter' ,3:'Andrew' ,6:'Ruffalo' ,5:'Chris' #print sorted list keys print(sorted(names.keys())) #print sorted list with items. print(sorted(names.items())) Output: [(1, 'Alice'), 'John'), 'Andrew'), 'Peter'), 'Chris'), 'Ruffalo')] Explanation above code, have declared dictionary names. used built-in function along with sorted() function that returned list sorted keys. Next, used items() function dictionary sorted order. Sorting Algorithm There various sorting algorithm sort dictionary; other arguments sorted method. Let's understand following example. Example daynames 'one' 'Monday' 'six' 'Saturday' ,'three' 'Wednesday' 'two' 'Tuesday' 'five': 'Friday' 'seven': 'Sunday' print(daynames) number 'one' 'two' 'three' 'four' 'five' 'six' 'seven' print(sorted(daynames key=number.__getitem__)) print([daynames[i] sorted(daynames key=number.__getitem__)]) Output: {'one': 'Monday', 'six': 'Saturday', 'three': 'Wednesday', 'two': 'Tuesday', 'five': 'Friday', 'seven': 'Sunday'} ['one', 'two', 'three', 'five', 'six', 'seven'] ['Monday', 'Tuesday', 'Wednesday', 'Friday', 'Saturday', 'Sunday'] Reverse sorted Order dictionary reversed using reverse argument. Let's understand following example. Example {'a':2 ,'b':1 ,'c':3 ,'d':4 ,'e':5 ,'f':6 print(sorted(a.values() reverse= True)) Output: this tutorial, have discussed sort dictionary Python. sorted dictionary easy handle large amount data gives fast search result. Next TopicStrong Number Python prev next