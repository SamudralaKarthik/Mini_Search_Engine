next prev Python combination without itertools There many instances when have find different combinations from single strings different numbers. find such combinations Python, have itertools module, most common finding different combinations permutations. This module very efficient tool works very fast find possible combinations. itertools module functions only possible method that find combinations. this tutorial, will learn about different methods which find different combinations from string Python without using itertools. Combinations Python without using itertools this section, will write Python programs find combinations implementing several methods them. will following methods Python program: Using Iteration method Using recursion method both methods, first, will look program understood it's working, then will move explanation part understand implementation used Python combinations using iteration method: implement iterative approach program, have import numpy library functions. Let's understand following example. Example: Import numpy module program import numpy Default function iterative approach RecurCombo(iterArray, num): char tuple(iterArray) converting input string into tuple len(char) length string tuple m: checking length combinations more than length string return index np.arange(num) using numpy arrange() function Yielding first sequence yield tuple(char[i] index) Using while loop with true condition while True: iterating over tuple made using reversed loop reversed(range(num)): index[a] num: break else: return index[a] another loop iteration range(a num): index[b] index[b yield tuple(char[a] index) yielding possible combinations from given string Taking input string from user inputArray input("Enter input string find combinations: Printing different combinations result output print("All possible combinations three letter sets from string given print([x RecurCombo(inputArray, 3)]) Output: Enter input string find combinations: JavaTpoint possible combinations three letter sets from string given [('J', 'a', 'v'), ('J', 'a', 'a'), ('J', 'a', 'T'), ('J', 'a', 'p'), ('J', 'a', 'o'), ('J', 'a', 'i'), ('J', 'a', 'n'), ('J', 'a', 't')] Explanation: have used iteration method above program find combinations from input string. First, have used default Python function with input string length combinational parameter. Then, converted input string into tuple. also checked required length combination more than length string. After that, used arrange() function numpy index tuple. going iterate over tuple with index variable. Then, iterated over tuple using reverse loop another loop inside while loop. After iteration loops, have yielded possible combinations required length. Then, have taken input string from user. last, returned combinations three sets from input string. Python combinations using recursion method: Recursive method approach, will iterate over list that consists list strings. Let's understand following example. Example: Default Python function recursive approach RecurCombo(array, num): return [[]] length combination list printed result Using loop implement recursive approach range(0, len(array)): emptyArray array[j] define empty array print list sets recurList array[j Recursion method list defined function RecurCombo(recurList, num-1): l.append([emptyArray]+x) appending list return list result recursion __name__=="__main__": Taking input string from user inputArray input("Enter input string find combinations: Printing different combinations result output print("All possible combinations three letter sets from string given print(RecurCombo([a inputArray], Output: Enter input string find combinations: Python possible combinations three letter sets from string given [['P', 'y', 't'], ['P', 'y', 'h'], ['P', 'y', 'o'], ['P', 'y', 'n'], ['P', 't', 'h'], ['P', 't', 'o'], ['P', 't', 'n'], ['P', 'h', 'o'], ['P', 'h', 'n'], ['P', 'o', 'n'], ['y', 't', 'h'], ['y', 't', 'o'], ['y', 't', 'n'], ['y', 'h', 'o'], ['y', 'h', 'n'], ['y', 'o', 'n'], ['t', 'h', 'o'], ['t', 'h', 'n'], ['t', 'o', 'n'], ['h', 'o', 'n']] Explanation: above program, while implementing recursive approach, haven't used specific module Python. Like iteration method, used default function implement recursion method code. this program, used condition check required length combination. Then, used recursion method inside function with loop. After using recursion method, returned combinations required length from input string. Last, took string input from user returned combinations three sets output. Next TopicPython Comprehensions prev next