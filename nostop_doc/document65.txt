next prev Python OpenCV object detection OpenCV huge open-source library image processing, machine learning computer vision. also playing important role real-time operation. With help OpenCV library, easily process images well videos identify objects, faces even handwriting human present file. will only focus object detection from images using OpenCV this tutorial. will learn about OpenCV object detection from given image using Python program. Object Detection Basically, object detection modern computer technology that related image processing, deep learning computer vision detect objects present image file. technologies used Object detection technique mentioned earlier) deals with detecting instances object image video. Object Detection using OpenCV have learned about object detection previous section, this section, will learn that object detection image video using OpenCV library. will first import OpenCV library Python program, then will functions perform object detection image file given But, before using importing library functions, let's first install requirements using Object detection technique. this tutorial, will Haar cascade technique object detection. Let's learn brief about Haar cascade technique first. Haar cascade: Basically, Haar cascade technique approach based machine learning where positive negative images train classifier classify between images. Haar cascade classifiers considered effective object detection with OpenCV library. Now, let's understand concept positive negative images that have discussed earlier: Positive images: These images that contain objects which want identified from classifier. Negative Images: These images that contain object that want detected classifier, these images everything else. Requirements object detection with Python OpenCV: have install first some important libraries system important requirement doing object detection tasks. have install following libraries into system requirement performing object detection: Installation OpenCV library: First foremost, requirement perform object detection using OpenCV library that OpenCV library should present device that import into Python program object detection functions. this library present system, following command command prompt terminal install install opencv-python When press enter after writing this command terminal, installer command prompt will start installing OpenCV library into system. that, OpenCV library successfully installed system, import into Python program functions. Installation matplotlib library: Matplotlib very helpful opening, closing, reading etc., images Python program, that's installation this library object detection becomes important requirement. matplotlib library present system, have following command command prompt terminal install install matplotlib When press enter after writing this command terminal, installer command prompt will start installing into system. that, matplotlib library successfully installed system, import into Python program functions opening, reading etc., images. have installed required libraries performing object detection, move ahead with implementation part this task. Implementation Object detection Python: this part, will write Python programs object detection understand implementation will following image Python program perform object detection Opening Image will first open image given above create environment picture show output. Let's first look example program understand implementation, then will look explanation part. Example Opening image using OpenCV matplotlib library Python program: Import OpenCV module import Import pyplot from matplotlib pltd from matplotlib import pyplot pltd Opening image from files imaging cv2.imread("opencv-od.png") Altering properties image with img_gray cv2.cvtColor(imaging, cv2.COLOR_BGR2GRAY) imaging_rgb cv2.cvtColor(imaging, cv2.COLOR_BGR2RGB) Plotting image with subplot() from pltd.subplot(1, Displaying image output pltd.imshow(imaging_rgb) pltd.show() Output: Explanation: First, have imported OpenCV cv2) matplotlib plt) libraries into program their functions code. After that, have opened image file using imread() function cv2. Then, have defined properties image opened program using functions. Then, subplot image using subplot() function giving parameters last, have used imshow() show() function module show image output. output, image displayed result program, borders have been sub-plotted. Recognition object detection image Now, will detectMultiScale() program detect object present image. Following syntax using detectMultiScale() function code: found xml_data.detectMultiScale(img_gray, minSize (30, 30)) will condition statement with this function program check object from image detected highlight detected part. Let's understand implementation object detection image through example program. Example Object detection image using detectMultiScale() following Python program: Import OpenCV module import Import pyplot from matplotlib from matplotlib import pyplot pltd Opening image from files imaging cv2.imread("opencv-od.png") Altering properties image with imaging_gray cv2.cvtColor(imaging, cv2.COLOR_BGR2GRAY) imaging_rgb cv2.cvtColor(imaging, cv2.COLOR_BGR2RGB) Importing Haar cascade classifier data xml_data cv2.CascadeClassifier('XML-data.xml') Detecting object image with Haar cascade classifier detecting xml_data.detectMultiScale(imaging_gray, minSize (30, 30)) Amount object detected amountDetecting len(detecting) Using condition highlight object detected amountDetecting width, height) detecting: cv2.rectangle(imaging_rgb, Highlighting detected object with rectangle height, width), 275, Plotting image with subplot() from pltd.subplot(1, Displaying image output pltd.imshow(imaging_rgb) pltd.show() Output: Explanation: After opening image program, have imported cascade classifier file into program. Then, used detectMultiScale() function with imported cascade file detect object present image not. used condition program check that object detected not, object detected, have highlighted detected object part using loop with functions. After highlighting detected object part image, have displayed processed image using show() imshow() function. output, image with object detected part highlighted shown when program. Next TopicPython SimpleImputer module prev next