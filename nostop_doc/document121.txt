next prev Convert Text Speech Python this tutorial, will learn convert human language text into human-like speech. Sometimes prefer listening content instead reading. multitasking while listening critical file data. Python provides many APIs convert text speech. Google Text Speech popular commonly known gTTS API. very easy tool provides many built-in functions which used save text file file. don't need neural network train model covert file into speech, also hard achieve. Instead, will these APIs complete task. gTTS provides facility convert text files into different languages such English, Hindi, German, Tamil, French, many more. also play audio speech fast slow mode. However, latest update cannot change speech file; will generate system changeable. convert text files into, will another offline library called pyttsx3. Installation gTTS Type following command terminal install gTTS API. install gTTS Then, install additional module work with gTTS. install playsound then install pyttsx3. install pyttsx3 Let's understand working gTTS import gtts from playsound import playsound that, very easy use; need import pass gTTS object that interface Google Translator API. make request google synthesis gtts.gTTS("Welcome javaTpoint") above line, have sent data text received actual audio speech. Now, save this audio file welcome.mp3. save audio file t1.save("welcome.mp3") will save into directory, listen this file follow: play audio file playsound("welcome.mp3") Output: Please turn system volume, listen text have saved earlier. Now, will define complete Python program text into speech. Python Program Import gTTS module text speech conversion from gtts import gTTS This module imported that play converted audio from playsound import playsound text value that want convert audio text_val 'All best your exam.' Here converting English Language language 'en' Passing text language engine, here have assign slow=False. Which denotes module that transformed audio should have high speed gTTS(text=text_val, lang=language, slow=False) #Here saving transformed audio file named exam.mp3 obj.save("exam.mp3") Play exam.mp3 file playsound("exam.mp3") Output: Explanation: above code, have imported gTTS function. gTTS() function which takes three arguments first argument text value that want convert into speech. second argument specified language. supports many languages. convert text into audio file. third argument represents speed speech. have passed slow value false; means speech will normal speed. saved this file exam.py, which accessible anytime, then have used playsound() function listen audio file runtime. list available languages available languages, following functions Output: {'af': 'Afrikaans', 'sq': 'Albanian', 'ar': 'Arabic', 'hy': 'Armenian', 'bn': 'Bengali', 'bs': 'Bosnian', 'ca': 'Catalan', 'hr': 'Croatian', 'cs': 'Czech', 'da': 'Danish', 'nl': 'Dutch', 'en': 'English', 'et': 'Estonian', 'tl': 'Filipino', 'fi': 'Finnish', 'fr': 'French', 'de': 'German', 'el': 'Greek', 'en-us': 'English (US)','gu': 'Gujarati', 'hi': 'Hindi', 'hu': 'Hungarian', 'is': 'Icelandic', 'id': 'Indonesian', 'it': 'Italian', 'ja': 'Japanese', 'en-ca': 'English (Canada)', 'jw': 'Javanese', 'kn': 'Kannada', 'km': 'Khmer', 'ko': 'Korean', 'la': 'Latin', 'lv': 'Latvian', 'mk': 'Macedonian', 'ml': 'Malayalam', 'mr', 'en-in': 'English (India)'} have mentioned important languages their code. find almost every language this library. Offline have used Google API, what want convert text speech using offline. Python provides pyttsx3 library, which looks TTS engines pre-installed platform. Let's understand pyttsx3 library: Example import pyttsx3 initialize Text-to-speech engine engine pyttsx3.init() convert this text speech text "Python great programming language" engine.say(text) play speech engine.runAndWait() above code, have used say() method passed text argument. used word speak queue, while runAndWait() method runs real event loop until commands queued also provides some additional properties that according needs. Let's details speaking rate: details speaking rate rate engine.getProperty("rate") print(rate) Output: change rate speed want: setting voice rate (faster) engine.setProperty("rate", 300) engine.say(text) engine.runAndWait() pass then will slower. engine.setProperty("rate", 100) engine.say(text) engine.runAndWait() Now, hear text file voices. details voices available voices engine.getProperty("voices") print(voices) Output: [<pyttsx3.voice.Voice object 0x000002D617F00A20>, <pyttsx3.voice.Voice object 0x000002D617D7F898>, <pyttsx3.voice.Voice object 0x000002D6182F8D30>] this tutorial, have discussed transformation text file into speech using third-party library. also discussed offline library. using this, build virtual assistance. Next TopicBubble Sort Python prev next