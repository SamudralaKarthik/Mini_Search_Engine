next prev Read Contents using (Optical Character Recognition) Python Python most preferred programming languages today's world. analyzing data, data always available required format. such cases, convert format file from pdf, jpg text (.txt) format analyzing data better way. There many libraries available perform such tasks. PyPDF2 module Python performing task converting .pdf file into text format. major disadvantage face while using this module encoding scheme. document files contain variety encodings such Unicode, ASCII, UTF-8, many more. Therefore, converting files into text result loss data because encoding schema. this tutorial, will learn read content file store text (.txt) format using "Optical Character Recognition" method. first, have convert pages document file into images, then, will reading content from image storing text (.txt) format file. Required Modules: have install following modules using given command this tutorial: PIL: !pip3 install pytesseract: !pip3 install pytesseract pdf2image: !pip3 install pdf2image tesseract-ocr: !pip3 install tesseract-ocr (for this user should have Microsoft Visual 14.0, with "Build Tools Visual Studio": https://visualstudio.microsoft.com/downloads/) Part first part will deal with converting pages into image files. Each page file will stored image file, names images will stored page page_no_1.jpg page page_no_2.jpg page page_no_3.jpg page page_no_4.jpg page page_no_n.jpg Part second part would deal with recognizing text from image files sorting into text file ".txt" format. Here, will process image files converting them into text content. Once have text string variable, start processing text (.txt) file. Such many PFD files, that when line complete, last word cannot written entirely same line, then, hyphen added end, word continued following line. example: This example show above explanation wo- rd which cannot written entirely same line conti- nued next line. such words, will fundamental pre-processing converting hyphen following line into full word. When complete pre-processing, this text will sorted separate text file. Code: from import Image import pytesseract import from pdf2image import convert_from_path CFP import Importing file PDF_file_1 "exp.pdf" pages_1 CFP(PDF_file1, Now, will create counter storing images each page image image_counter1 Iterating through pages file stored above page pages_1: will Declare filename each page file file each page, filename will page Page_no_1.jpg page no.2: Page_no_2.jpg page Page_no_3.jpg page Page_no_4.jpg .... on.. page page_n.jpg filename1 "Page_no_" str(image_counter) .jpg" Now, will save image page system page.save(filename1, 'JPEG') Then, will increase counter updating filenames image_counter1 image_counter1 Part Recognize text content from image files using Variable getting count total number pages filelimit1 image_counter1 then, will create text file writing output out_file1 "output_text.txt" Now, will open output file append mode that contents images will added same output file. f_1 open(out_file1, "a") Iterating from total number pages range(1, filelimit1 Now, will filename recognizing text from images Again, these files will Page_no_1.jpg Page_no_2.jpg Page_no_3.jpg .... page_no_n.jpg filename1 "Page_no_" str(K) .jpg" Here, will write code recognizing text string variable image file using pytesserct module text1 str(((PT.image_to_string (Image.open (filename1))))) recognized text will stored variable text string variable processing applied text content Here, basic formatting will done:- text1 text1.replace('-\n', last, will write processed text into file. f_1.write(text1) Closing file after writing text content. f_1.close() Output: Input file: Output Text file: see, pages file converted into images. Then those images were read, their content written into text file. Advantages using method: user avoid text-based conversions, which cause loss data encoding scheme. module also recognize handwritten content file. user also modify recognizing only particular pages using module. pre-processing done large amount gets text variable form. Disadvantages using method: disk storage used storing image files local system. However, these files take very little space. does guarantee 100% accuracy. Whereas file documents created computer result very high accuracy. module recognize handwritten content, accuracy depends numerous factors such color page, clear handwriting many more. Conclusion this tutorial, have discussed read files' content using Python. Next TopicGrammar Spell Checker Python prev next