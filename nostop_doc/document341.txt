next prev Convert String Float Python quite familiar with data types available Python what kind different operations perform them. know that, Strings sequence characters that denoted using inverted commas They immutable which means they cannot changed once declared. float values nothing decimal values. check types using program given below- 2.71 printing type print(type(x)) 'Moscow' #printing type print(type(y)) Output: <class 'float'> <class 'str'> this tutorial, will discuss different scenarios converting string float Python. Using float function Converting string with commas Converting float list Converting list strings float Converting using NumPy Converting specified decimal points Using Float Function look first case where will float function, following program illustrates same- '2.71' float(x) print("The float value ",res) Output: float value 2.71 Explanation: Let's understand what have done above program- first step declare string value that would like convert. After this, will make float() which we'll then pass variable that holds string value. executing program, observe that displays required value. Converting String with Commas look second case where will convert string with commas, following program illustrates same- '27,.71' float(x.replace(',', '')) print("The float value ",res) Output: float value 2.71 Explanation: Let's understand what have done above program- first step declare string value that would like convert, this time comma present before decimal point. After this, will make replace() inside float() which we'll specify both, value would like replace with what would replaced. executing program, observe that displays required value. Converting Float List look third case where will convert string float list, following program illustrates same- x='1.21, 2.34, 3.42, 9.22, 5.43' res=[float(i) x.split(', ')] print("The list having float values: "+str(res)) Output: list having float values: 1.21, 2.34, 3.42, 9.22, 5.43] Explanation: Let's understand what have done above program- first step declare string value that would like convert, this time there list different decimal values separated with comma. After this, will make list comprehension that will take each value convert into required type. executing program, observe that displays required value. Converting List Strings Float look fourth case where will convert list strings float, following program illustrates same- x=['1.21', '2.34', '3.42', '9.22', '5.43'] res=[] res.append(float(i)) print('The list having float values:',res) Output: list having float values: 1.21,2.34,3.42,9.22,5.43] Let's understand what have done above program- first step declare list that contains string values it's elements After this, have declared empty list used loop that takes each element, converts into float value, appends into res. executing program, observe that displays required value. Converting Using NumPy look fifth case where will convert string using numpy, following program illustrates same- import numpy x=np.array(['1.21', '2.34', '3.42', '9.22', '5.43']) res=x.astype(float) print('The list having float values:',res) Output: list having float values: [1.21 2.34 3.42 9.22 5.43 Explanation: Let's understand what have done above program- first step import numpy library np. After this, have declared array that string values. Once this done, next step astype() specify float since this functionality/feature wish apply elements. executing program, observe that displays required value. Converting Specified Decimal Points Finally, last program will convert string specified decimal points, following program illustrates same- x='2.88731' val=float(x) res="{:.2f}".format(val) print(res) Output: 2.89 Explanation: Let's understand what have done above program- first step declare string value that would like convert. After this, will make float() pass variable Since want output decimal places, will mention this next statement. executing program, observe that displays required value. Conclusion this tutorial, understood different scenarios learned approaches convert string float Python. Next TopicDecorators with Parameters Python prev next