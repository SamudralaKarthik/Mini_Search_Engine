next prev Menu-Driven Programs Python Introduction Menu-Driven Program Menu-Driven Program program that gets input from user showing options list, known menu, from which user chooses their option. Systems processing Menu-Driven programs ordinary, starting from washing machines controlled Microprocessors Automated Teller Machines (ATMs). Taking case, user presses single keys indicate type transaction user wants receipt with cash, account statement needed). With many, user presses single indicate amount cash withdrawal. Menu-Driven Systems beneficial ways: first, input taken single keystrokes, which reduces chance system prone user error. Secondly, Menu-Driven Systems limits characters range resulting where entered input becomes unambiguous. Hence, these characteristics make whole system pretty user-friendly. following tutorial, will discover some Menu-Driven Programs written Python. These programs will understand different aspects Menu-Driven Programs along with different libraries modules Python Programming Language. let's started. Calculate Parameter Area different Shapes using functions Program: defining functions p_circle(radius): para 3.14 radius print("Parameter Circle:", para) p_rectangle(height, width): para (height width) print("Parameter Rectangle:", para) p_square(side): para side print("Parameter Square:", para) a_circle(radius): area 3.14 radius radius print("Area Circle:", area) a_rectangle(height, width): area height width print("Area Rectangle:", area) a_square(side): area side side print("Area Square:", area) printing starting line print("WELCOME SIMPLE MENSURATION PROGRAM") creating options while True: print("\nMAIN MENU") print("1. Calculate Parameter") print("2. Calculate Area") print("3. Exit") choice1 int(input("Enter Choice:")) choice1 print("\nCALCULATE PARAMETER") print("1. Circle") print("2. Rectangle") print("3. Square") print("4. Exit") choice2 int(input("Enter Choice:")) choice2 radius int(input("Enter Radius Circle:")) p_circle(radius) elif choice2 height int(input("Enter Height Rectangle:")) width int(input("Enter Width Rectangle:")) p_rectangle(height, width) elif choice2 side int(input("Enter Side Square:")) p_square(side) elif choice2 break else: print("Oops! Incorrect Choice.") elif choice1 print("\nCALCULATE AREA") print("1. Circle") print("2. Rectangle") print("3. Square") print("4. Exit") choice3 int(input("Enter Choice:")) choice3 radius int(input("Enter Radius Circle:")) a_circle(radius) elif choice3 height int(input("Enter Height Rectangle:")) width int(input("Enter Width Rectangle:")) a_rectangle(height, width) elif choice3 side int(input("Enter Side Square:")) a_square(side) elif choice3 break else: print("Oops! Incorrect Choice.") elif choice1 break else: print("Oops! Incorrect Choice.") Output: WELCOME SIMPLE MENSURATION PROGRAM MAIN MENU Calculate Parameter Calculate Area Exit Enter Choice:1 CALCULATE PARAMETER Circle Rectangle Square Exit Enter Choice:2 Enter Height Rectangle:4 Enter Width Rectangle:5 Parameter Rectangle: MAIN MENU Calculate Parameter Calculate Area Exit Enter Choice:2 CALCULATE AREA Circle Rectangle Square Exit Enter Choice:1 Enter Radius Circle:2 Area Circle: 12.56 MAIN MENU Calculate Parameter Calculate Area Exit Enter Choice:5 Oops! Incorrect Choice. MAIN MENU Calculate Parameter Calculate Area Exit Enter Choice:3 Explanation: above example, have defined different functions printing estimated value after calculation. These functions include parameters areas circle, rectangle, square, respectively. have then printed heading program saying: WELCOME SIMPLE MENSURATION PROGRAM. Below that, have used infinite while loop print Main Menu containing different options. program then uses if-elif-else statements user input integer choosing options. program will also raise exception inserted integer present options list. have then created different submenus separating Parameter option Area option. have then added more options within these submenus describing different shapes. These options also take different integer values indicating radius circle, height width rectangle, side square. result, menu-driven program successfully created able calculate parameter areas different shapes. Menu-Driven Program create simple calculator following Menu-Driven Program, going build simple calculator Python. will infinite while loop functions same above. will design menu allowing user interact with calculator functions such addition, subtract, multiplication division. consider following program's syntax: Program: defining addition function add(a, print(a, "+", "=", sum) defining subtraction function subtract(a, difference print(a, "-", "=", difference) defining multiplication function multiply(a, product print(a, "x", "=", product) defining division function divide(a, division print(a, "/", "=", division) printing heading print("WELCOME SIMPLE CALCULATOR") using while loop print menu list while True: print("\nMENU") print("1. Numbers") print("2. Difference between Numbers") print("3. Product Numbers") print("4. Division Numbers") print("5. Exit") choice int(input("\nEnter Choice: using if-elif-else statement pick different options choice print( "\nADDITION\n") int( input("First Number: int( input("Second Number: add(a, elif choice print( "\nSUBTRACTION\n") int( input("First Number: int( input("Second Number: subtract(a, elif choice print( "\nMULTIPLICATION\n") int( input("First Number: int( input("Second Number: multiply(a, elif choice print( "\nDIVISION\n") int( input("First Number: int( input("Second Number: divide(a, elif choice break else: print( "Please Provide valid Input!") Output: WELCOME SIMPLE CALCULATOR MENU Numbers Difference between Numbers Product Numbers Division Numbers Exit Enter Choice: ADDITION First Number: Second Number: MENU Numbers Difference between Numbers Product Numbers Division Numbers Exit Enter Choice: SUBTRACTION First Number: Second Number: MENU Numbers Difference between Numbers Product Numbers Division Numbers Exit Enter Choice: MULTIPLICATION First Number: Second Number: MENU Numbers Difference between Numbers Product Numbers Division Numbers Exit Enter Choice: DIVISION First Number: Second Number: MENU Numbers Difference between Numbers Product Numbers Division Numbers Exit Enter Choice: Explanation: above program, have used almost similar procedure previous program. have defined various functions such add, subtract, multiply, divide. have then used while loop print menu list users if-elif-else statements return answers that user needed. result, simple calculator successfully created performs some basic calculations like addition, subtraction, multiplication, division. Menu-Driven Program create Phone Directory following Menu-Driven Program, going create Phonebook Directory using different functions. will following features Phonebook Directory: Storing Contact Numbers People Searching Contact Number using person's name implement this idea following program: Program: printing heading program print( "WELCOME PHONEBOOK DIRECTORY") creating .txt file store contact details filename "myphonebook.txt" myfile open(filename, "a+") myfile.close defining main menu main_menu(): print( "\nMAIN MENU\n") print( "1. Show existing Contacts") print( "2. Contact") print( "3. Search existing Contact") print( "4. Exit") choice input("Enter your choice: choice "1": myfile open(filename, "r+") filecontents myfile.read() len(filecontents) print( "There contact phonebook.") else: print(filecontents) myfile.close enter input("Press Enter continue ...") main_menu() elif choice "2": newcontact() enter input("Press Enter continue ...") main_menu() elif choice "3": searchcontact() enter input("Press Enter continue ...") main_menu() elif choice "4": print("Thank using Phonebook!") else: print( "Please provide valid input!\n") enter input( "Press Enter continue ...") main_menu() defining search function searchcontact(): searchname input( "Enter First name Searching contact record: remname searchname[1:] firstchar searchname[0] searchname firstchar.upper() remname myfile open(filename, "r+") filecontents myfile.readlines() found False line filecontents: searchname line: print( "Your Required Contact Record is:", print( line) found True break found False: print( "The Searched Contact available Phone Book", searchname) first name input_firstname(): first input( "Enter your First Name: remfname first[1:] firstchar first[0] return firstchar.upper() remfname last name input_lastname(): last input( "Enter your Last Name: remlname last[1:] firstchar last[0] return firstchar.upper() remlname storing contact details newcontact(): firstname input_firstname() lastname input_lastname() phoneNum input( "Enter your Phone number: emailID input( "Enter your E-mail Address: contactDetails ("[" firstname lastname phoneNum emailID "]\n") myfile open(filename, "a") myfile.write(contactDetails) print( "The following Contact Details:\n contactDetails "\nhas been stored successfully!") main_menu() Output: WELCOME PHONEBOOK DIRECTORY MAIN MENU Show existing Contacts Contact Search existing Contact Exit Enter your choice: There contact phonebook. Press Enter continue MAIN MENU Show existing Contacts Contact Search existing Contact Exit Enter your choice: Enter your First Name: Mark Enter your Last Name: Henry Enter your Phone number: 1234567890 Enter your E-mail Address: [email protected] following Contact Details: [Mark Henry, 1234567890, [email protected]] been stored successfully! Press Enter continue MAIN MENU Show existing Contacts Contact Search existing Contact Exit Enter your choice: Enter First name Searching contact record: Mark Your Required Contact Record [Mark Henry, 1234567890, [email protected]] Press Enter continue MAIN MENU Show existing Contacts Contact Search existing Contact Exit Enter your choice: [Mark Henry, 1234567890, [email protected]] Press Enter continue MAIN MENU Show existing Contacts Contact Search existing Contact Exit Enter your choice: Thank using Phonebook! Explanation: above Menu-Driven Program, have created Phonebook Directory that store contact text file, display stored contacts allow users search existing number too. First all, have created text file store contact details. have then defined various functions order add, show, search different contacts. have also created different contact detail fields such First Name, Last Name, Mobile Number, E-mail Address. result, program completed successfully, output same seen above. Conclusion above tutorial, have understood meaning Menu-Driven Programming along with some examples. have created three different programs, including mensuration program, simple calculator, phonebook directory. Apart from these three, there many other programs that create. Next TopicPython Array List prev next