next prev Simple registration form using Tkinter Python This tutorial will show Python's tkinter make simple registration form. need know little about tkinter before start. Therefore, will first examine this tkinter module before making basic registration form. Introducing Tkinter Although there other development alternatives Python, Tkinter most popular. ordinary Python library Tkinter. quickest simplest approach create object-oriented application with Python tkinter package. offers number standard (graphical user interface) building blocks, such buttons, menus, other types entry fields display regions, that utilise create user interfaces. Some common widgets used Tkinter Frame serves holding area other widgets serves container. Text enables display alter text variety styles offers prepared text display. Label Used display text images, unable interact with Button Often used buttons functions methods Entry One-line string text entered into this widget. Labelframe intricate window layouts, this widget serves separator container. Listbox just text elements, which same colour font. Scrollbar: This gives sliding controller. Canvas Custom widgets implemented using canvas widget. Scale This widget offers graphical slider items that choose different scale values. Radiobutton radio button carry several choices. Checkbox checkbox implement on-off choices. Listbox just text elements, which same colour font. start making simple registration form using Tkinter Step first step import tkinter module (using either tkinter import just import tkinter). Step primary window programme created. Step Include more widgets programme (controls such buttons, labels, text boxes, etc.). Step Enter primary events react each event that user triggered. Making registration form using Tkinter Python This section will discuss tkinter-based registration form written Python. that time, will talk about widgets them. registration page's interface only part code that published here. entire application code published bottom. let's begin building simple registration form now, that requires backend effort. utilised database connectivity future. Firstly, will import Tkinter module into Python program. from tkinter import* base Tk() Now, will draw window using geometry method specify dimensions window title method give title window drawn. base.geometry('500x500') base.title("Registration Form") Next, will various methods create variable entry boxes. First, will create labl_0 label registration form using place method will placed certain dimension. Next, will create labl_1 label Full name using place method will placed certain dimension along with entry using Entry method with another place method. Next, will create labl_2 label Email using place method will placed certain dimension along with entry using Entry method with another place method. Next, will create labl_3 label Gender using place method will placed certain dimension along with entry using Entry method with another place method. later, will create labl_4 label using place method will placed certain dimension along with entry using Entry method with another place method. will also Radiobutton method buttons male female options. labl_0 Label(base, text="Registration form",width=20,font=("bold", 20)) labl_0.place(x=90,y=53) labl_1 Label(base, text="FullName",width=20,font=("bold", 10)) labl_1.place(x=80,y=130) entry_1 Entry(base) entry_1.place(x=240,y=130) labl_2 Label(base, text="Email",width=20,font=("bold", 10)) labl_2.place(x=68,y=180) entry_02 Entry(base) entry_02.place(x=240,y=180) labl_3 Label(base, text="Gender",width=20,font=("bold", 10)) labl_3.place(x=70,y=230) varblbl IntVarblbl() Radiobutton(base, text="Male",padx varblbliable=varblbl, value=1).place(x=235,y=230) Radiobutton(base, text="Female",padx varblbliable=varblbl, value=2).place(x=290,y=230) labl_4 Label(base, text="Age:",width=20,font=("bold", 10)) labl_4.place(x=70,y=280) entry_02 Entry(base) entry_02.place(x=240,y=280) Finally, submit button included that people submit their information. Button(base, text='Submit',width=20,bg='brown',fg='white').place(x=180,y=380) Complete code from tkinter import* base Tk() base.geometry('500x500') base.title("Registration Form") labl_0 Label(base, text="Registration form",width=20,font=("bold", 20)) labl_0.place(x=90,y=53) labl_1 Label(base, text="FullName",width=20,font=("bold", 10)) labl_1.place(x=80,y=130) entry_1 Entry(base) entry_1.place(x=240,y=130) labl_2 Label(base, text="Email",width=20,font=("bold", 10)) labl_2.place(x=68,y=180) entry_02 Entry(base) entry_02.place(x=240,y=180) labl_3 Label(base, text="Gender",width=20,font=("bold", 10)) labl_3.place(x=70,y=230) varblbl IntVarblbl() Radiobutton(base, text="Male",padx varblbliable=varblbl, value=1).place(x=235,y=230) Radiobutton(base, text="Female",padx varblbliable=varblbl, value=2).place(x=290,y=230) labl_4 Label(base, text="Age:",width=20,font=("bold", 10)) labl_4.place(x=70,y=280) entry_02 Entry(base) entry_02.place(x=240,y=280) Button(base, text='Submit',width=20,bg='brown',fg='white').place(x=180,y=380) will used displaying registration form onto window base.mainloop() print("Registration form created seccussfully...") Output: Registration form created successfully... Example consider example registration Form using Tkinter Python. This example includes Dropdown list feature addition previously used features. Code from tkinter import base Tk() base.geometry("500x500") base.title("registration form") lb1= Label(base, text="Enter Name", width=10, font=("arial",12)) lb1.place(x=20, y=120) en1= Entry(base) en1.place(x=200, y=120) lb3= Label(base, text="Enter Email", width=10, font=("arial",12)) lb3.place(x=19, y=160) en3= Entry(base) en3.place(x=200, y=160) lb4= Label(base, text="Contact Number", width=13,font=("arial",12)) lb4.place(x=19, y=200) en4= Entry(base) en4.place(x=200, y=200) lb5= Label(base, text="Select Gender", width=15, font=("arial",12)) lb5.place(x=5, y=240) vars IntVar() Radiobutton(base, text="Male", padx=5,variable=vars, value=1).place(x=180, y=240) Radiobutton(base, text="Female", padx =10,variable=vars, value=2).place(x=240,y=240) Radiobutton(base, text="others", padx=15, variable=vars, value=3).place(x=310,y=240) list_of_cntry ("United States", "India", "Nepal", "Germany") StringVar() drplist= OptionMenu(base, *list_of_cntry) drplist.config(width=15) cv.set("United States") lb2= Label(base, text="Select Country", width=13,font=("arial",12)) lb2.place(x=14,y=280) drplist.place(x=200, y=275) lb6= Label(base, text="Enter Password", width=13,font=("arial",12)) lb6.place(x=19, y=320) en6= Entry(base, show='*') en6.place(x=200, y=320) lb7= Label(base, text="Re-Enter Password", width=15,font=("arial",12)) lb7.place(x=21, y=360) en7 =Entry(base, show='*') en7.place(x=200, y=360) Button(base, text="Register", width=10).place(x=200,y=400) base.mainloop() Output: Example consider more example registration Form using Tkinter Python, better understanding purposes. This example also includes Checkbox widget feature addition previously used features. Complete Code #Creating simple registration form using Tkinter Python #import tkinter module into code from tkinter import #Creating object 'base' Tk() base Tk() #Using Geometry method form certain dimensions base.geometry("550x550") #Using title method give title window base.title('Registration form') #Now, will 'Label' method widget Registration Form also place() method their positions. lbl_0 Label(base, text="Registration form", width=20,font=("bold",20)) #the place method tkinter module helps user geometry, that dimensions certain widget placing them certain position lbl_0.place(x=90,y=60) #Using 'Label' widget create Full name label using place() method position. lbl_1 =Label(base, text= "FullName", width=20,font=("bold",10)) lbl_1.place(x=80,y=130) #Using Enrty widget make text entry accepting input string text from user. enter_1 Entry(base) enter_1.place(x=240,y=130) #Using 'Label' widget create Email label using place() method position. lbl_3 Label(base, text="Email", width=20,font=("bold",10)) lbl_3.place(x=68,y=180) #Using Enrty widget make text entry accepting input string text from user. enter_3 Entry(base) enter_3.place(x=240,y=180) #Using 'Label' widget create Gender label using place() method position. lbl_4 Label(base, text="Gender", width=20,font=("bold",10)) lbl_4.place(x=70,y=230) #Using variable 'vars' store integer value, which deault vars IntVar() #Using Radio button widget create option choosing button using place() method position. Radiobutton(base, text="Male", padx= variable= vars, value=1).place(x=235, y=230) Radiobutton(base, text="Female", padx= variable= vars, value=2).place(x=290,y=230) #Using 'Label' widget create Countries label using place() method, position. lbl_5=Label(base, text ="Country", width=20,font=("bold",11)) lbl_5.place(x=70,y=280) #this creates list countries available dropdown list. list_of_cntry=[ 'India' ,'Canada' 'US' ,'Germany' ,'UK'] #the variable 'cv' introduced store String Value, which default (empty) StringVar() drplist OptionMenu(base, *list_of_cntry) drplist.config(width=15) cv.set('Select your Country') drplist.place(x=240, y=280) #Using 'Label' widget create Language label using place() method, position. lbl_6=Label(base, text="Language", width=20,font=('bold',10)) lbl_6.place(x=75,y=330) #the variable 'vars1' created store Integer Value, which default vars1=IntVar() #Using Checkbutton widget create button using place() method position. Checkbutton(base,text="English", variable vars1).place(x=230,y=330) #the variable 'vars1' created store Integer Value, which default vars2=IntVar() #Using Checkbutton widget create button using place() method position. Checkbutton(basetext="German", variable=vars2).place(x=290, y=330) #Using Button widget, create button submitting data that been entered entry boxes form user. Button(base, text='Submit' width=20, bg="black",fg='white').place(x=180,y=380) #Calling mainloop method execute entire program. base.mainloop() Output: output aforementioned Simple registration form's code, using Tkinter Python attached below form screenshot. Next TopicPython String equals prev next