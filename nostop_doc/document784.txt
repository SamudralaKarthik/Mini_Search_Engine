next prev Scatter Plotting Python using Matplotlib What Matplotlib? Matplotlib library Python which used create static dynamic animation plots with inbuilt functions. inbuilt features built-in analysis tools analyzing figure graph. want plot three-dimensional figure then Matplotlib library. When have huge dataset three-dimensional variables, plot figure then looks very scattered, this called scatter plot. will Matplotlib's matplot3d toolkit draw three-dimensional figure. There ax.scatterd3D() function which accepts dataset coordinates Z. takes many more arguments based attributes want give three-dimensional plot. When Matplotlib first created, only two-dimensional plotting considered. practical (albeit rather constrained) collection tools three-dimensional data visualization created around time release layering some three-dimensional charting utilities Matplotlib's two-dimensional display. importing mplot3d toolkit, which part basic Matplotlib installation, three-dimensional charts made possible. simplest three-dimensional plot scatter plot made lines clusters triples. These produced using ax.plot3D ax.scatter3D functions, much like more typical two-dimensional chart that were previously presented. These have call signature that remarkably similar their two-dimensional counterparts. create illusion depth page, scatter points' transparency been altered. Example importing necessary libraries import numpy import matplotlib.pyplot from mpl_toolkits import mplot3d generating random dataset np.random.randint(80, size =(55)) np.random.randint(60, size =(55)) np.random.randint(64, size =(55)) Creating figures plot plt.figure(figsize (10, plt.axes(projection ="3d") Creating plot using random datasets ax.scatter3D(x, color "red") plt.title("3D scatter plot") display plot plt.show() Output: Explanation: above example, have created three-dimensional plot using ax.scatter() function. have initially imported libraries required, like numpy,matplotlib mpl_toolkits. Then, have created datasets coordinates random numbers using randInt() function. After that have used ax.scatter3D() function coordinates, took color points. end, display plot using show() function. Example importing necessary libraries from mpl_toolkits import mplot3d import matplotlib.pyplot import numpy Creating random dataset np.tan(np.random.randint(10, size =(500))) np.random.randint(100, size =(500)) np.cos(z) np.random.normal(size 500) np.sin(z) np.random.normal(size 500) Creating figure plt.figure(figsize (16, 12)) plt.axes(projection ="3d") gridlines figure ax.grid(b True, color ='blue',linestyle ='-.', linewidth 0.5,alpha 0.3) Creating color plot my_cmap plt.get_cmap('hsv') Creating plot sctt ax.scatter3D(x, z,alpha 0.8,c z),cmap my_cmap,marker ='^') plt.title("3D scatter plot Python") ax.set_xlabel('X-axis', fontweight ='bold') ax.set_ylabel('Y-axis', fontweight ='bold') ax.set_zlabel('Z-axis', fontweight ='bold') fig.colorbar(sctt, shrink 0.6, aspect display plot plt.show() Output: Explanation: above code, have plotted three-dimensional plot with function ax.scatter3D() function. have generated random datasets coordinates plotted them using marker '^'. set_label function give labels respective axes. Example import matplotlib.pyplot from mpl_toolkits.mplot3d import Axes3D plt.figure() fig.add_subplot(111, projection='3d') =[1,2,3,4,5,6,7,8,9,10] =[5,6,2,3,13,4,1,2,4,8] =[2,3,3,3,5,7,9,11,9,10] =[-1,-2,-3,-4,-5,-6,-7,8,-9,-10] =[-5,-6,-2,-3,-13,-4,-1,2,-4,-8] =[-2,-3,-3,-3,-5,-7,9,-11,-9,-10] ax.scatter(x2, c='r', marker='^') ax.scatter(x2, c='b', marker='o') ax.set_xlabel('X Axis') ax.set_ylabel('Y Axis') ax.set_zlabel('Z Axis') plt.show() Output: Explanation: above example, have plotted dimensional datasets simultaneously same code. first three-dimensional plot, have chosen blue color points marker points figure. same second plot, have chosen color points marker points figure. Next TopicFunction Annotations Python prev next