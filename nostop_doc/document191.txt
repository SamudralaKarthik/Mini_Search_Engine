next prev Python Modulus Operator Like other programming languages, Python modulus operator does same work find modulus given number. operator mathematical symbol used perform different operations such (+, addition, subtraction, multiplication, division given numbers return result form integer well float number. operator tells compiler perform certain actions based passed operator symbol given number. Modulus Operator Python Modulus Operator inbuilt operator that returns remaining numbers dividing first number from second. also known Python modulo. Python, modulus symbol represented percentage symbol. Hence, called remainder operator. Syntax Following syntax remainder dividing first number from second. Rem Here integer numbers, modulus used between remainder where first number divided second number (Y). example, have numbers, remainder using modulus modulo operator between numbers Here divided that returns remainder, quotient. When first number completely divisible another number without leaving remainder, result will modulus integers numbers using while loop Let's write program remainder numbers using while loop modulus operator Python. Get_rem.py while True: while condition true block executed input ('Do want continue a.upper() 'Y': user pass 'Y', following statement executed. break int(input First number first number int(input Second number second number print(a, perform print(b, perform Output: want continue First number Second number want continue First number Second number want continue First number Second number modulus float numbers Let's write program find remainder integer number using modulus operator Python. Mod.py float(input ('First number: float(input Second number: store remainder variable print("Modulus float number "%", res, Output: First number: 40.5 Second number: 20.5 Modulus float number 40.5 20.5 20.0 modulus negative number Let's write program remainder negative number using while loop modulus operator Python. Mod.py while True: input(' want continue x.upper() 'Y': break input integer number store into int(input First number: int(input Second number: print("Modulus negative number "%", print("Modulus negative number "%", Output: First number: Second number: Modulus negative number Modulus negative number want continue modulus numbers using fmod() function Let's write program remainder float number using fmod() function Python. Fmod.py import math import math package fmod() function. math.fmod(25.5, 5.5) pass parameters print ("Modulus using fmod() is:", res) math.fmod(75.5, 15.5) print Modulus using fmod() is:", ft) take integer from user int( input( "First number is")) (input ("Second number math.fmod(x, pass parameters print("Modulus numbers using fmod() function is", out) Output: Modulus using fmod() Modulus using fmod() 13.5 First number Second number Modulus numbers using fmod() function modulus numbers using function Let's write Python program find modulus number using function loop. getRemainder.py getRemainder(n, range(1, Store remainder variable when divided number print(i, rem, ")	 _name_ driver code __name__ "__main__": define first number displaying number desired number. int(input ("Define number till that want display remainder int( input Enter second number define divisor call define function getRemainder(n, Output: Define number till that want display remainder Enter second number modulus given array using mod() function Let's write program demonstrate mod() function Python. Mod_fun.py import numpy import numpy package np.array([40, -25, 35]) define first array np.array([20, define second array call mod() function pass parameter print("The modulus given array np.mod Output: modulus given array above program, variables hold arrays. After that, mod() function pass array parameter that divides first array(x) second array(y) then returns remainder numbers. modulus numbers using numpy. Let's consider program import numpy package from Python library then remainder function modulus Python. Num.py import numpy import numpy package declaration variables with their values num2 np.remainder(num, num2) np.remainder() function print( "Modulus is", num, num2, res) display modulus num2 Output: Modulus Exceptions Python Modulus operator Python, when number divided zero, throws exception, exception called ZeroDivisionError. other words, returns exception when number divisible divisor that zero. Therefore, want remove exception from Python modulus operator, divisor should zero. Let's write program demonstrate Python Exception Modulus operator. Except.py int(input first number int(input second number display exception handling try: define print except ZeroDivisionError err: define exception print ('Cannot divide number zero! 'So, change value right operand.' Output: first number second number Cannot divide number zero! change value right operand. above result, displays, "Cannot divide number zero! change value right operand". Hence, say, when divide first number zero, returns exception. Next TopicMATLAB Python prev next