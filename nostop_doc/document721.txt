next prev Control Statements Python Loops employed Python iterate over section code continually. Control statements designed serve purpose modifying loop's execution from default behaviour. Based condition, control statements applied alter loop executes. this tutorial, covering every type control statement that exists Python. Control Statements Python Statements statement arguably most used statement control loops. instance: Code Python program show statements control loops range(n): print(i) Output: Break Statements Python, break statement employed remove control from loop that contains statement. used nested loops loop inside another loop), which shared with both types Python loops. inner loop completed, control transferred following statement outside loop. Code Python program show control flow loops with break statement Details [[19, 'Itika', 'Jaipur'], [16, 'Aman', 'Bihar']] candidate Details: candidate[0] break print (f"{candidate[1]} state {candidate[2]} eligible vote") Output: Itika state Jaipur eligible vote above code, candidate's less than equal interpreter won't generate statement eligibility. Otherwise, interpreter will print message mentioning that candidate eligible vote console. Continue Statements When Python interpreter sees continue statement, skips present iteration's execution condition satisfied. condition satisfied, allows implementation current iteration. employed keep program running even when meets break while being executed. Code Python program show control flow loop using continue statement Printing only letters string coder': continue print ('Letter: Output: Letter: Letter: Letter: Letter: Letter: Letter: Letter: Letter: Letter: this code, when if-statement encounters space, loop will continue following letter without printing space. Pass Statements condition met, pass statement, null operator, used coder leave Python's pass control statement changes nothing moves following iteration without stopping execution skipping steps after completing current iteration. coder pass statement prevent interpreter from throwing error when loop code block left empty. Code Python program show create empty code blocks using pass statement 'Python': 't': pass print('Letter: Output: Letter: Letter: Letter: Letter: Letter: Letter: Even condition satisfied code above, see, pass statement effect, execution went subsequent iteration. else Loop else statement used with clause, have previously learned. Python supports combining else keyword with while loop. After code block loop, else block displayed. After completing iterations, interpreter will carry code else code block. Only when else block been does program break from loop. Code Python program show else statements with loop range(5): print(f"Current iteration: {n+1}") else: print("This else block") print("Outside loop") Output: Current iteration: Current iteration: Current iteration: Current iteration: Current iteration: This else block Outside loop match Statements match statement compares value expression series patterns. These patterns presented some case blocks. Contrary appearances, this more akin pattern checking other languages like Rust than switching clauses Java other coding languages). also pull components (sequential elements object characteristics) from values into variables, only first matching pattern executed. most straightforward form contrasts subject value with more regular expressions: Code Python program show match control statement used error(error_status): match error_status: case 400: return "Error 400: request" case 404: return "Error 404: Link found" case 418: return "Error 418: Server Down" case return "Check Your Internet Connection" print(error(400)) print(error(404)) Output: Error 400: request Error 404: Link found Next TopicHow Plot Histogram Python prev next