next prev Download YouTube Videos Using Python Scripts this tutorial, will understand download YouTube videos using Python script. know that Python many features, extensive modules libraries them. will popular pytube library write Python script. YouTube very popular online video streaming platform. There millions videos from various categories such education, entertainment, travel, etc. easily watch videos that want with simple clicks, downloading videos tough. However, recent update, YouTube allows save videos download folder that play offline. cannot save them locally. Many third-party websites available that fetches videos save them local computer mobile phone. simplify process using Python. will take lines code, desired video downloaded easily. Let's implementation pytube library Python. pytube Library pytube third-party, lightweight, Pythonic; dependency-free module used downloading YouTube videos. Hence, native library, need install first before using Type following command your terminal command prompt. Command install pytube After hitting enter, above command will download packages local system. Note recommend install this library virtual environment. Download Single Video using Pytube Library Pytube made download YouTube videos very easily. First, import YouTube class from pytube module. from pytube import YouTube create object YouTube class passing link parameter. video_url 'https://youtu.be/2JBYnvUlAEc' youtube_obj YouTube(video_url) This youtube_obj creates various streams from YouTube video URL. Using below code, stream information. stream youtube_obj.streams: print(stream) Then proper extension resolution video. After doing this, will download() method that takes parameter, file download location. mp4files youtube_obj.streams.filter('mp4') youtube_obj.set_filename('Downloaded Video') d_video youtube_obj.get(mp4files[-1].extension,mp4files[-1].resolution) provide file suitability; original name will kept another case. implement complete code. Let's understand following code. Example importing module from pytube import YouTube download location file DOWNLOAD_PATH C:/Users/USER/Desktop/" link video downloaded link="https://youtu.be/oQdxL_WW3aE" try: creating youtube object using YouTube youtube_obj YouTube(link) except: print("Connection Error") handle exception filters files with "mp4" extension mp4files youtube_obj.streams.filter('mp4') name file youtube_obj.set_filename('Downloaded Video') video with extension resolution passed get() function d_video youtube_obj.get(mp4files[-1].extension,mp4files[-1].resolution) try: downloading video d_video.download(DOWNLOAD_PATH) except: print("The Some Error!") print('Task Completed!') Output: Task Completed above code will take some time download file data being downloaded from web. connection speed also dependent downloading speed. also download multiple videos. Fetch Video Title fetch title video downloaded using below code. YouTube('https://youtu.be/oQdxL_WW3aE') print(yt.title) Output: Shamshera Date Announcement Teaser Ranbir Kapoor, Sanjay Dutt, Vaani Kapoor Cinemas July following would thumbnail url. YouTube('https://youtu.be/oQdxL_WW3aE') print(yt.thumbnail_url) Output: https://i.ytimg.com/vi/oQdxL_WW3aE/sddefault.jpg Advance Create YouTube Object YouTube object essential move further pytube programming. Earlier, discussed create simple object, will move create YouTube object with more properties. Let's following example. Example YouTube( 'https://youtu.be/oQdxL_WW3aE', on_progress_callback=progress_func, on_complete_callback=complete_func, proxies=my_proxies, use_oauth=False, allow_oauth_cache=True Properties on_process_callback This function used downloading chunks from video, takes three parameters: data chunks bytes remaining video. on_complete_callback This function will execute when video fully downloaded. used post-download operations like trimming length video. takes arguments stream file path. use_oauth allow_oauth_cache This allows authorize pytube interact with YouTube user account. also used bypass restrictions. Subtitle/Caption Tracks Pytube provides facility available captions. Let's following snippet. Example YouTube('http://youtube.com/watch?v=2lAe1cqCOXo') yt.captions Output: {'ar': <Caption lang="Arabic" code="ar">, 'zh-HK': <Caption lang="Chinese (Hong Kong)" code="zh-HK">, 'zh-TW': <Caption lang="Chinese (Taiwan)" code="zh-TW">, 'hr': <Caption lang="Croatian" code="hr">, 'cs': <Caption lang="Czech" code="cs">, 'da': <Caption lang="Danish" code="da">, 'nl': <Caption lang="Dutch" code="nl">, 'en': <Caption lang="English" code="en">, 'en-GB': <Caption lang="English (United Kingdom)" code="en-GB">, 'et': <Caption lang="Estonian" code="et">, 'fil': <Caption lang="Filipino" code="fil">, 'fi': <Caption lang="Finnish" code="fi">, 'fr-CA': <Caption lang="French (Canada)" code="fr-CA">, 'fr-FR': <Caption lang="French (France)" code="fr-FR">, 'de': <Caption lang="German" code="de">, 'el': <Caption lang="Greek" code="el">, 'iw': <Caption lang="Hebrew" code="iw">, 'hu': <Caption lang="Hungarian" code="hu">, 'id': <Caption lang="Indonesian" code="id">, 'it': <Caption lang="Italian" code="it">, 'ja': <Caption lang="Japanese" code="ja">, 'ko': <Caption lang="Korean" code="ko">, 'lv': <Caption lang="Latvian" code="lv">, 'lt': <Caption lang="Lithuanian" code="lt">, 'ms': <Caption lang="Malay" code="ms">, 'no': <Caption lang="Norwegian" code="no">, 'pl': <Caption lang="Polish" code="pl">, 'pt-BR': <Caption lang="Portuguese (Brazil)" code="pt-BR">, 'pt-PT': <Caption lang="Portuguese (Portugal)" code="pt-PT">, 'ro': <Caption lang="Romanian" code="ro">, 'ru': <Caption lang="Russian" code="ru">, 'sk': <Caption lang="Slovak" code="sk">, 'es-419': <Caption lang="Spanish (Latin America)" code="es-419">, 'es-ES': <Caption lang="Spanish (Spain)" code="es-ES">, 'sv': <Caption lang="Swedish" code="sv">, 'th': <Caption lang="Thai" code="th">, 'tr': <Caption lang="Turkish" code="tr">, 'uk': <Caption lang="Ukrainian" code="uk">, 'ur': <Caption lang="Urdu" code="ur">, 'vi': <Caption lang="Vietnamese" code="vi">} Now, will English captions. caption yt.captions.get_by_language_code('en') Output: <stdin>:1: DeprecationWarning: Call deprecated function get_by_language_code (This object treated dictionary, i.e. captions['en']). Let's format caption. caption.xml_captions Output: <?xml version="1.0" encoding="utf-8" ?><timedtext format="3">\n<body>\n<p t="10200" d="940">K-pop!</p>\n<p t="13400" d="2800">That awkward watch.</p>\n<p t="16200" d="2080">YouTube Rewind 2018.</p>\n<p t="18480" d="3520">The most disliked video\nin history YouTube.</p>\n<p t="22780" d="2220">In 2018, made something\nyou didn?t like.</p>\n<p t="25100" d="2470">So 2019, let?s what\nyou DID like.</p>\n<p t="27580" d="1400">Because you?re better this\nthan are.</p>\n<p t="45110" d="1310">This outfit!</p>\n<p t="46920" d="1240">What gonna be?</p>\n<p t="58180" d="1370">You made these the</p>\n<p t="59710" d="1680">MOST LIKED CREATOR VIDEOS\n*of 2019, duh?</p>\n<p t="62480" d="1700">Shane Dawson Conspiracy Theories with Shane Dawson\n1.9M</p>\n<p t="65000" d="2690">A4 ??????? ?????? ?????? ???????? !\n2M</p>\n<p t="67690" d="2750">Andymation BIGGEST Flipbook EVER\n2.3M</p>\n<p t="70930" d="1730">James Charles More Lies\n2.4M</p>\n<p t="73070" d="2030">SethEverman create billie eilish?s ?bad guy?\n2.8M</p>\n<p t="76010" d="2300">Nilson Izaias Papinho Oficial Minha slime deu certo\n2.8M</p>\n<p t="79290" d="2540">Black Gryph0n GUY, VOICES\n3.4M</p>\n<p t="82650" d="2380">whinderssonnunes DIA EM QUE ASSISTI BIRD BOX\n3.4M</p>\n<p t="86290" d="2630">PewDiePie Marzia Felix Wedding\n4.7M</p>\n<p t="89890" d="3530">MrBeast Make This Video Most Liked Video YouTube\n10.9M</p>\n<p t="99150" d="2410">The MOST LIKED\nMUSIC VIDEOS</p>??. have taken sample output; hence consists many lines format. Download Multiple Videos same process while downloading single video. create list with multiple URLs iterate using loop. Let's understand following example. Example from pytube import YouTube #where save DOWNLOAD_PATH "D:/Users/User/NewFolder" #to_do #List links video downloaded video_link=["https://www.youtube.com/watch?v=xWOoBJUqlbI", "https://www.youtube.com/watch?v=xWOoBJUqlbI" video_link: try: YouTube(i) except: handle exception print("Connection Error") mp4files yt.filter('mp4') d_video yt.get(mp4files[-1].extension,mp4files[-1].resolution) try: downloading video d_video.download(DOWNLOAD_PATH) except: print("There some Error!") print('Videos Download Successfully!') loop will pick link time pass YouTube class create object. passed resolution get() function saved value desired location. Then, filtered files with mp4 extension. Python Search Features Pytube allows perform search functionality same YouTube using searching bar. provide YouTube objects that inspected downloaded instead needing additional processing. Let's understand following example. Example from pytube import Search Search('Cricket World Cup') s.results Output: [<pytube.__main__.YouTube object: videoId=AFEZzf9_EHk>, <pytube.__main__.YouTube object: videoId=_PNIlJry8vA>, <pytube.__main__.YouTube object: videoId=MFI-r7_xH-Y>, <pytube.__main__.YouTube object: videoId=mEOBGY4-7JA>, <pytube.__main__.YouTube object: videoId=n7xSITvP4D4>, <pytube.__main__.YouTube object: videoId=A5OU6YP3Jm4>, <pytube.__main__.YouTube object: videoId=Kwu1yIC-ssg>, <pytube.__main__.YouTube object: videoId=lA2Ojyb0gqg>, <pytube.__main__.YouTube object: videoId=gkWHGy70jIg>, <pytube.__main__.YouTube object: videoId=amMJfaB5dXo>, <pytube.__main__.YouTube object: videoId=rl3L2SGgmNo>, <pytube.__main__.YouTube object: videoId=AVbfs0-509k>, <pytube.__main__.YouTube object: videoId=Wi2oqXS6SlY>, <pytube.__main__.YouTube object: videoId=HNXhdo5j914>, <pytube.__main__.YouTube object: videoId=gmVj3yOdOFo>, <pytube.__main__.YouTube object: videoId=WUODHf0IT5U>, <pytube.__main__.YouTube object: videoId=mUniRe7tysE>, <pytube.__main__.YouTube object: videoId=ynG6tkLO3SQ>] Searches also have associated autocomplete suggestions. These accessed below. s.completion_suggestions Output: ['2000 world final', '1999 world final', '2003 world final', '1996 world india pakistan', 'india pakistan champions trophy 2017 highlights', 'india australia 2011 world highlights', 'icc world 2021', 'icc world 2019 song', 't20 world 2016 final'] Points remembered download videos, must have proper internet connection. Otherwise, will raise error. change file's name using another array names. Improper internet connection will stop download raise error. Conclusion this tutorial, have covered pytube library cases. best download YouTube videos without visiting websites. Video downloading sites might take time show many irrelevant advertisements. Python, with lines code, download single multiple videos without interruption. However, would good proper internet connection. This library also consists many advanced features, have mentioned important features. want read more about pytube library, visit official well-written documentation. Next TopicTraffic Flow Simulation Python prev next