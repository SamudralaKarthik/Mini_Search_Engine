next prev COVID-19 Data Representation using Tkinter Python globe currently experiencing coronavirus COVID-19 pandemic, which simply pandemic serious global health issue. Coronavirus 2019 (COVID-19) infectious illness brought coronavirus that causes severe acute respiratory syndrome (SARS-CoV-2). 2019 coronavirus pandemic caused illness, which initially discovered Wuhan, China, 2019. Since then, spread around world. Fever, coughing, shortness breath common signs. Less frequently experienced include sore throat, sputum production, muscle ache. must thus stay informed overall number confirmed cases, number recovered confirmed cases, number active cases, number deaths attributable coronavirus. Through websites news channels, acquire latest. Some nations mobile applications access updates well. These made feasible information technology. Python offers "COVID" package obtain data COVID cases globally well nation. result, will utilise Python libraries gather data country- global-level distribution coronavirus. This article focuses more utilising Python Tkinter build effective applications than does COVID-19. makes simple technology your designed quick start guide. display overall number fatalities nation (this article uses India example) specific date well total number verified COVID-19 cases using Python graphing packages. This article will interpretation processing data, which humans occasionally require assistance with. this tutorial, will through Tkinter Python develop COVID-19 Data Representation Application encode "COVID" related data obtain visualised updates graphical format. must import libraries order create this interface; list libraries that will require shown below. json library retrieving COVID-19 data. Tkinter library Used development. json library Python offers "json" package that will notify COVID-related data global national level. thus learn more about number confirmed instances ongoing cases utilising this library. Tkinter Library popular libraries Python programmes with graphical user interfaces. Graphical User Interface (GUI) merely desktop programme that facilitates computer interaction. desktop computers, laptops, other electronic devices, they carry various functions. Tkinter frequently makes variety Tkinter widgets, functions, characteristics that help developers build stunning applications. HTML, widgets resemble HTML components. Different widget kinds correspond various element types Tkinter. Among all, most commonly used Canvas Shapes drawn your using Canvas. Button widget buttons Tkinter placed using Button widget. Checkbutton Create check buttons your application using checkbutton tool. should aware that pick many options once. Entry construct input fields GUI, utilise Entry widget. Frame Tkinter, frames utilised containers. Label They used construct single-line widgets, such text, photos, other elements. Menu GUI, menus made using menu command. Walking through Code create that necessary script, first Tkinter Library. order obtain data from unofficial api, utilising requests Library. information want then shown, total active cases confirmed cases. begin import requests import json from tkinter import first imported tkinter modules along with imported json modules requests modules too, which will provide data representation. windw Tk() creating Window windw.title(" Covid-19 Specifying dimensions Window windw.geometry('220x70') Then, created instance tkinter module. Next, window created. title() method used give title geometry() method used specify dimensions window. Defining various labels labl Label(windw 			text ="Total active cases :-......") labl1 Label(windw 			text "Total confirmed cases :-...") labl.grid(column labl1.grid(column labl2 Label(windw text labl2.grid(column Next, created label order fill some text that will displayed window, using label method. Labl created storing value first label, which active number cases labl1 created storing value second label, which confirmed number cases. labl2 created show note after data will refreshed. And, using grid() method, these labels told their positions context column. Defining function import updated data clicks(): Using link open then importing json data help json Library 	link "https://api.covid19india.org data.json" requests.get(link) json.loads(pg.text) 	labl.configure(text Total active cases 				+ dt["statewise"][0]["active"]) 	labl1.configure(text Total Confirmed cases 				+ dt["statewise"][0]["confirmed"]) 	labl2.configure(text "Data refreshed") Then created function called clicks(), which when called will give updated data that particular moment. this, also used variable link provide link external resource from where data will needed fetched. variable pg used store data attained using get() method, from link mentioned before. Also, variable called also created order store data textual form that attained from json library using loads() method. Then, using configure method provided text that should displayed labels labl, labl1 labl2 being called function clicks(). bttn Button(windw text "Refresh" command clicks) bttn.grid(column Then lastly, used button method create refresh button, which clicking would refresh data provide updated data. windw.mainloop() Ultimately, when programme prepared launch, mainloop() function called. mainloop() endless loop that used launch programme, watch events, handle them long window open. Complete code Python program creating COVID- Data Representation using tkinter import requests import json from tkinter import windw Tk() creating Window windw.title(" Covid-19 Specifying dimensions Window windw.geometry('220x70') Defining various labels labl Label(windw 			text "Total active cases :-......") labl1 Label(windw 			text "Total confirmed cases :-...") labl.grid(column labl1.grid(column labl2 Label(windw text labl2.grid(column Defining function import updated data clicks(): Using link open then importing json data help json Library 	link "https://api.covid19india.org data.json" requests.get(link) json.loads(pg.text) 	labl.configure(text Total active cases 				+ dt["statewise"][0]["active"]) 	labl1.configure(text Total Confirmed cases 				+ dt["statewise"][0]["confirmed"]) 	labl2.configure(text "Data refreshed") bttn Button(windw text "Refresh" command clicks) bttn.grid(column windw.mainloop() Output: screenshot output displayed aforementioned code added below. Conclusion Through this article, know develop Covid-19 Data Representation using Tkinter Python. This only helpful track latest counts active number cases total number confirmed cases, also projection that Python helpful gather arrange certain type data help humans. Next TopicImage Viewer Using Tkinter Python prev next