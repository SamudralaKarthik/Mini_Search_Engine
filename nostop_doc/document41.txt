next prev Python Math Module Mathematical calculations occasionally required when dealing with certain fiscal rigorous scientific tasks. Python math module that handle these complex calculations. Both simple mathematical calculations like addition (+), subtraction (-), advanced mathematical calculations like trigonometric operations, logarithmic operations performed functions math module. This tutorial teaches about applying math module from fundamentals more advanced concepts with support easy examples understand concepts fully. have included list built-in functions defined this module better understanding. What Math Module Python? Python built-in math module. standard module, don't need install separately. only have import into program want use. import module, like other module Python, using import math implement functions perform mathematical operations. Since source code this module language, provides access functionalities underlying library. instance, Code This program will show calculation square root using math module importing math module import math print(math.sqrt( Output: This Python module does accept complex data types. more complicated equivalent cmath module. can, example, calculate trigonometric ratios given angle using built-in functions math module. must provide angles radians these trigonometric functions (sin, cos, tan, etc.). However, accustomed measuring angles terms degrees. math module provides methods convert angles from radians degrees vice versa. Constants Math Module value numerous constants, including tau, provided math module that have remember them. Using these constants eliminates need precisely repeatedly write down value each constant. math module includes following constants: Euler's Number Infinity Number (NaN) Let's over each them one. Euler's Number value 2.71828182845 Euler's number returned math.e constant. Syntax this math.e Code importing required library import math printing value Euler's number using math module print( "The value Euler's Number math.e Output: value Euler's Number 2.718281828459045 ratio circle's circumference radius known tau. value returned constant 6.283185307179586. Syntax this math.tau Code Importing required library import math Printing value using math module print "The value math.tau Output: value 6.283185307179586 Infinity Infinity refers anything limitless never-ending both directions actual number line. Numbers cannot adequately represent math.inf returns positive infinity constant. -math.inf print negative infinity. Syntax this math.inf Code Importing required library import math Printing value positive infinity using math module print( math.inf Printing value negative infinity using math module print( -math.inf Output: -inf Further, comparing very large floating-point number with positive negative infinity values. Code Importing required library import math comparing value infinity print( math.inf 10e109 print( -math.inf -10e109 Output: True True known everyone. mathematically represented either fraction 22/7 decimal number 3.14. math.pi gives most accurate value Syntax this math.pi Code Importing required library import math Printing value using math module print( "The value math.pi Output: value 3.141592653589793 calculate circumference circle. Code Importing required library import math radius circle value pi_value math.pi circumference circle print(2 pi_value Code 25.132741228718345 math.nan gives floating-point (Not Number) value. This amount valid numeric value. Float("nan") constant comparable. Code Importing required library import math Printing value using math module print( math.nan Output: Mathematical Operations with Math Module functions that required representation theory number theory, such calculating factorial integer, will covered this part. Calculating Ceiling Floor Value terms "ceiling value" "floor value" refer smallest integral value larger than number largest integral value less than number, respectively. ceil() floor() methods simplify calculating this. Code Python program show floor() ceil() functions. importing math module import math 4.346 returning ceiling value 4.346 print("The ceiling value 4.346 end="") print( math.ceil(x) returning floor value 4.346 print("The floor value 4.346 end="") print( math.floor(x) Output: ceiling value 4.346 floor value 4.346 Calculating Factorial Number determine factorial given integer one-liner code using math.factorial() function. Python interpreter will send message given number integral. Code Python program show function() functions. importing math module import math returning factorial print( "The factorial math.factorial(x) passing integral number try: print( "The factorial math.factorial(6.5) except: print( "Cannot calculate factorial non-integral number" Output: factorial Cannot calculate factorial non-integral number Calculating Absolute Value method math.fabs() returns absolute number number given function. Code Python program show fabs() functions. importing math module import math returning absolute value. print( "The absolute value math.fabs(x) Output: absolute value 45.0 Calculating Exponential power often known exponential number calculated using exp() function. Code Python program show exp() function. importing math module import math declaring some value num1 num2 num3 0.00 passing above values exp() function print( f"The exponenetial value {num1} math.exp(num1) print( f"The exponenetial value {num2} math.exp(num2) print( f"The exponenetial value {num3} math.exp(num3) Output: exponenetial value 54.598150033144236 exponenetial value 0.049787068367863944 exponenetial value Calculating Power Number x**y computed pow() function. This function calculates value power after converting inputs into floats. Code Python program show pow() function. importing math module import math returning power print( f"The value power math.pow(x,y) Output: value power 1024.0 Calculating Sine, Cosine, Tangent values sine, cosine, tangent angle, which supplied input function, returned sin(), cos(), tan() methods. This function expects value that provided radians. Code Python program show sin(), cos(), tan() function. importing math module import math angle math.pi returning sine pi/4 print( "The sine pi/4 math.sin( angle returning cosine pi/4 print( "The cosine pi/4 math.cos( angle returning tangent pi/4 print("The tangent pi/4 math.tan( angle Output: sine pi/4 0.7071067811865475 cosine pi/4 0.7071067811865476 tangent pi/4 0.9999999999999999 dir( Function sorted list strings comprising identifiers functions defined module what built-in method dir() delivers. list includes names modules, each specified constants, functions, methods. Here straightforward illustration: Code Importing math module import math functions dir(math) print( functions Output: ['__doc__', '__loader__', '__name__', '__package__', '__spec__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'comb', 'copysign', 'cos', 'cosh', 'degrees', 'dist', 'e', 'erf', 'erfc', 'exp', 'expm1', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'gamma', 'gcd', 'hypot', 'inf', 'isclose', 'isfinite', 'isinf', 'isnan', 'isqrt', 'lcm', 'ldexp', 'lgamma', 'log', 'log10', 'log1p', 'log2', 'modf', 'nan', 'nextafter', 'perm', 'pi', 'pow', 'prod', 'radians', 'remainder', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'tau', 'trunc', 'ulp'] Description Functions Python Math Module Here list properties functions specified math module, along with brief description what each does. Function Description ceil(x) lowest integer bigger than equal returned. copysign(x, gives back with sign fabs(x) gives absolute value back. factorial(x) provides factorial back. floor(x) gives back biggest integer that less than equal fmod(x, returns leftover value after dividing frexp(x) returns pair mantissa exponent (m, fsum(iterable) returns iterable's correct floating point values. isfinite(x) neither infinity NaN, returns True (Not Number) isinf(x) positive negative infinity, returns True. isnan(x) NaN, returns True. ldexp(x, gives back (2**i). modf(x) gives fractional integer components back. trunc(x) shortened integer value returned. exp(x) delivers e**x expm1(x) yields e**x log(x[, b]) gives back logarithm base (defaults log1p(x) natural logarithm returned. log2(x) gives base-2 logarithm back. log10(x) provides base-10 logarithm. pow(x, gives raised power back. sqrt(x) gives square root back. acos(x) gives cosine back. asin(x) gives sine back. atan(x) gives tangent back. atan2(y, gives back atan(y cos(x) returns cosine. hypot(x, returns sqrt(x*x y*y), Euclidean norm. sin(x) gives sine back. tan(x) gives tangent back. degrees(x) Angle transformed from radians degrees. radians(x) Angle transformed from degrees radians. acosh(x) inverse hyperbolic cosine returned. asinh(x) inverse hyperbolic sine returned. atanh(x) inverse hyperbolic tangent returned. cosh(x) gives hyperbolic cosine. sinh(x) gives hyperbolic cosine. tanh(x) gives hyperbolic tangent back. erf(x) error function returned. erfc(x) function that gives complementary error gamma(x) Gamma function returned. lgamma(x) gives natural logarithm gamma function's absolute value ratio circle's circumference diameter mathematical constant (3.14159...) constant mathematics (2.71828...) Next TopicPython Tutorial prev next