next prev Create Dictionary Python Python, dictionary unordered sequence data entries that used record data entries same that can. Unlike alternative data structures that only carry singular item object, Dictionary contains key: value pair. dictionary includes Key-Value field improve efficiency this data type. Creating Dictionary create dictionary Python wrapping collection objects curly brackets segregating them with comma. Dictionary keeps track couple entries, part this called key, other called value referred key: value pair. store data type value give same value keys, keys should immutable unique. Code Initializing dictionary with some elements Dictionary 'Javatpoint', 'Python', 'Dictionary'} print("\nDictionary created using curly braces: print(Dictionary) Creating Dictionary with keys different data types Dictionary {'Website': 'Javatpoint', 'Dictionary']} print("\nDictionary with keys multiple data type: print(Dictionary) Output: Dictionary created using curly braces: 'Javatpoint', 'Python', 'Dictionary'} Dictionary with keys multiple data type: {'Website': 'Javatpoint', 'Dictionary']} built-in method dict() could also used generate dictionary. simply placing curly brackets blank dictionary built. Code Initializing empty Dictionary Dictionary print("An empty Dictionary: print(Dictionary) Creating Dictionary using in-built dict() method Dictionary dict({1: 'Python', 'Javatpoint', 3:'Dictionary'}) print("\nDictionary created using dict() method: print(Dictionary) Creating dictionary key:value pair format Dictionary dict([(1, 'Javatpoint'), 'Python'), 'Dictionary')]) print("\nDictionary with key:value pair format: print(Dictionary) Output: empty Dictionary: Dictionary created using dict() method: 'Python', 'Javatpoint', 'Dictionary'} Dictionary with key:value pair format: 'Javatpoint', 'Python', 'Dictionary'} Adding Elements Dictionary insertion items Python Dictionary could done various methods. Items added dictionary using this particular format Dictionary[Key] 'Value'. in-built update() function update current Dictionary. Nested key: values also inserted into preexisting Dictionary. key-value combination present dictionary, value that modified; this case, created added Dictionary with given value. Code Initializing empty Dictionary Dictionary print("The empty Dictionary: print(Dictionary) Inserting key:value pairs time Dictionary[0] 'Javatpoint' Dictionary[2] 'Python' Dictionary.update({ 'Dictionary'}) print("\nDictionary after addition these elements: print(Dictionary) Adding list values single Dictionary['list_values'] print("\nDictionary after addition list: print(Dictionary) Updating values already existing Dictionary[2] 'Tutorial' print("\nUpdated dictionary: print(Dict) Adding nested dictionary Dictionary[5] {'Nested_key' :{1 'Nested', 'Key'}} print("\nAfter addtion Nested Key: print(Dictionary) Output: empty Dictionary: Dictionary after addition these elements: 'Javatpoint', 'Python', 'Dictionary'} Dictionary after addition list: 'Javatpoint', 'Python', 'Dictionary', 'list_values': Updated dictionary: 'Javatpoint', 'Python'} After addtion Nested Key: 'Javatpoint', 'Tutorial', 'Dictionary', 'list_values': {'Nested_key': 'Nested', 'Key'}}} Removing Elements from Dictionary Using pop() function, eliminate specific item from dictionary. This function returns value removed. popitem() function removes returns (key, value) element pair from given dictionary. clear() function erase objects could also keyword eliminate single items even entire dictionary. Code Program show remove elements from dictionary initializing dictionary Dictionary 'a', 'b', 'c', 'd', 'e'} removing key:value pair from dictionary using pop() Dictionary.pop(4) print("\nAfter removing using pop(): print(Dictionary) remove item random using popitem() Dictionary.popitem() print("\nAfter removing arbitrary key: print(Dictionary) remove items present dictionary print("\nAfter removing items: Dictionary.clear() print(Dictionary) deleting dictionary variable Dictionary Printing dictionary after deleting try: print(Dictionary) except: print('No dictionary given name') Output: After removing using pop(): 'a', 'b', 'c', 'e'} After removing arbitrary key: 'a', 'b', 'c'} After removing items: dictionary given name Python Dictionary Methods techniques that with dictionary listed below. Some these have already been mentioned this tutorial. Method Description clear() Every item dictionary removed. copy() shallow replica dictionary returned. fromkeys(seq[, v]) This function gives dictionary having seq's keys v's values (defaults value keys None). get(key[,d]) This function returns value specific key. returns doesn't exist. items() returns object (key, value) format containing dictionary's contents. keys() Creates object with keys dictionary. pop(key[,d]) Eliminates item associated with given gives value, located. raises KeyError specified given found dictionary. popitem() Eliminates replaces random object (key, value). given dictionary empty, raises KeyError. setdefault(key[,d]) found dictionary, gives associated value. not, yields adds with value (default value None). update([other]) Overwrites preexisting keys given dictionary values() Initializes dictionary object with dictionary's elements. Next TopicHow create virtual environment Python prev next