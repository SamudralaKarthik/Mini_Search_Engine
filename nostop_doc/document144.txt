next prev Python array array collection linear data structures that contain elements same data type contiguous memory space. like container that holds certain number elements that have same data type. array's index starts therefore, programmer easily obtain position each element perform various operations array. this section, will learn about (two dimensional) arrays Python. Two-Dimensional Array (2D Array) array array arrays that represented matrix form like rows columns. this array, position data elements defined with indices instead single index. Syntax Array_name [rows][columns] declaration array Arr-name [m1, m2, m3, mn], [n1, n3, nn] Where column table. Access Two-Dimensional Array Python, access elements two-dimensional array using indices. first index refers indexing list second index refers position elements. define only index with array name, returns elements 2-dimensional stored array. Let's create simple program understand (two dimensional) arrays Python. 2dSimple.py Student_dt [72, 69], [80, 85], [96, 97], [90, 94], [57, #print(student_dt[]) print(Student_dt[1]) print elements index print(Student_dt[0]) print elements index print(Student_dt[2]) print elements index print(Student_dt[3][4]) defines index position data element. Output: above example, passed parameters into array that prints entire defined index. have also passed student_dt[3][4] that represents index position 2-dimensional array elements print particular element. Traversing element (two dimensional) Program.py write program traverse every element two-dimensional array Python. Student_dt [72, 69], [80, 85], [96, 97], [90, 94], [57, loop print entire elements dimensional array. Student_dt: outer loop inner loop print(i, print elements print() Output: Insert elements (Two Dimensional) Array insert elements into array using insert() function that specifies element' index number location inserted. Insert.py Write program insert element into (two dimensional) array Python. from array import import package related array. arr1 [[1, 12]] initialize array elements. print("Before inserting array elements: print(arr1) print arr1 elements. insert() function insert element that contains parameters. arr1.insert(1, first parameter defines index no., second parameter defines elements print("After inserting array elements arr1: Outer loop inner loop print(j, print inserted elements. print() Output: Update elements -D (Two Dimensional) Array array, existing value array updated with value. this method, change particular value well entire index array. Let's understand with example array, shown below. Create program update existing value array Python. Update.py from array import import package related array. arr1 [[1, 12]] initialize array elements. print("Before inserting array elements: print(arr1) print arr1 elements. arr1[0] update value index arr1[1][2] define index position array element update value. print("After inserting array elements arr1: Outer loop inner loop print(j, print inserted elements. print() Output: Delete values from (two Dimensional) array Python array, remove particular element entire index array using del() function Python. Let's understand example delete element. Delete.py from array import import package related array. arr1 [[1, 12]] initialize array elements. print("Before Deleting array elements: print(arr1) print arr1 elements. del(arr1[0][2]) delete particular element array. del(arr1[1]) delete index array. print("After Deleting array elements arr1: Outer loop inner loop print(j, print inserted elements. print() Output: Size array len() function used length two-dimensional array. other words, that len() function determines total index available 2-dimensional arrays. Let's understand len() function size 2-dimensional array Python. Size.py array_size [[1, 2],[2,5,7,9], [2,4,5,6]] index print("The size dimensional array print(len(array_size)) returns array_def [[1, index print("The size dimensional array print(len(array_def)) returns Output: Write program print 2-dimensional arrays Python. Matrix.py two_d_matrix(m, define function Outp initially output matrix empty range(m): iterate rows range(n): iterate column int(input(f "Enter matrix [{0}][{j}]")) row.append(num) user element Outp.append(row) append output matrix return Outp sum(A, define sum() function matrix. output initially, empty. print("Sum matrix range(len(A)): rows range(len(A[0])): columns row.append(A[i][j] B[i][j]) matrix output.append(row) return output return both matrix int(input("Enter value Row\n")) take rows int(input("Enter value columns\n")) take columns print("Enter First matrix print first matrix two_d_matrix(m, call matrix function print("display first (A) matrix") print(A) print matrix print("Enter Second matrix two_d_matrix(m, call matrix function print("display Second matrix") print(B) print matrix s= sum(A, call function print(s) print matrix. Output: Next TopicPython Memory Management prev next