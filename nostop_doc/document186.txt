next prev Basic Commands Python Magic Commands When Python introduced 1991, general assumption that Python "use risk" language. situation changed; Python dominant language present time, used data science, machine learning, software development. know that Python flexible language. features functions such magic command. This tutorial will discuss about magic commands. These magic commands surely help reduce headache. Introduction Magic commands easy designed syntax that facilitates perform routine task. These basically created accomplish some common task data analysis using Python. fact, they control nature IPython itself. used running external script calculating execution time piece code. different forms magic commands IPython. Line Magic line magic commands represent using prefix operates particular line input. used form expression their return value assigned variable. Cell Magic cell magic commands represent using prefix works complete cell multiple lines input. They receive whole block string. Let's learn about most popular interesting commands. Built -in Magic commands 1.%autocall [mode] %autocall[mode] magic function used make function automatically callable without having parentheses. %automagic magic function also callable without having initial need deactivate Output: Automagic OFF, prefix needed line magics. %run Suppose have file named program_test.py with following code. name() 	print("Hello Stuart?) name() following statement run. %run program_test.py script will without importing defined variables. above command will behave same python program_script.py file. Note offer access already defined variables using %run -i. access variables executed file IPython shell. This magic command changes current directory. automatically manages internal list directories visit during IPython session. Output: C:\Users\DEVANSH SHARMA Usage <dir> Changes current working directory <dir> %cd.. changes current directory parent directory. changes last visited directory. %dhist very useful magic command; prints directories have visited current session. Every time command executed, this updated variable. Output: Directory history (kept _dh) C:\Users\DEVANSH SHARMA %edit edit magic command unlocks default text editor current operating system (Notepad Window) editing Python script. edit current Python script editor. Output: IPython will make temporary file named: C:\Users\DEVANS~1\AppData\Local\Temp\ipython_edit_z41uo6o8\ipython_edit_zwb99en9.py %env[GUINAME] This magic command used enable disables IPython event loop integration. When GUINAME argument, this command replaces default toolkits specified one. %%timeit above command calculates time taken IPython environment execute Python program. Let's understand following program. %%timeit square_numbers [num**2 range(1,1000)] Output: 659 19.8 loop (mean std. dev. runs, 1000 loops each) %lsmagic This command will return list magic command. Let's following example. %lsmagic Output: %who above command will return list variables that defined current notebook. Output: c	 name	 z	 %pinfo <variable_name> returns detailed information about variable. inspect object that stored particular variable name. Let's understand following example. Command %pinfo Output: Type: String form: Docstring: int([x]) integer int(x, base=10) integer Convert number string integer, return arguments given. number, return x.__int__(). floating point numbers, this truncates towards zero. number base given, then must string, bytes, bytearray instance representing integer literal given base. literal preceded surrounded whitespace. base defaults Valid bases 2-36. Base means interpret base from string integer literal. int('0b100', base=0) %matplotlib inline used display matplotlib graph Jupyter notebook. However, this command available older version Jupyter notebook. newer versions, this longer use. %hist This command returns history current notebook. Means, what have done current notebook. Output %dhist %edit %env[GUINAME] %automagic name() print('Hello Stuart') name() name(): print('Hello Stuart') name() %%timeit square_number range(1,100): sqaure_number.append(num**2) %%timeit square_numbers range(1,100): sqaure_numbers.append(num**2) %%timeit square_numbers [num**2 range(1,1000)] %%html <html> <body> <h3>Student Marks</h3> <table> <tr> <th>Name</th> <th>Roll</th> <th>Age</th> <th>Marks</th> </tr> <tr> .......................................... .......................................... .......................................... Execute Html Script IPython execute HTML JavaScript code using magic command. helps provide some simple elements code. Syntax %%html allows execute html script. %%js allows execute script. Let's following example. Command %%html <html> <body> <h3>Employee Details</h3> <table> <tr> <th>Name</th> <th>Designation</th> <th>Age</th> <th>Salary</th> </tr> <tr> <td>Peter</td> <td>HR</td> <td>29</td> <td>93000</td> </tr> <tr> <td>Parker</td> <td>IT</td> <td>24</td> <td>92000</td> </tr> <tr> <td>Adam</td> <td>IT</td> <td>26</td> <td>120000</td> </tr> </table> </body> </html> Working with Environment Variable %env This command offers access handle system environment variables. Output: {'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\DEVANSH SHARMA\\AppData\\Roaming', 'C:\\PROGRAMDATA\\ANACONDA3\\SCRIPTS\\': 'C:\\ProgramData\\Anaconda3', 'C:\\USERS\\DEVANSH SHARMA\\APPDATA\\ROAMING\\NPM': 'C:\\Users\\DEVANSH SHARMA\\AppData\\Roaming\\npm', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'DESKTOP-2VAN176', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'DART_SDK': 'C:\\Program Files\\Dart\\dart-sdk', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\DEVANSH SHARMA', 'LOCALAPPDATA': 'C:\\Users\\DEVANSH SHARMA\\AppData\\Local', 'LOGONSERVER': '\\\\DESKTOP-2VAN176', 'NUMBER_OF_PROCESSORS': '4', 'ONEDRIVE': 'C:\\Users\\DEVANSH SHARMA\\OneDrive', 'OS': 'Windows_NT', 'PATH': 'C:\\Users\\DEVANSH SHARMA\\Anaconda3;C:\\Users\\DEVANSH SHARMA\\Anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\DEVANSH SHARMA\\Anaconda3\\Library\\usr\\bin;C:\\Users\\DEVANSH SHARMA\\Anaconda3\\Library\\bin;C:\\Users\\DEVANSH SHARMA.............. %env return value specific variable. example %env Output: 'Windows_NT' %env value used value variable var. Conclusion this tutorial, have covered important magic commands Jupyter notebook. These commands make work easier also provide flexibility notebook efficiently. Next TopicF String Python prev next