next prev StringIO Module Python StringIO module in-memory, file-like object. used input output majority functions users expect from ordinary file object. Once user creates StringIO objects, initially created providing string constructor. there string, StringIO will empty. both instances, initially displayed cursor file will start zero. module available most recent version Python; thus, able this module, need transfer into module Python form io.StringIO. Example: First, will import required module. from import StringIO arbitrary string. string_1 'This initialized string.' Here, will StringIO method setting file object. Now, have object-file that treat file. file_1 SIO(string_1) Now, will reading file using read() print (file_1.read()) Here, also write this file. file_1.write(" Welcome Javatpoint.com.") using following command, make cursor index file_1.seek(0) using following command, user able print file after writing #in initialized string (string_1). print ('The file string after writing is:', file_1.read()) Output: This initialized string. file string after writing This initialized string. Welcome Javatpoint.com. Important Methods StringIO: Following some methods StringIO: StringIO.getvalue(): This function used returning entire content file. Syntax: Syntax above method File_name.getvalue() Example: First, will import StringIO module. from import StringIO arbitrary string. string_1 'Hello thank visiting Javatpoint.com.' Here, will StringIO method setting file object. file_1 SIO(string_1) Retrieving complete contents above file. print(file_1.getvalue()) Output: Hello thank visiting Javatpoint.com this, look some functions StringIO that return Boolean value, i.e., either false true: isatty(): This function StringIO used returning False stream interactive True stream interactive. readable(): This function StringIO used returning False file readable True file readable. writable(): This function StringIO used returning False file does support writing True file supports writing. seekable(): This function StringIO used returning False file does support random access True file supports random access. closed: This function StringIO used returning False case file open returns True file closed. Syntax: Syntaxes above method File_name.isatty() File_name.readable() File_name.writable() File_name.seekable() File_name.closed Example: First, will import StringIO module. from import StringIO arbitrary string. string_1 'Hello thank visiting Javatpoint.com.' Here, will StringIO method setting file object. file_1 SIO(string_1) using following command, user will able return file #interactive not. print ("Is file stream above interactive?", file_1.isatty()) using following command, user will able return file readable not. print ("Is file stream above readable?", file_1.readable()) using following command, user will able return does file support writing not. print ("Is file stream above writable?", file_1.writable()) using following command, user will able return file #seekable not. print ("Is file stream above seekable?", file_1.seekable()) using following command, user will able return file #closed not. print ("Is file above closed?", file_1.closed) Output: file stream above interactive? False file stream above readable? True file stream above writable True file stream above seekable? True file above closed? False StringIO.seek(): seek() function used cursor's position within file. execute write read operation document, cursor placed index that last used that move cursor from beginning position file seek() employed. Syntax: Syntax above method File_name.seek(argument) #This argument tells function where place cursor. Example: First, will import StringIO module. from import StringIO arbitrary string. string_1 ='Hello thank visiting Javatpoint.com.' Here, will StringIO method setting file object. file_1 SIO(string_1) here, user will able Read file: print (file_1.read()) user wishes view file again, will display empty file since #cursor been last index. will also print anything because #the function returns empty string. print (file_1.read()) cursor position reading writing file again seek() function. pass index here form(0 len(file)) file_1.seek(0) user read file again print (file_1.read())S Output: Hello thank visiting Javatpoint.com. Hello thank visiting Javatpoint.com. StringIO.truncate(): This function used resizing size file stream. This method saves file drops after given index. Syntax: Syntaxes above method File_name.truncate(size None) user provide size from where truncate file. Example: First, will import StringIO module. from import StringIO arbitrary string. string_1 ='Hello welcome Javatpoint.com.' Here, will StringIO method setting file object. file_1 SIO(string_1) here, read initial file: print(file_1.read()) setting cursor file_1.seek(0) dropping file after given index, i.e., file_1.truncate(14) here, will print File after truncate. print(file_1.read()) Output: Hello welcome Javatpoint.com. Hello welc StringIO.tell(): This method used telling file's current stream cursor position. Syntax: Syntaxes above method File_name.tell() Example: First, will import StringIO module. from import StringIO arbitrary string. string_1 ='Hello welcome Javatpoint.com.' Here, will StringIO method setting file object. file_1 SIO(string_1) Here cursor index '0'. print(file_1.tell()) now, setting Cursor index '23'. file_1.seek(23) here, will printing index cursor print(file_1.tell()) Output: StringIO.close() This used closing file. This function called file, can't perform operations operation that done will result ValueError. Syntax: Syntaxes above method File_name.close( Example: First, will import StringIO module. from import StringIO arbitrary string. string_1 ='Hello welcome Javatpoint.com.' Here, will StringIO method setting file object. file_1 SIO(string_1) here, read initial file: print(file_1.read()) closing current file. file_1.close() user would perform operation above file now, will raise #ValueError. here, will using closed function know whether file closed #or not. print("Is file closed?", file_1.closed) Output: Hello welcome Javatpoint.com. file closed? True Next Topic10 Python Image Manipulation Tools prev next