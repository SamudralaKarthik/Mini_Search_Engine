next prev list Python this article, will discuss convert list Python. Before that let's have quick revision lists sets. List sequence elements enclosed square brackets where each element separated with comma. Syntax list [1,2,4.5,'Python','Java'] print list check type using- print(a) print(type(a)) NOTE: list mutable which means change elements. unordered collection elements that contains unique values enclosed within curly brackets. Syntax {1,2,4.5,'Python','Java'} print check type using- print(b) print(type(b)) different approaches converting string that will are- Using list() Using sorted() Using *set Using loop Using frozenset Using list() first method, will list() convert set. following program shows done- #declaring subjects={'C','C++','Java','Python','HTML'} #using list() res=list(subjects) print(res) Output: ['C','C++','Java','Python','HTML' Explanation: understand what have done above program- first thing that have done here declare that consists different subject names. After this, have used list() function which passed 'subjects'. executing program, desired output displayed. Using sorted() second approach sorted() function convert list. program below illustrates same- #defining function convert_set(set): return sorted(set) subjects={'C','C++','Java','Python','HTML'} set(subjects) print(convert_set(res)) Output: ['C','C++','Java','Python','HTML' Explanation: understand what have done above program- first thing that have done here created function that takes parameter returns expected output. After this, have declared variable type that consists different subject names. next step pass function 'convert_set'. executing program, desired output displayed. Using *set third method, will *set convert list Python. *set unpacks inside list. following program shows done- #defining function convert_set(set): return [*set, set({'C','C++','Java','Python','HTML'}) print(convert_set(res)) Explanation: understand what have done above program- first thing that have done here created function that takes parameter returns expected output. After this, have passed value that consists different subject names inside set(). next step pass function 'convert_set'. executing program, desired output displayed. Output ['C','C++','Java','Python','HTML' Using loop fourth method, will loop convert list Python. program below illustrates same- #using loop subjects set({'C','C++','Java','Python','HTML'}) subjects: res.append(i) Output: ['C','C++','Java','Python','HTML' understand what have done above program- first thing that have done here declare that consists different subject names. After this, have declared empty list res. have used loop here, that took each element from added list. executing program, desired output displayed. Using frozenset Finally, last method, will frozenset convert list Python. difference between frozenset that mutable whereas frozenset immutable. following program shows done- subjects frozenset({'C','C++','Java','Python','HTML'}) list(subjects) print(res) Output: ['C','C++','Java','Python','HTML' Explanation: understand what have done above program- first thing that have done here declare frozenset that consists different subject names. After this, have used list() which passed 'subjects'. executing program, desired output displayed. Conclusion this tutorial, came across different approaches converting list Python. Next TopicString Python prev next