next prev Selection Sort Python this tutorial, will implement selection sort algorithm Python. quite straightforward algorithm using less swapping. this algorithm, select smallest element from unsorted array each pass swap with beginning unsorted array. This process will continue until elements placed right place. simple in-place comparison sorting algorithm. Working Selection Sort following steps explain working Selection sort Python. Let's take unsorted array apply selection sort algorithm. [30, Step length array. length len(array) Step First, first element minimum element. Step compare minimum with second element. second element smaller than first, assign minimum. Again compare second element third third element smaller than second, assign minimum. This process goes until find last element. Step After each iteration, minimum element swapped front unsorted array. Step second third steps repeated until sorted array. Selection Sort Algorithm selection sort algorithm follows. Algorithm selection_sort(array) repeat length times first unsorted element minimum each unsorted elements element currentMinimum element minimum swap minimum with first unsorted position selection_sort Selection Sort Program using Python following code snippet shows selection sort algorithm implementation using Python. Code selection_sort(array): length len(array) range(length-1): minIndex range(i+1, length): array[j]<array[minIndex]: minIndex array[i], array[minIndex] array[minIndex], array[i] return array array [21,6,9,33,3] print("The sorted array selection_sort(array)) Output: sorted array 33] Explanation Let's understand above code First, define selection_sort() function that takes array argument. function, length array which used determine number passes made comparing values. that, loops outer inner loop. outer loop uses iterate through values list. This loop will iterate (length-1). first iteration will perform (5-1) times. each iteration, value variable assigned variable inner loop uses compare each value right-side element other value leftmost element. second loop starts iteration from i+1. will only pick value that unsorted. Find minimum element unsorted list update minIndex position. Place value beginning array. Once iteration completed, sorted array returned. last create unsorted array pass selection_sort() prints sorted array. Time Complexity Selection Sort Time complexity essential term much time algorithm take sort selection sort, there loops. outer loop runs times total number element). inner loop also executed times. compares rest value outer loop value. there times execution. Hence time complexity merge sort algorithm O(n2). time complexity categorized into three categories. Next TopicThe info() Function Python prev next