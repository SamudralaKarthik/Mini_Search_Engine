next prev Kadane's Algorithm Python following, will discuss Kadane's Algorithm property solving problems solve "Maximum Subarray Sum" problem. will understand concept Algorithm work Python code same along with example respective output. last, will discuss Algorithm's time complexity real-life application Kadane's Algorithm. Thus, let's begun. Understanding Kadane's Algorithm Kadane's Algorithm among popular approaches used solve problem with help dynamic programming. already know, maximum subarray problem considered among popular problems field dynamic programming. must thinking that problem appears simple, output problem will data elements array. However, this doesn't seem right. will also come across negative integers data elements array that decrease whole array. Thus, will take help Kadane's Algorithm solve this problem. Kadane's Algorithm used find continuous subarray One-Dimensional integer array, which largest possible. After understanding statement problem, primary approach everyone will applying brute-force approach solving problem. However, performing solution's time complexity will O(n^2) which impressive all. Hence, will Kadane's Algorithm solve problem traversing over entire array with help variables track maximum total. most significant aspect paying attention while utilizing this Algorithm condition using which will update both variables. Understanding Algorithm Maximum Subarray consider fundamental steps Algorithm Maximum Subarray shown below: Step have initialize max_till_now Step have initialize max_ending Step have repeat Step each data element array. Step have max_ending max_ending a[i] Step (max_ending then have max_ending Step (max_till_now max_ending) then have max_till_now max_ending Step have return max_till_now above steps Algorithm, have used max_ending look positive data elements array max_till_now find maximum data elements among positive segments. Thus, every time positive-sum during comparison with max_till_now, will able update with greater sum. Hence, whenever max_ending becomes negative, will zero, every iteration, will check condition where max_till_now less than max_ending order update max_till_now condition returns True. Understanding Kadane's Algorithm using Pictorial Representation consider following example integer array. Integer Array will initialize max_till_now max_ending will then max_till_now max_ending however, will max_till_now max_ending will then assign value max_till_now max_ending max_till_now max_ending respectively. will max_till_now max_ending will also max_till_now max_ending Hence, from above example, will find maximum subarray ranging from maximum will Understanding Kadane's Algorithm using Python Code consider following snippet code demonstrating working Kadane's Algorithm. Example: defining function find maximum subarray max_Subarray_Sum(my_array, array_size): assigning variables maxTillNow my_array[0] maxEnding using for-loop range(0, array_size): maxEnding maxEnding my_array[n] using if-elif-else statement maxEnding maxEnding elif (maxTillNow maxEnding): maxTillNow maxEnding return maxTillNow defining array my_array [-2, printing maximum subarray users print("Maximum Subarray Sum:", max_Subarray_Sum(my_array, len(my_array))) Output: Maximum Subarray Sum: Explanation: above snippet code, have defined function max_Subarray_Sum taking parameters my_array array_sum, respectively. have then assigned variable maxTillNow first index value array maxEnding zero. have then used for-loop iterate through whole array. have also used if-elif-else conditional statement return maxTillNow. last, have defined array print subarray users, which above example. Understanding Time Complexity time complexity Kadane's algorithm array consisting data element integer defined O(n) only loop executed across program. Similarly, auxiliary space complexity algorithm O(1). Understanding Applications There various applications Kadane's algorithm, them described below: Kadane's algorithm find maximum subarray provided array integers. utilized algorithm image processing. also utilized solve problems such "Station Travel Order" "Hostels Along Coast". also utilized Business Analysis. Conclusion end, conclude that solution does appear easy simple while solving problem statement finding maximum subarray sum. However, Kadane's algorithm simplified solving such problem achieved solution with least time complexity. This possible Kadane's algorithm utilizes technique collect information required reaching solution avoiding unwanted storage data. Hence, consider this algorithm simple example approach dynamic programming with lots practical applications real world. Next TopicLoggers Django prev next