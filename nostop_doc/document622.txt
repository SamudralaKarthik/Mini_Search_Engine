next prev Dispatch Decorators Python Decorators useful tool Python they used modify behavior function without permanently changing have explained decorators details decorator Python tutorial. this tutorial, will learn about dispatch decorators basic implementation. Before dive deep into this, let's have simple example decorators. Example defining decorator message_decorator(func): inner function access outer local 	def inner(): 		print("Hello, Message before Execution") Here calling actual function inside wrapper function. 		func() 		print("Hello, Message After Execution") 	return inner define function, called inside wrapper new_function(): 	print("We declare inside function !!") pass 'new_function()' inside decorator control behavior new_function message_decorator(new_function) calling function new_function() Output: Hello, Message Before Execution declare inside function!! Hello, Message After Execution above code example normal decorator Python. Nested Decorators some problems, these below. decorator becomes complicated understand numbers cases increased. have compromise with readability decorators complex implementation. have implement cases explicitly. precludes pluggable cases from external modules, also adds mental loads. cases difficult, whole thing rapidly becomes difficult reason about. Now, let's understand dispatch decorator different from dispatch decorator. Dispatch Decorators Dispatch decorators functions mechanism performing different things based signature, list types. used select between different implementation same abstract method based signature, integer, string, list data types. know that, Python dynamically typed, need specify that function only takes some precise types argument. Let's understand following example. Example from multipledispatch import dispatch @dispatch(int) func(x): 	return @dispatch(float) func(x): 	return @dispatch(str) func(x): return 'Hello' print(func(2)) print(func(2.0)) print(func('Andrew')) Output: Hello Andrew! Explanation above code, imported dispatch decorator from multipledispatch module. @dispatch(int) decorator specifies that dispatcher 'func' value allocates index namespace (dictionary). Here term comes Namespace, let's what namespace Namespace namespace dictionary that used dispatch decorator. dispatch decorator creates dispatch object along with dispatch function saves object key-value pair. dispatch decorator uses this dictionary function Dispatcher('func'). namespace used global namespace multipledispatch.core.global_namespace. also make namespace using dictionary. Let's understand following example. Example from multipledispatch import dispatch new_namespace @dispatch(int, namespace new_namespace) func(x): return @dispatch(float, namespace new_namespace) func(x): return Driver code print(func(2)) print(func(2.0)) print(new_namespace) Output: {'func': <dispatched func>} Note work with dispatch decorator, need install multiplesearch module using below command. install multipledispatch Single Dispatch Decorator single dispatch decorator transforms function into single-dispatch generic function. When this called, Identify type first argument. Check registry that type. Execute function registered type. typed wasn't registered, original function executed. Let's understand following example concept better way. Example from functools import singledispatch singledispatch dispatch_on_type(x): some default logic print("The default function implementation.") @dispatch_on_type.register(str) _(x): some stringy logic print(f"'{x}' string.") @dispatch_on_type.register(int) _(x): some integer logic print(f"{x} integer.") @dispatch_on_type.register(list) _(x): some list logic print(f"{x} list.") dispatch_on_type(set()) dispatch_on_type("Marry") dispatch_on_type(1337) dispatch_on_type([1,3,3,7]) Output: default implementation. 'STRING' string. 1337 integer. list. different from other decorators many things using single dispatcher function. Conclusion This tutorial covered important types decorator dispatch decorator. have discussed example different from regular decorators. used multipledispatch functools module. need install multipledispatch module using command. mentioned some basic examples dispatch however perform much complex tasks. Next TopicIntrospection Python prev next