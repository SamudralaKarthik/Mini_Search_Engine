next prev develop game Python Python most versatile language, makes presence almost every field including Web-development, Machine Learning, Artificial Intelligence, Application well Game Development. Python provides built-in library called pygame, which used develop game. Once understand basic concepts Python programming, pygame library make games with attractive graphics, suitable animation, sound. Pygame cross-platform library that used design video games. includes computer graphics sound libraries give standard game experience user. developed Pete Shinners replace PySDL. Prerequisites Pygame learn pygame, must have understanding Python programming language. Installing Pygame Open command-line terminal type following command install pygame. install pygame also install through IDE. further installation guide, visit complete pygame tutorial (https://www.javatpoint.com/pygame). Here will find essential pygame explanations. Simple Pygame Example Here following example creating simple pygame window. import pygame pygame.init() screen pygame.display.set_mode((400,500)) done False while done: event pygame.event.get(): event.type pygame.QUIT: done True pygame.display.flip() Output: graphics will draw pygame window. Let's understand basic syntax above program. import pygame module which allows work with function pygame. pygame.init() used initialize required modules pygame. pygame.display.set_mode((width, height)) used resized window size. will return surface object. surface object used perform graphical operations. pygame.event.get() makes event queue empty. call window messages will start pile and, game will become unresponsive opinion operating system. pygame.QUIT used dismiss event when click cross button corner window. pygame.display.flip() used reflect update game. make change then need call display.flip() function. draw shape pygame surface includes adding images, attractive font. Pygame provides many built-in functions draw geometrical shape screen. These shapes initial stage developing game. Let's understand following example shape drawing screen. Example import pygame from math import pygame.init() size variable using screen size size [400, 300] screen pygame.display.set_mode(size) pygame.display.set_caption("Example program draw geometry") done variable using flag done False clock pygame.time.Clock() while done: clock.tick() limits while loop times second. clock.tick(10) event pygame.event.get(): User something event.type pygame.QUIT: user clicked close symbol done True done variable that complete, exit this loop drawing code occurs after loop inside main while done==False loop. Clear default screen background white screen background screen.fill((0, Draw screen green line which pixels wide. pygame.draw.line(screen, 255, [50, 30], Draw screen green line which pixels wide. pygame.draw.lines(screen, False, [[0, 80], [50, 90], [200, 80], [220, 30]], Draw rectangle outline pygame.draw.rect(screen, [75, 20], Draw solid rectangle pygame.draw.rect(screen, [150, 20]) This draw ellipse outline, using rectangle outside boundaries pygame.draw.ellipse(screen, (255, [225, 20], This draw solid ellipse, using rectangle outside boundaries pygame.draw.ellipse(screen, (255, [300, 20]) Draw triangle using polygon function pygame.draw.polygon(screen, [[100, 100], 200], [200, 200]], This draw circle pygame.draw.circle(screen, 255), [60, 250], This draw pygame.draw.arc(screen, [210, 150, 125], This function must write after other drawing commands. pygame.display.flip() Quite execution when clicking close pygame.quit() Output: Explanation above example, have drawn different shapes such triangle, straight-line, rectangle, ellipse, circle, arc, filled circle, oval. have used pygame.draw function according shape with suitable arguments. Example Developing Snake Game Using Pygame Program Snake Tutorial Using Pygame import math import random import pygame import tkinter from tkinter import messagebox class cube(object): rows __init__(self, start, dirnx=1, dirny=0, color=(255, 0)): self.pos start self.dirnx self.dirny self.color color move(self, dirnx, dirny): self.dirnx dirnx self.dirny dirny self.pos (self.pos[0] self.dirnx, self.pos[1] self.dirny) draw(self, surface, eyes=False): self.w self.rows self.pos[0] self.pos[1] pygame.draw.rect(surface, self.color, eyes: centre radius circleMiddle centre radius, circleMiddle2 radius pygame.draw.circle(surface, circleMiddle, radius) pygame.draw.circle(surface, circleMiddle2, radius) This class defined snake design movement class snake(object): body turns __init__(self, color, pos): self.color color self.head cube(pos) self.body.append(self.head) self.dirnx self.dirny move(self): event pygame.event.get(): event.type pygame.QUIT: pygame.quit() keys pygame.key.get_pressed() will manage keys movement snake keys: keys[pygame.K_LEFT]: self.dirnx self.dirny self.turns[self.head.pos[:]] [self.dirnx, self.dirny] elif keys[pygame.K_RIGHT]: self.dirnx self.dirny self.turns[self.head.pos[:]] [self.dirnx, self.dirny] elif keys[pygame.K_UP]: self.dirnx self.dirny self.turns[self.head.pos[:]] [self.dirnx, self.dirny] elif keys[pygame.K_DOWN]: self.dirnx self.dirny self.turns[self.head.pos[:]] [self.dirnx, self.dirny] Snake when boundary wall enumerate(self.body): c.pos[:] self.turns: turn self.turns[p] c.move(turn[0], turn[1]) len(self.body) self.turns.pop(p) else: c.dirnx c.pos[0] c.pos (c.rows c.pos[1]) elif c.dirnx c.pos[0] c.rows c.pos c.pos[1]) elif c.dirny c.pos[1] c.rows c.pos (c.pos[0], elif c.dirny c.pos[1] c.pos (c.pos[0], c.rows else: c.move(c.dirnx, c.dirny) reset(self, pos): self.head cube(pos) self.body self.body.append(self.head) self.turns self.dirnx self.dirny will cube snake tail after every successful score addCube(self): tail self.body[-1] dx, tail.dirnx, tail.dirny self.body.append(cube((tail.pos[0] tail.pos[1]))) elif self.body.append(cube((tail.pos[0] tail.pos[1]))) elif self.body.append(cube((tail.pos[0], tail.pos[1] 1))) elif self.body.append(cube((tail.pos[0], tail.pos[1] 1))) self.body[-1].dirnx self.body[-1].dirny draw(self, surface): enumerate(self.body): c.draw(surface, True) else: c.draw(surface) drawGrid(w, rows, surface): sizeBtwn rows range(rows): sizeBtwn sizeBtwn draw grid line pygame.draw.line(surface, (255, 255, 255), w)) pygame.draw.line(surface, (255, 255, 255), This class define draw game surface redrawWindow(surface): global rows, width, snack This used grid surface surface.fill((0, s.draw(surface) snack.draw(surface) drawGrid(width, rows, surface) pygame.display.update() randomSnack(rows, item): positions item.body while True: random.randrange(rows) random.randrange(rows) len(list(filter(lambda z.pos positions))) continue else: break return Using Tkinter function display message message_box(subject, content): root tk.Tk() root.attributes("-topmost", True) root.withdraw() messagebox.showinfo(subject, content) try: root.destroy() except: pass main() function main(): global width, rows, snack width rows pygame.display.set_mode((width, width)) snake((255, (10, 10)) snack cube(randomSnack(rows, color=(0, 255, flag True clock pygame.time.Clock() while flag: pygame.time.delay(50) clock.tick(10) s.move() s.body[0].pos snack.pos: s.addCube() snack cube(randomSnack(rows, color=(0, 255, range(len(s.body)): s.body[x].pos list(map(lambda z.pos, s.body[x 1:])): print('Score: \n', len(s.body)) message_box('You Lost!\n', 'Play again...\n') s.reset((10, 10)) break redrawWindow(win) pass main() Output: snake touches itself then will terminate game display following message. play again clicking button. score Pycharm terminal have used Pycharm IDE; Python IDE). Copy above code paste into your have fun. understand concepts Pygame, visit full pygame tutorial. Next TopicHow install Tkinter Python prev next