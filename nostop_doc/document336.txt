next prev Amazing hacks Python this tutorial, will learn awesome Python language coding. will discuss some amazing hacks, making Python best among other languages. Hacks Python Following some amazingly cool hacks Python that make work easy users developers: List Comprehensions: best efficient technique getting writing pointless lines program. List comprehension consists following parts: Output expression Input sequence member input sequence represented variable optional predicate parts. Example: import functools FT First, filter numbers list_1 filter(lambda range(10, 30)) print ("List: list(list_1)) Then will filter square which divisible list_1 filter(lambda range(1, print ("ODD SQUARE WHICH DIVISIBLE list(list_1)) Here, will filter negative numbers list_1 filter((lambda range(-10, 10)) print ("Filter negative numbers: list(list_1)) Now, implement using max() function print ("Maximum Number List: print (FT.reduce(lambda T: (S T) else [14, 110, 105])) Output: List: [11, ODD SQUARE WHICH DIVISIBLE [25] Filter negative numbers: [-10, Maximum Number List: Printing List: Lists printed according requirements; they always printed unnecessary square brackets single quotes. Python, have solution printing lists efficiently using join method string. "join method" turn list into string classifying every item into string connecting them with string which join method used. Example: First declare list: ['LPG', 'WWF', 'XYZ', 'MPG'] Then, will print list: print ("The Simple List: ABC) HEre, will Print list using join method print ('The List using join method: .join(ABC)) directly apply Join Function List: print ('Directly applying join method: .join(ABC))) Output: Simple List: ['LPG', 'WWF', 'XYZ', 'MPG'] List using join method: LPG, WWF, XYZ, Directly applying join method: LPG, WWF, XYZ, Transpose Matrix: Python, user implement matrix nested list, which means list inside list. Every element list treated matrix. Example: [[5, 8]] print ("Matrix print (row) rez_1 [[M_1[K][L] range(len(M_1))] range(len(M_1[0]))] print ("\n") print ("Matrix rez_1: print (row) Output: Matrix Matrix artition List into Groups: users iter() function iterator over sequence. Example: First, will Declare list: LIST_1 ['E_1', 'E_2', 'E_3', 'E_4', 'E_5', 'E_6'] partition_1 list(zip (*[iter(LIST_1)] print ("List after partitioning into different groups elements: partition_1) Output: List after partitioning into different groups elements: [('E_1', 'E_2'), ('E_3', 'E_4'), ('E_5', 'E_6')] Explanation: above code, used "[iter(LIST_1)] which produced different groups containing elements 'LIST_1[]' list. That lists length will generated using elements from first list. Print more than Item List simultaneously Example: list_1 [11, list_2 [12, Here, will zip() function which will take equal length list then merge them together into pairs zip(list_1, list_2): print L) Output: Take String Input Convert into List: Example: Reading string from input format after splitting it's elements white-spaces print ("Input: formatted_list_1 list(map (int, input().split())) print ("Output Formatted list: formatted_list_1) Output: Input: Output Formatted list: [10, Convert List Lists into Single List: Example: importing itertools import itertools Declaring list geek LIST_1 [[1, chain.from_iterable() function will return elements nested list iterate from first list iterable till last list list_2 list(IT.chain.from_iterable(LIST_1)) print ("Iterated list 'LIST_1': list_2) Output: Iterated list 'LIST_1': Print Repeated Characters: Suppose task print patterns like "122333444455555666666". easily print this pattern Python without using loop. Example: print ("1" Output: 122333444455555666666 Conclusion this tutorial, have discussed different amazing cool hacks Python, which makes easy work with developers well beginners. Next TopicAverage list Python prev next