next prev Python Literals Python Literals defined data that given variable constant. Python supports following literals: String literals: String literals formed enclosing text quotes. both single well double quotes create string. Example: "Aman" '12345' Types Strings: There types Strings supported Python: Single-line String- Strings that terminated within single-line known Single line Strings. Example: text1='hello' Multi-line String piece text that written multiple lines known multiple lines string. There ways create multiline strings: Adding black slash each line. Example: text1='hello\ user' print(text1) 'hellouser' Using triple quotation marks:- Example: str2='''welcome SSSIT''' print str2 Output: welcome SSSIT II. Numeric literals: Numeric Literals immutable. Numeric literals belong following four different numerical types. Int(signed integers)Long(long integers)float(floating point)Complex(complex) Numbers( both positive negative) with fractional part.eg: 100Integers unlimited size followed lowercase uppercase 87032845LReal numbers with both integer fractional part -26.2In form a+bj where forms real part forms imaginary part complex number. 3.14j Example Numeric Literals 0b10100 #Binary Literals #Decimal Literal 0o215 #Octal Literal 0x12d #Hexadecimal Literal #Float Literal float_1 100.5 float_2 1.5e2 #Complex Literal 5+3.14j print(x, print(float_1, float_2) print(a, a.imag, a.real) Output: 141 100.5 150.0 (5+3.14j) 3.14 III. Boolean literals: Boolean literal have values: True False. Example Boolean Literals True) False) True) True False print("x is", print("y is", print("z is", print("a:", print("b:", Output: True False False Special literals. Python contains special literal i.e., None. None used specify that field that created. also used lists Python. Example Special Literals val1=10 val2=None print(val1) print(val2) Output: None V. Literal Collections. Python provides four types literal collection such List literals, Tuple literals, Dict literals, literals. List: List contains items different data types. Lists mutable i.e., modifiable. values stored List separated comma(,) enclosed within square brackets([]). store different types data List. Example List literals list=['John',678,20.4,'Peter'] list1=[456,'Andrew'] print(list) print(list list1) Output: ['John', 678, 20.4, 'Peter'] ['John', 678, 20.4, 'Peter', 456, 'Andrew'] Dictionary: Python dictionary stores data key-value pair. enclosed curly-braces each pair separated commas(,). Example dict {'name': 'Pater', 'Age':18,'Roll_nu':101} print(dict) Output: {'name': 'Pater', 'Age': 'Roll_nu': 101} Tuple: Python tuple collection different data-type. immutable which means cannot modified after creation. enclosed parentheses each element separated comma(,). Example (10,20,"Dev",[2,3,4]) print(tup) Output: (10, 'Dev', Set: Python collection unordered dataset. enclosed each element separated comma(,). Example: Literals {'apple','grapes','guava','papaya'} print(set) Output: {'guava', 'apple', 'papaya', 'grapes'} Next TopicPython Operators prev next