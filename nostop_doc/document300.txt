next prev agg() function Python Because fantastic ecosystem data-centric Python packages, Python considered great programming languages doing data analysis. Panda such packages that provided Python, makes very easy import analyze data. this tutorial, going discuss agg() function given panda series, will with series data given Introduction: Pandas agg() function agg() function Pandas pass single function list functions that applied given data series sometimes even separately each element data series. case where pass list functions inside agg() function, multiple results will returned Syntax this section, going look syntax parameters that have inside agg() method return type function. seriesGiven.agg(function_name, axis seriesGiven data series given program. Parameters: have provide following parameters inside agg() method. Function_name: have provide function, list functions, string that contains name functions called data series parameter inside agg() method. axis: Axis works like defining index rows data series. either give axis equals provide 'index' performing row-wise operation data series. Also, give either 'column' axis parameter perform column-wise operation data series. Return type return type agg() method fixed, always depends upon return type function that have passed parameter inside agg() method. Working with agg() function Till now, have learned about introduction syntax using agg() function provided Pandas. learn about understand working agg() method, will this function below examples. Passing single function inside agg() method this example, will create random array numpy module, then will make data series using Pandas function. After that, will agg() function pass lambda function, argument inside thus will each value given series. applying function series, return type through agg() function also series. Now, let's understand this implementation through following example. Example Look following Python program: Importing panda module import pandas Importing numpy module program import numpy Creating random array elements with numpy random randomArray nmp.random.randn(20) Creating series from array random elements dataSeries pnd.Series(randomArray) Calling agg() method data series resultSeries dataSeries.agg(lambda Lambda function argument Displaying before after operation results print('Data series elements before operation: \n', dataSeries, '\n\n Data series elements after operation: \n', resultSeries) Output: Data series elements before operation: -0.510111 -0.732670 -0.451550 -0.435085 0.082848 -1.051242 0.203565 -1.014079 -0.232350 -0.325640 0.528320 -1.472293 -0.639487 -2.490666 -0.242837 0.854955 1.076247 1.491347 -1.767788 -0.205003 dtype: float64 Data series elements after operation: 2.489889 2.267330 2.548450 2.564915 3.082848 1.948758 3.203565 1.985921 2.767650 2.674360 3.528320 1.527707 2.360513 0.509334 2.757163 3.854955 4.076247 4.491347 1.232212 2.794997 dtype: float64 Explanation: First, have imported pandas numpy modules inside program functions. Then, have created array elements that have randomly generated using randn() function numpy module. After that, made array into series form using series() function panda module. Then, have used agg() function series passed lambda function argument have passed argument agg() method each value series. last, printed data series output (both before operation performed after operation performed it). output, added each value series after have performed operation Passing list functions inside agg() method: this example, after creating data series, will pass list functions arguments inside agg() function instead passing single function parameter When pass list Python's default functions arguments agg() method, multiple results returned into multiple variables. Let's understand implementation this method through following example. Example Look following Python program: Importing panda module import pandas Importing numpy module program import numpy Creating random array elements with numpy random randomArray nmp.random.randn(20) Creating series from array random elements dataSeries pnd.Series(randomArray) Creating list having function names functionList [min, max, sorted] Calling agg() method with list functions seriesResult1, seriesResult2, seriesResult3 dataSeries.agg(functionList) Displaying elements data series print('Data Series before operation: \n', dataSeries) print('\nMinimum value data series {}\n\nMaximum value data series {},\ \n\nSorted data series after operation:\n{}'.format(seriesResult1, seriesResult2, seriesResult3)) Output: Data Series before operation: 1.324659 -1.632943 -0.451046 -0.119475 -1.476469 1.550481 -0.345283 -0.391220 1.183295 0.945834 0.426908 -1.373141 -1.360714 1.029160 -0.305868 0.520776 0.519891 0.581810 -0.200537 2.175055 dtype: float64 Minimum value data series -1.6329428122607905 Maximum value data series 2.175055294872539, Sorted data series after operation: [-1.6329428122607905, -1.476468968840359, -1.3731412602339488, -1.3607141137838996, -0.45104603430414114, -0.3912204479169106, -0.34528253055365704, -0.3058683242351637, -0.20053665016862435, -0.1194753076622943, 0.4269084920204909, 0.519891496565306, 0.5207757216248261, 0.5818098237803292, 0.9458337130436504, 1.02915996695176, 1.1832945335240084, 1.324659481096391, 1.5504805147479754, 2.175055294872539] Explanation: After creating data series previous example, have created list where have multiple functions' names this example, instead giving single function argument, have passed multiple default functions inside agg() function. After passing these functions arguments, have printed data series before operation after operation output. look output, that multiple results have been returned agg() function. This because have passed multiple functions parameters inside max(), min() sorted() have been returned into different variables i.e., seriesResult1, seriesResult2 seriesResult3 respectively. Next TopicAmicable Numbers Python prev next