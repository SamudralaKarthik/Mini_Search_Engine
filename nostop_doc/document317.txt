next prev Different Methods Array Rotation Python this tutorial, will learn rotate array using Python program. will write function rotation (arry[], which will used rotating arry[] size elements. will following array after rotating array elements: Methods Array Rotation: this session, will discuss different methods users rotation array according their requirements. Method using temp array this method, will following approach: Input arry[] 15], Step will store elements temp array Temp[] Step will shift rest arry[] arry[] Step will store elements arry[] Example: rotate_array1(arry, temp_1 while (J temp_1.append(arry[J]) while (E arry[J] arry[E] arry[:] arry[: J] temp_1 return arry Driver function test above function arry print ("Array after Rotation elements print (rotate_array1(arry, len(arry), Output: Array after Rotation elements above method: Time Complexity: O(K) size array] Auxiliary Space: O(E) [E number elements rotated] Method rotation elements this method, will following approach: rotate_array1(arry[], will "for" condition that equal less than then rotate_array1 function will rotate elements have store arry[0] rotating elements temporary variable, "temp_1". Then will more arry[1] arry[0], arry[2] arry[1] last, will have temp_1 arry[n-1]. Example: rotate_array1(arry, range(E): rotate_by_one(arry, #Now, will define function rotate arry[] size rotate_by_one(arry, temp_1 arry[0] range(K arry[J] arry[J arry[K temp_1 Then, will define utility function printing array print_array(arry, size_1): range(size_1): print ("%d" arry[J], last, will write driver program testing above functions arry rotate_array1(arry, print ("The array after rotation: print_array(arry, Output: array after rotation: above method: Time Complexity: size array] 						[E number elements rotated] Auxiliary Space: O(1) Method using Juggling Algorithm this method, will dividing array into different sets instead moving elements one. When number sets equal greatest common divider "E", code will mode elements into sets. greatest common divider equal then elements will move into only. Here, will start with temp_1 arry[0], will keep moving arry[J E] arry[J], last, will store temp_1 right place. Let's example which, Greatest Common Divider (G_C_D) arry[] [11, Steps first, elements will moved into first shown following diagram: After completion this set, arry[] will equal [15, Then second set: arry will [15, third set: arry will [15, Finally, fourth set: arry will [15, Example: rotate_array1(arry, range(G_C_D(E, K)): now, will move J-th values blocks temp_1 arry[J] while break arry[S] arry[F] arry[S] temp_1 Then, will define utility function printing array print_array(arry, size_1): range(size_1): print ("%d" arry[J], #Here, will define Function getting G_C_D Sets G_C_D(X, return X; else: return G_C_D(Y, Driver program test above functions arry [11, rotate_array1(arry, print ("The array after rotation: print_array(arry, Output: array after rotation: [15, above method: Time Complexity: size array] Auxiliary Space: O(1) Method using List Slicing this method, will list slicing rotating elements array. Example: rotate_List1(arry, arry[:] arry[E:K] arry[0:E] return arry will write driver program testing above functions arry [11, print ("The List arry) print ("The rotated list print (rotate_List1(arry, len(arry))) Output: List [11, rotated list [15, want rotate array more than length, method. Suppose array that want rotate size greater than "K". this case, have calculate (E%K) then rotate output after calculation. Conclusion this article, have discussed different methods rotating given array using Python. Next TopicWhat Operator Overloading Python prev next