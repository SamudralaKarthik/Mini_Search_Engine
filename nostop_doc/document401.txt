next prev Python MayaVi Module have heard about Graphical User Interface, known GUI, must have seen impact changing interface many applications. Basically, Graphical User Interface type User Interface applications software which, instead text-based user interfaces typed command labels, allow users interact with computers, smartphones, PCs, etc., through audio indicators graphical icons such notations, etc. displays objects data such manner that information trying display conveyed very easily through interactive User Interface provided. Whenever user interacts with applications, object displayed electronic devices changes color, text, sometimes shape too. Thus, makes user's interaction with electronic devices applications become more interactive interesting users. important become today's world, find almost every application daily lives. Therefore, becomes even more important that should have idea build work with Most programming languages provide option create interactive GUIs with help their in-built libraries extensions connected with them. Python most popular choices among these programming languages creating because provides with multiple libraries through which easily create GUI. Python, have many in-built modules some installable modules that create interactive using functions these modules program. such Python module MayaVi module about which going learn this tutorial. will learn about MayaVi tutorial, install features, many more about this tutorial. MayaVi Module Python MayaVi Python module used visualize scientific data, uses visualize data. Other than this, MayaVi module also provides options develop with help Tkinter library. MayaVi module, which currently free distributed under license, developed Prabhu Ramchandran, pronounced single name, "Ma-ya-vee," which stands "magical" English. MayaVi cross-platform Python module (runs almost every platform like UNIX, Windows, X), runs almost every platform operating system where both Python available. latest version MayaVi module, MayaVi2, very much different from original because latest version component Enthought suite, which suite scientific Python programs. other reason that makes latest version MayaVi module from original version that provides reusable component plotting through Python programs does just focus interactive program (the feature which lacking previous version). Although latest version MayaVi module slightly different interface than previous version, many features, which were missing previous version. MayaVi Module Python: Vision MayaVi module, when developed, developed with vision provide interactive visualization scientific other data, this wasn't only purpose developing MayaVi module. There were some other visions behind development MayaVi module, going look these visions which were behind development MayaVi module this section. Following vision building Python MayaVi module: Need reusable tool that embed applications multiple plotting data MayaVi also seeks provide interactive easy visualization scientific other data, multiple applications Harnessing power library Without forced learn about MayaVi also developed provide rich User Interface (mostly focused GUI) with dialogs interact with objects data through visualization them MayaVi combined with envisaged application-building framework that assemble access domain-specific tools single place Other than this, need clean simple scripting interface Python that includes object-oriented programming, a-la mlab, one-liners interfaces lead development MayaVi module These major reasons, vision behind development MayaVi module. MayaVi Module Python: General Characteristics Features have seen introduction part MayaVi module, this module provides with multiple functions visualize scientific data very easily. this only characteristic MayaVi module, which makes stand scientific data visualization modules. also some other characteristics that make this module very popular short time, will discuss these characteristics features this module this section. Following general characteristics highlighted features MayaVi module: MayaVi module very convenient option scientific plotting data visualization through mlab (also available through MayaVi extension) MayaVi module very helpful reading several file formats such PLOT3D, (XML Legacy), many more MayaVi module cross-platform Python module, easily these modules multiple Operating Systems (OS) Scriptability mayavi module very easy using Python MayaVi module save rendered visualization data multiple image formats user convenience script Mayavi module from Python interpreter import Python module program provides works pipeline browser with which objects that present pipeline browsed edited Extendibility MayaVi module very simple easy, which means extend MayaVi module through various custom sources, file formats, data filters, modules With Mayavi module, visualization tensor 3-D), vector, scalar data possible very easy With Mayavi module, import simple studio VRML scenes These some general characteristics highlighted features MayaVi module, when through this list, will find this MayaVi module became popular short time. Other than listed features above, MayaVi module also Visualization engine application data with latest release Mayavi2. MayaVi Module Python: Functions MayaVi library used perform multiple functions such visualization scientific data, developing Graphical User Interface, developing figures, etc., importing this module Python program. perform these functions with help MayaVi module using Mayavi some other modules together program, this tutorial, will only learn about building Graphical User Interface using MayaVi module. will MayaVi module with some other modules (which will discuss later) build through Python program. MayaVi Module Python: Installation MayaVi in-built module Python that comes pre-installed with Python extension, therefore, have install this module system want import this module Python program. Installation MayaVi module very simple, done through multiple methods, which include through conda method, through Jupyter notebook method, through method, many more. this tutorial, will only installer method perform installation MayaVi module install this module using following command terminal shell: install mayavi have open command prompt terminal system write command given above after writing command, press enter start installation process MayaVi module. When press enter key, installation process MayaVi module will start, will take while install MayaVi module system successfully. Because Mayavi module comes with multiple extensions library functions, which will downloaded installed with system, will also build wheel see, MayaVi module successfully installed system, start working with this module importing into Python program. Note: have build with MayaVi module this tutorial, will also need NumPy SciPy modules perform this implementation. should make sure that both SciPy NumPy modules already installed system before moving further with implementation part MayaVi module. SciPy NumPy modules present system, following installer command command prompt terminal install them system: installation SciPy Module: install scipy This module already present system, that's shown here that requirements already fulfilled, this module present system, this command will install (ii) installation NumPy Module: install numpy This module already present system, that's shown here that requirements already fulfilled. have installed required modules implementation part MayaVi module, therefore, move ahead with implementation part MayaVi Module Python: Implementation implementation section, will only MayaVi module implement building function, will build spherical harmonic function visualization through will MayaVi module example program understand visualization spherical harmonic function plotting Graphical User Interface output. will also SciPy NumPy modules performing scientific calculations using trigonometric functions program. look following example program implementation MayaVi module with NumPy SciPy modules. Example: Look following Python program with visualization spherical hormonic function: Import multiple functions from numpy from numpy import linspace, meshgrid, array, sin, cos, Import sph_harm from scipy from scipy.special import sph_harm Import mlab from MayaVi from mayavi import mlab Defining angles from values oneDTheta linspace(0, 91) oneDPhi linspace(0, 2*pi, 181) Defining angles from angle values twoDTheta, twoDPhi meshgrid(oneDTheta, oneDPhi) Using trigonometry values spheres with angles xyzTwoD array([sin(twoDTheta) sin(twoDPhi), sin(twoDTheta) cos(twoDPhi), cos(twoDTheta)]) Defining length measurement variable values length measurement Using sph_harm() function with multiple variables yVarLM sh(measurement, length, twoDPhi, twoDTheta) Defining radius spherical structure radius abs(yVarLM.real) xyzTwoD Size figure ml.figure(size=(700, 830)) Radius figure with colour ml.mesh(radius[0], radius[1], radius[2], scalars yVarLM.real, colormap "cool") Dimensions figure ml.view(azimuth elevation distance 2.4, roll -50) Saving figure image ml.savefig("Y_%i_%i.jpg" (length, measurement)) Showing figure output ml.show() Output: see, Visualization spherical harmonics plotted output with specified dimensions, values, features. Explanation: have first imported scipy, numpy, mayavi modules program. First, have imported linspace, meshgrid, array, sin, cos, function from numpy module, then imported sph_harm function from scipy module, last, imported mlab from mayavi module visualization spherical harmonic motion. After that, defined angles using linspace() function OneDTheta OneDPhi variables. After that, defined angles using OneDTheta OneDPhi angle meshgrid() function initialized TwoDTheta TwoDPhi variables. After that, defined array, inside array, used identities with angles defined earlier. Next, defined length measurement variable with integer value, then used angles, length, measurement value inside sph_harm() function. After that, have initialized radius variable define sphere's radius using abs() function. Next, used figure() function define dimension figure, after that, used mesh() function specify radius colors figure plotted output. Then, used view() function visualization spherical harmonics savefig() save figure specified format. Lastly, used show() function show visualization output. Next TopicPython os.listdir() method prev next