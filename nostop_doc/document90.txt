next prev append element list Python provides built-in methods append elements list. also append list into another list. These methods given below. append(elmt) appends value list. insert(index, elmt) inserts value specified index position. extends(iterable) extends list adding iterable object. Let's understand these methods following example. append(elmt) This function used element list. example given below. Example names ["Joseph", "Peter", "Cook", "Tim"] print('Current names List is:', names) new_name input("Please enter name:\n") names.append(new_name) Using append() function print('Updated name List is:', names) Output: Current names List ['Joseph', 'Peter', 'Cook', 'Tim'] Please enter name: Devansh Updated name List ['Joseph', 'Peter', 'Cook', 'Tim', 'Devansh'] insert(index, elmt) insert() function adds elements given index position. beneficial when want insert element specific position. example given below. Example list1 [10, print('Current Numbers List: list1) list1.insert(3, 77) print("The list ",list1) int(input("enter number list:\n")) index int(input('enter index number:\n')) list1.insert(index, print('Updated Numbers List:', list1) Output: Current Numbers List: [10, list [10, enter number list: enter index number: Updated Numbers List: [10, extend(iterable) extends() function used iterable elements list. accepts iterable object argument. Below example adding iterable element. Example list1 [10,20,30] list1.extend(["52.10", "43.12" extending list elements print(list1) list1.extend((40, 30)) extending tuple elements print(list1) list1.extend("Apple") extending string elements print(list1) Output: [10, '52.10', '43.12'] [10, '52.10', '43.12', [10, '52.10', '43.12', 'A', 'p', 'p', 'l', 'e'] Next TopicHow compare lists Python prev next