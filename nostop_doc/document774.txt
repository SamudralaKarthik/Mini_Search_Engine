next prev Create First Application using PyQt5 Python majority personal computers today have graphic user interface, GUI. offers users with range computer skill levels straightforward experience. point-and-click interface, apps require more resources, they typically more user-friendly. toolkits creating cross-platform apps Python PyQt. already have solid command this language, strong simple learn. will learn fundamentals creating using PyQt this article. demands that have basic understanding both object-oriented programming Python. Instead going through basic Python ideas, PyQt will major topic discussion. Describing PyQt cross-platform application development framework Python connector called PyQt. advantage utilising PyQt that create apps with simple potent language like Python. makes API's features available. organisation responsible creation upkeep PyQt called Riverbank Computing. PyQt6 most recent stable release. According release history, PyQt major version's release cycle consistent with Qt's. PyQt codebase compiled Python code core complicated system. contrast other Python libraries, therefore difficult procedure build install from source. Creating virtual environment python3 venv Activating virtual environment source env/bin/activate Installing PyQt5 install PyQt5 even take help documentation individual PyQt version which wish thorough installation instructions. Both commercial versions come with installation instructions. Charecteristics PyQT following crucial aspects PyQt Graphic User Interface (GUI) Databases Website toolkits processing Networking Both complex user interfaces independent apps made using these characteristics combination. What event loop There fundamental ideas about applications structured universe that need introduced before window appears screen. safely move following section already comfortable with event loops. QApplication class serves foundation applications. only QApplication object required every application work. This object houses your application's event loop, central loop that controls user interaction with GUI. Each time user interacts with your application-by pressing key, clicking mouse, moving mouse-an event generated added event queue. Each time event loop iterates, queue examined there waiting events. discovered, event sent along with control appropriate event handler. After handling event, event handler returns control event loop wait further events. application, there only active event loop. What QMainWindow learned last section, every widget window. instance, QPushButton used place QWidget, will receive window with single pushbutton. result, main window enhanced. Sizes window widgets Right now, easily resize window grabbing corner with your mouse dragging desired size. Although it's good idea allow users resize your apps, there occasions when wish impose limits minimum maximum sizes lock window specific size. QSize object used define sizes. width height parameters this accepted that order. Making simple using PyQt Let's create simple "basic" feel PyQt. Also, this will further helpful getting know this process from starting level. Before continue, important note that PyQt utilises camelCase names methods properties. maintain consistency throughout this essay, camelCase will used place Python's suggested naming convention variables functions. We'll purposefully keep things basic straightforward time being. I'll assume you've already generated app.py file your project directory. proceed with instructions below, lines code from each step your app.py file. Step Import necessary classes There several built-in modules included with PyQt. when creating GUI, QtWidgets module will most frequently. utilise classes build your GUI. will just utilise QApplication QWidgets classes because develop most fundamental "python" GUI. Begin importing them follows from PyQt.QtWidgets import QApplication QWidgets additional classes want utilise your application imported similar manner. Step Start programme establishing QApplication instance, must initialise app. charge controlling application's primary settings control scheme. result, must create instance this class before making other user interface-related objects. QApplication([]) want accept arguments from command line, supply sys.argv place empty array that supplied QApplication code above. giving sys.argv argument, make sure import sys. Step Create primary window main window widget without parent, often known top-level window. There must primary window every GUI. Right now, we'll construct QWidget instance default window follows base QWidget() base.setGeometry(0, 250, 300) base.setWindowTitle('python') There several more Qwidget methods might call after making instance have used setWindowTitle setGeometry methods create straightforward GUI. GUI's size placement screen controlled setGeometry method. SetGeometry function signature width, height). width height parameters used establish window's width height, respectively, while first arguments define window's positions screen. setWindowTitle method does exactly what name implies-it sets application's title. title supplied string parameter. don't title manually, window won't have one. Step Display primary window default, window established preceding step hidden. using show approach, need demonstrate base.show() Step Start event loop event loop must then started launching programme help exec method. app.exec() event loop also started using app.exec_() alternative. Complete Code Your app.py file should include following code have completed five aforementioned steps from PyQt5.QtWidgets import QWidget, QApplication QApplication([]) base QWidget() base.setGeometry(0, 250, 300) base.setWindowTitle('python') base.show() app.exec() must command python3 app.py app.py, just would other Python script. should able view presented window. window's appearance greatly influenced your system. Output: output code mentioned above create application using PyQt5 given below form screenshot. Conclusion this article covered what PyQt5 Python useful learned create simple using PyQt5. also know about various general methods like setGeometry method size window setWindowTitle method window's title. also discussed QApplication class, QMainWindow class event loop window this part. techniques offers widgets windows interact with another with your code will help make your application more attractive reactive. Next TopicSimple calculator using PyQt5 Python prev next