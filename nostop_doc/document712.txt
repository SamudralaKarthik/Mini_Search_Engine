next prev Colour game using Tkinter Python creating GUIs, Python provides variety choices (Graphical User Interface). Tkinter most widely used techniques. toolkit's standard Python interface, which comes preinstalled with Python. quickest most straightforward method developing apps using Python with Tkinter. It's simple build with Tkinter. We'll make Tkinter module this. Widgets like Label,Frame, Entry, Canvas, Text, Button, Checkbutton, Scale, Radiobutton, Scrollbar, Listbox, Spinbox LabelFrame, OptionMenu, PanedWindow shown, positioned, controlled using Tkinter's classes. complete (Graphical User Interface) system found this Colour Game made using Tkinter Python. player this Colour Game must enter colour word that appears screen order gain point. entire duration this game seconds. colours utilised this game Blue, Red, Yellow, Green, Black, Pink, Yellow, Pink, white, Orange, Brown. Colour names will appear interface variety shades. player must choose colour enter right colour's name game. This system quite helpful, project's idea logic easy understand. Colour Game Finding colours that computer randomly selected colour game. game colours which play Python where have guess colour random phrase. this instance, must type word colour, word text. user won't have trouble operating this system because simple design. Before continuing, must colour that appears screen words. user sees word, guesses colour that displayed screen, types right colour into entry box, receives credit accurate guess. They receive point each accurate guess, these points added displayed screen. Before time runs out, user play this game. time runs out, user anything entry box, won't accepted. Walking through code first imported modules produce arbitrary widgets colours. Importing modules into code import tkinter import random Next, list clrs that we've developed will entered into input field. List various clrs input clrs ['Blue', 'Pink', 'Orange', 'Green', 'Yellow', 'Black', 'Purple', 'Brown', 'White'] scrn then remaining time seconds. Initialising scrn scrn Initially time left will time_left Next, cntdwn() function will begin nxtClr() function will also called remaining time equals seconds. Currently, utilising startGame() function. This function will begin game strtGame(event): time_left aforemnetioned statement satisfied, will begin cntdwn cntdwn() Here, will call method choose next colour nxtClr() Following this, create nxtClr() with text using nxtClr() method. This function lowercases supplied text before checking whether colour matches. And, scrn will colour name matches text's colour; otherwise, won't. This method will choose next color nxtClr(): global scrn global time_left If-statement time_left aforementioned statement satisfied, will make text entry activated i.focus_set() input name text matching, i.get().lower() clrs[1].lower(): will increase scrn scrn input cleared using delete() function, list colours shuffled using shuffle() function. Using, delete method, will deleting text i.delete(0, tkinter.END) random generates random colour using shuffle method random.shuffle(clrs) Here, will change text colour random colour value label.config(fg str(clrs[1]), text str(clrs[0])) Here, will update scrn scrnLabel.config(text "Scrn str(scrn)) after function used cntdwn function cntdwn() function once second, subtracting from remaining time. This cntdwn method cntdwn(): global time_left time_left aforementioned statement satisfied, will decrement time left time_left Here, will update time left label time_lbl.config(text "Remaining time str(time_left)) after method calls function once after given time time_lbl.after(1000, cntdwn) Finally, designing GUI, where specify geometry, scrn label, time lbl, instruction, input along with title colour text fonts. geometry() function, don't leave blank space between height width. Only lowercase lettering when writing module names. lastly, will call mainloop() method execute program start GUI. creating window root tkinter.Tk() setting title root.title("COLOR GAME") setting size root.geometry("900x600") adding instruction label instruction tkinter.Label(root, text Type colour words, word text! \n", font ('TimesNewRoman', 20)) instruction.pack() scrnLabel tkinter.Label(root, text "Press Enter Play \n", font ('TimesNewRoman', 20)) scrnLabel.pack() time left label time_lbl tkinter.Label(root, text "Remaining time: str(time_left), font ('TimesNewRoman', 20)) time_lbl.pack() text font size specifications label tkinter.Label(root, font ('TimesNewRoman', 80)) label.pack() Input text tkinter.Entry(root) execute 'strtGame' method when Enter will pressed root.bind('<Return>', strtGame) i.pack() Setting focus input i.focus_set() starting root.mainloop() Complete code Importing modules into code import tkinter import random List various clrs input clrs ['Blue', 'Pink', 'Orange', 'Green', 'Yellow', 'Black', 'Purple', 'Brown', 'White'] Initialising scrn scrn Initially time left will time_left This function will begin game strtGame(event): time_left aforementioned statement satisfied, will begin cntdwn cntdwn() Here, will call method choose next colour nxtClr() This method will choose next color nxtClr(): global scrn global time_left If-statement time_left aforementioned statement satisfied, will make text entry activated i.focus_set() input name text matching, i.get().lower() clrs[1].lower(): will increase scrn scrn Using, delete method, will deleting text i.delete(0, tkinter.END) random generates random colour using shuffle method random.shuffle(clrs) Here, will change text colour random colour value label.config(fg str(clrs[1]), text str(clrs[0])) Here, will update scrn scrnLabel.config(text "Scrn str(scrn)) This cntdwn method cntdwn(): global time_left time_left aforementioned statement satisfied, will decrement time left time_left Here, will update time left label time_lbl.config(text "Remaining time str(time_left)) after method calls function once after given time time_lbl.after(1000, cntdwn) creating window root tkinter.Tk() setting title root.title("COLOR GAME") setting size root.geometry("900x600") adding instruction label instruction tkinter.Label(root, text Type colour words, word text! \n", font ('TimesNewRoman', 20)) instruction.pack() scrnLabel tkinter.Label(root, text "Press Enter Play \n", font ('TimesNewRoman', 20)) scrnLabel.pack() time left label time_lbl tkinter.Label(root, text "Remaining time: str(time_left), font ('TimesNewRoman', 20)) time_lbl.pack() text font size specifications label tkinter.Label(root, font ('TimesNewRoman', 80)) label.pack() Input text tkinter.Entry(root) execute 'strtGame' method when Enter will pressed root.bind('<Return>', strtGame) i.pack() Setting focus input i.focus_set() starting root.mainloop() Output output Python Tkinter module used create colour game's will resemble screenshot shown below. Time limited, respond quickly! Next TopicSimple FLAMES game using Tkinter Python prev next