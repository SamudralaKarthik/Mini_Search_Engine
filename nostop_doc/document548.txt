next prev Webbrowser module Python following tutorial, will learn about webbrowser module Python programming language with some examples. let's started. Understanding Python webbrowser module webbrowser module convenient browser controller Python programming language. This module offers high-level interface that enables showing documents based web. Under most circumstances, call open() function from webbrowser module perform right thing. Under Unix operating system, graphical browsers preferred under X11; however, text-mode browsers will utilized graphical browsers unavailable display unavailable. text-mode browsers utilized, calling process will block until user exits browser. environment variable BROWSER exists, interpreted os.pathsep separated list browsers ahead platform defaults. When value list part consists string then interpreted literal browser command line utilized with parameter substituted %s; part does consist interpreted name browser launch. non-Unix platforms, when remote browser available Unix, controlling process will wait user finish with browser; however, allows remote browser maintain Windows display. remote browsers unavailable Unix, controlling process will launch browser wait. Working with webbrowser module webbrowser module Command-Line Interface (CLI) tool. This module accepts parameter. accepts following optional parameters: -n: This parameter allows open browser window, possible. -t: This parameter allows open browser page ("tab"). options are, naturally, mutually exclusive. syntax same shown below: Syntax: python webbrowser <parameter> "<URL>" consider following example demonstrating usage webbrowser module tool. Example python webbrowser "https://www.javatpoint.com/python-pympler-library" Output: Explanation: above syntax been scripted terminal command-line shell. This syntax starts with python followed module name, i.e., webbrowser specifying parameter website. Note: webbrowser module part Python standard library. Thus, there requirement install separate package utilize also utilize webbrowser module launch browser platform-independent way. consider following examples demonstrating same: Example importing webbrowser module import webbrowser opening using open() method webbrowser.open("https://www.javatpoint.com/traffic-flow-simulation-in-python") Output: Explanation: above snippet code, have imported webbrowser module. have then used open() method webbrowser module. open() method used open requested page with help default browser. have more control over page gets opened, following functions given below code: Example Open page browser window importing webbrowser module import webbrowser opening browser window using open_new() method webbrowser.open_new("https://www.javatpoint.com/pyqt-library-in-python") Output: Explanation: above snippet code, have imported required module. have then used open_new() method open requested browser window. Example Open page browser importing webbrowser module import webbrowser opening browser using open_new_tab() method webbrowser.open_new_tab("https://www.javatpoint.com/pyqt-library-in-python") Output: Explanation: above snippet code, have imported required module used open_new_tab() method open page browser tab. open page specific browser, webbrowser.get() function specify particular browser. Example importing webbrowser module import webbrowser opening different browser chromePath "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe" webbrowser.register('chrome', None, webbrowser.BackgroundBrowser(chromePath)) webbrowser.get('chrome') web.open("https://www.javatpoint.com/snmp-module-in-python") web.open_new_tab("https://www.javatpoint.com/speech-recognition-python") Output: Explanation: above snippet code, have imported required module. have then defined path browser used register() method register browser module. have then used get() method access browser. have then used open() open_new_tab() methods open requested URLs. Next TopicBinary Search using Recursion Python prev next