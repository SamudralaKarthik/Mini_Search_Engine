next prev Python what purpose Python? this tutorial, will learn what PEP-8 Python coding. will discuss guidelines using programming-this tutorial aimed beginners intermediate. will also discuss benefits using PEP-8 while coding. What PEP? abbreviation form Python Enterprise Proposal. Writing code with proper logic factor programming, many other important factors affect code's quality. developer's coding style makes code much reliable, every developer should keep mind that Python strictly follows order format string. Adaptive nice coding style makes code more readable. code becomes easy end-user. document that provides various guidelines write readable Python. describes developer write beautiful code. officially written 2001 Guido Rossum, Barry Warsaw, Nick Coghlan. main enhance readability consistency code. Important? enhances readability Python code, readability important? Let's understand this concept. Creator Python, Guido Rossum said, "Code much more often than written." code written minutes, hours, whole once have written code, will never rewrite again. sometimes, need read code again again. this point, must have idea wrote particular line code. code should reflect meaning each line. That's readability much important. will describe important guidelines writing effective code that read others well. Naming Convention When write code, need assign name many things such variables, functions, classes, packages, more things. Selecting proper name will save time energy. When look back file after sometime, easily recall what certain variable, function, class represents. Developers should avoid choosing inappropriate names. naming convention Python slightly messy, there certain conventions that follow easily. Let's following naming convention. Example Single lowercase letter Single upper case letter Lowercase Lower_case_with_underscores number_of_apple UPPERCASE UPPER_CASE_WITH_UNDERSCORES NUM_OF_CARS =20 CapitalizedWords CamelCase) NumberOfBooks Note: While using abbreviations CapWords, capitalize letters abbreviation. Thus HTTPServerError better than HttpServerError. Name Style Below table that specifies some common naming styles Python. Consider following table. Type Naming Convention Examples Function should lowercase words separates words underscore. myfunction, my_function Variable should lowercase letter, words, separate words enhance readability. var, variable_name Class first letter class name should capitalized; camel case. separate words with underscore. MyClass, Form, Model Method should lowercase letter, words, separate words enhance readability. class_method, method Constant should short, uppercase letter, words, separate words enhance readability. MYCONSTANT, CONSTANT, MY_CONSTANT Module should lowercase letter, words, separate words enhance readability. Module_name.py, module.py Package should lowercase letter, words, separate words enhance readability. separate words with underscore. package, mypackage, Above some common naming conventions that useful beautify Python code. additional improvement, should choose name carefully. Code Layout code layout defines much code readable. this section, will learn whitespace improve code readability. Indentation Unlike other programming languages, indentation used define code block Python. indentations important part Python programming language determines level lines code. Generally, space indentation. Let's understand following example. Example print('x larger than 5') above example, indented print statement will executed condition statement true. This indentation defines code block tells what statements execute when function called condition trigger. Tabs Space also tabs provide consecutive spaces indicate indentation, whitespaces most preferable. Python allows mixing tabs spaces will error Python Indentation following Line Break essential indentation when using line continuations keep line fewer than characters. provides flexibility determining between lines code single line code that extends lines. Let's understand following example. Example Correct Way: Aligned with opening delimiter. func_name(argument_one, argument_two, argument_three, argument_four following structure. first line doesn't argument spaces from second line discriminate arguments from rest. function_name( argument_one, argument_two, argument_three, argument_four): print(argument_two) space indentation level. long_function_name( var_one, var_two, var_three, var_four) docstring Python provides types document strings docstring single line multiple lines. triple quotes define single line multiline quotes. Basically, these used describe function particular program. Let's understand following example. Example add(a, """This simple method""" """This simple program numbers. Should Line Break Before After Binary Operator? lines break before after binary operation traditional approach. affects readability extensively because operators scattered across different screens, each operator kept away from operand onto previous line. Let's understand following example. Example Wrong: operators away from their operands marks (engilsh_marks math_marks (science_marks biology_marks) Physics_marks above example, seems quite messy read. solve such types problems using following structure. Example Correct: easy match operators with operands Total_marks (English_marks math_marks (science_marks biology_marks) physics_marks Python allows break line before after binary operator, long convention consistent locally. Importing module should import modules separates line follows. import pygame import import Wrong import sys, also following approach. from subprocess import Popen, PIPE import statement should written file just after module comment. Absolute imports recommended because they more readable tend better behaved. import mypkg.sibling from mypkg import sibling from mypkg.sibling import example However, explicit relative imports instead absolutes imports, especially dealing with complex packages. Blank Lines Blank lines improved readability Python code. many lines code bunched together code will become harder read. remove this using many blank vertical lines, reader might need scroll more than necessary. Follow below instructions vertical whitespace. Top-level function classes with lines extra vertical space around them that understandable. class FirstClass: pass class SecondClass: pass main_function(): return None Single blank line inside classes functions that define class related another. Let's following example class FirstClass: method_one(self): return None second_two(self): return None blank lines inside function Sometimes, need write complicated function consists several steps before return statement. blank line between each step. Let's understand following example. cal_variance(n_list): list_sum n_list: list_sum list_sum mean list_sum len(n_list) square_sum n_list: square_sum square_sum n**2 mean_squares square_sum len(n_list) return mean_squares mean**2 above remove whitespaces improve readability code. Closing Braces break lines inside parentheses, brackets using Line continuations. allows closing braces implies line continuations. Let's understand following example. Line closing brace with first non-whitespace. list_numbers Line closing braces with first character line. list_numbers Both methods suitable use, consistency key, choose continue with Comments Comments integral part programming language. These best explain code. When documented code with proper comments anyone able understand code. should remember following points. Start with capital latter, write complete sentence. Update comment case change code. Limit line length comments docstrings characters. Block Comment Block comments good choice small section code. Such comments useful when write several line codes perform single action such iterating loop. They help understand purpose code. provides following rules write comment block. Indent block comment should same level. Start each line with followed single space. Separate line using single Let's following code. range(0, Loop will iterate over five times print value line character print(i, '\n') more than paragraph technical code. Let's understand following example. Inline Comments Inline comments used explain single statement piece code. quickly idea wrote that particular line code. specifies following rules inline comments. Start comments with single space. inline comments carefully. should separate inline comments same line statement they refer. Following example inline comments. variable that holds integer value. Sometimes, naming convention replace inline comment. 'Peter Decosta' #This student name following naming convention. Student_name 'Peter Decosta' Inline comments essential block comments make code more readable. Avoid Unnecessary Adding Whitespaces some cases, whitespaces make code much harder read. much whitespaces make code overly sparse difficult understand. should avoid adding whitespaces line. This known trailing whitespaces. Let's following example. Example Recommended list1 recommended List1 Example Recommended print(x, recommended print(x Programming Recommendation know that, there several methods perform similar tasks Python. this section, will some suggestions improve consistency. Avoid comparing Boolean values using equivalence operator recommended bool_value bool_value True: return bigger than shouldn't equivalence operator compare Boolean values. only take True False. Let's following example. Recommended my_bool: return bigger than This approach simple that's encourages Empty sequences false statements want check whether given list empty, might need check length list, need avoid following approach. recommended list1 len(list1): print('List empty!') However, there empty list, set, tuple. following check. Recommended list1 list1: print('List empty!') second method more appropriate; that's encourages Don't statement There options check whether variable defined value. first option with None, following example. Recommended None: return exists!' second option evaluate None statement based outcome. recommended None: return exists!' Both options correct first simple, encourages Conclusion have discussed guidelines make code remove ambiguity enhance readability. These guidelines improve code, especially when sharing code with potential employees collaborators. have discussed what uses, write code that compliant. Moreover, have brief introduction naming conventions. want more information regarding read full documentation visit PEP8.org. Next TopicPython User Groups prev next