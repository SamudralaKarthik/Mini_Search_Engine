next prev Brython Works understanding Brython works, first have install brython with preferred method, which have discussed "How install Brython article". this, should know before discussing brython works: implement python JavaScript translate Python JavaScript also runtime executive browser. main libraries JavaScript file: brython_stdlib.js, which standard library Brython brython.js, which core brython language invoke brython(), which will compiles Python program stored script tags with text/python type. this article, will discuss Brython core components, standard libraries, works. Brython Core Components brython.js brython.min.js (the minimized version Brython engine) contains core components brython. Both them contains following components: brython.js brython.min.js (the minimized version Brython engine) contain core components Brython. Both them contains following components: _BRYTHON_: JavaScript global object which holds internal objects that should needed running Python script. _BRYTHON_ used directly when write Brython applications. look Brython program, broth Python JavaScript, then will notice regular occurrences _BRYTHON_. need this object, should aware this when error when want debug program browser console. Brython(): primary JavaScript function which exposed JavaScript global namespace. execute Python program without calling this function. This only JavaScript function that should have call explicitly. Browser: module browser, which exposes JavaScript objects that commonly used front-end website applications like Document Object Model interfaces document, browser window uses window object. Built-in types: these implementations Python built-in types JavaScript. Such py_dicts.js, py_string.js py_int.js respectively performances dict, str, int. Brython Standard Library After having idea what core Brython file, brython.js, will learn about their companion file, brython_stdlib.js. Python standard library exposed brython_stdlib.js. After generation brython_stdlib.js file, Brython compile Python standard library into JavaScript links result into package brython_stdlib.js. Brython should closed CPython, which Python's preferred implementation. Brython runs inside context website browser, limitations, such browser does allow direct access file system, os.open() function cannot open file. Functions which related website browser cannot implemented. example: let's code Brython environment: import os.unlink() Output: TypeError Traceback (most recent call last) <ipython-input-1-85e82a7fc62f> <module> import ----> os.unlink() TypeError: unlink() missing required argument 'path' (pos Here, os.unlink() raising exception, secure deletion local file from browser environment, File Directories Entries just default proposal. Brython only supports native Python modules. does support Modules Python built unless they have been implemented again JavaScript. example, hashlib module written implemented JavaScript Brython. users developers also consult list modules Brython distribution comparing CPython implementation. user needs include brython_stdlib.js brython_stdlib.min.js importing modules from Python standard library. Brython Working Now, let's Brython works inside Browser, which only aware their JavaScript engine. will understand this with help example tools that available browser. will learn about process that involved execution Python code browser. example: <!doctype html> <html> <head> <script "https://raw.githack.com/brython-dev/brython/master/www/src/brython.js"> </script> </head> <body onload "brython()"> <script type "text/python"> import browser browser.alert("Hello JavaTpoint!") </script> </body> </html> After loading parsing HTML page, brython() will take these following steps: will read Python program which stored element <script type "text/python"> Then compile python program equivalenting JavaScript After that, will evaluate resulting JavaScript code with eval() example: embed Python code HTML file: <script type "text/python"> import browser browser.alert("Hello JavaTpoint!") </script> Second option download Python program from separate file: example: <head> <script "https://www.forexample.com/main.py" type "text/python"> </script> </head> above case Python file will look like this: import browser browser.alert("Hello JavaTpoint?) process separating Python program from HTML program cleaner method. This also allows users take advantage functionalities benefits code editors. Some editors have support embedded JavaScript into HTML, they support inline Python into HTML. Internals Brython this section article, will provide depth process transform Python program into JavaScript. illustrating process, what internals Brython, user should following step: First, open home page Brython Then open website console clicking CTrl+shift+I Windows Linux operating system CMD+ALT+I operating system REPL browser JavaScript, user should type execute following commands bellow: example: eval(__BRYTHON__.python_to_js("import browser; browser.console.log('Hello Brython JavaTpoint!')")); Then python_to_js() will parse compile above program into JavaScript then will execute JavaScript website browser. user will following Output: After applying eval() function Brython program, will print "Hello Brython JavaTpoint!" console Browser. function JavaScript will return undefined, which default return value functions JavaScript. Whenever user builds Brython application, they should need call function explicitly _BRYTHON_ JavaScript module. This example above used only explaining Brython operates background. JavaScript _BRYTHON_ object also available JavaScript global scope, users access with console Browser JavaScript. Conclusion this article, have discussed explain core components standard libraries Brython Brython works Browser. have also talked about internals Brython operated websites from background. Next TopicHow Brython Browser prev next