next prev Performing Transactions Transactions ensure data consistency database. have make sure that more than applications must modify records while performing database operations. transactions have following properties. Atomicity Either transaction completes, nothing happens. transaction contains queries then these queries must executed, none them must executed. Consistency database must consistent before transaction starts database must also consistent after transaction completed. Isolation Intermediate results transaction visible outside current transaction. Durability Once transaction committed, effects persistent, even after system failure. Python commit() method Python provides commit() method which ensures changes made database consistently take place. syntax commit() method given below. conn.commit() #conn connection object operations that modify records database take place until commit() called. Python rollback() method rollback() method used revert changes that done database. This method useful sense that, some error occurs during database operations, rollback that transaction maintain database consistency. syntax rollback() given below. Conn.rollback() Closing connection need close database connection once have done operations regarding database. Python provides close() method. syntax close() method given below. conn.close() following example, deleting employees working department. Example import mysql.connector #Create connection object myconn mysql.connector.connect(host "localhost", user "root",passwd "google",database "PythonDB") #creating cursor object myconn.cursor() try: cur.execute("delete from Employee where Dept_id 201") myconn.commit() print("Deleted except: print("Can't delete myconn.rollback() myconn.close() Output: Deleted Next TopicPython Tkinter prev next