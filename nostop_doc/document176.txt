next prev Python Holidays Module this tutorial, will learn interesting Python libraries named holidays, which determines holidays given year particular day. returns specific result given date. only need pass country name. However, only detect fixed holidays such Christmas, Year, etc. Installation Type following command terminal press enter. install holidays Import holidays module check whether installed not. HolidayBase() Method holidays module provides HolidayBase() method, which used detect holidays specific date. Let's following syntax. Syntax holidays.HolidayBase(years=[], expand=True, observed=True, prov=None, state=None) Parameters takes following parameter. years iterable list integers that specify holidays object should pre-generated. This parameter only setting increases False. expand represents Boolean value that denotes whether holidays Year. default, true. observed When observed Boolean value True, will include observed holiday that falls weekend. prov string value specifying province that unique constitutional holidays. Default (Australia='ACT', Canada='ON', NewZealand=None). state represents state with unique constitutional holidays. (Default United States None). Let's understand following example Example from datetime import date import holidays Select country USA_holidays_list holidays.US() printing holiday year 2020 holidays.US(years 2020).items(): print(p) Output: (datetime.date(2020, "New Year's Day") (datetime.date(2020, 20), 'Martin Luther King Jr. Day') (datetime.date(2020, 17), "Washington's Birthday") (datetime.date(2020, 25), 'Memorial Day') (datetime.date(2020, 'Independence Day') (datetime.date(2020, 'Independence (Observed)') (datetime.date(2020, 'Labor Day') (datetime.date(2020, 12), 'Columbus Day') (datetime.date(2020, 11), 'Veterans Day') (datetime.date(2020, 26), 'Thanksgiving') (datetime.date(2020, 25), 'Christmas Day') Example from datetime import date import holidays Select country India_holidays_list holidays.India() printing holiday India year 2020 holidays.India(years 2020).items(): print(p) Output: (datetime.date(2021, 14), 'Makar Sankranti Pongal') (datetime.date(2021, 26), 'Republic Day') (datetime.date(2021, 15), 'Independence Day') (datetime.date(2021, 'Gandhi Jayanti') (datetime.date(2021, 'Labour Day') (datetime.date(2021, 25), 'Christmas') Note output, holidays module only returns fixed-date holidays. Example from datetime import date import holidays Select country uk_holidays_list holidays.UnitedKingdom() printing holiday India year 2020 holidays.UnitedKingdom(years 2021).items(): print(p) Output: (datetime.date(2021, "New Year's Day") (datetime.date(2021, 'New Year Holiday [Scotland]') (datetime.date(2021, 'New Year Holiday [Scotland] (Observed)') (datetime.date(2021, 17), "St. Patrick's [Northern Ireland]") (datetime.date(2021, 12), 'Battle Boyne [Northern Ireland]') (datetime.date(2021, 'Summer Bank Holiday [Scotland]') (datetime.date(2021, 30), "St. Andrew's [Scotland]") (datetime.date(2021, 25), 'Christmas Day') (datetime.date(2021, 27), 'Christmas (Observed)') (datetime.date(2021, 'Good Friday') (datetime.date(2021, 'Easter Monday [England, Wales, Northern Ireland]') (datetime.date(2021, 'May Day') (datetime.date(2021, 31), 'Spring Bank Holiday') (datetime.date(2021, 30), 'Late Summer Bank Holiday [England, Wales, Northern Ireland]') (datetime.date(2021, 26), 'Boxing Day') (datetime.date(2021, 28), 'Boxing (Observed)') holiday's list desired country. check given date holiday? Suppose want check specific date holiday not. this follows. Example from datetime import date import holidays Select country uk_holidays holidays.UnitedKingdom() date1 '25-25-2021' date1 uk_holidays Cheking whether given data holiday True: print("Yes: print (uk_holidays.get(date1)) else: print("No Holiday") Output: Yes: Christmas Custom Holidays Adding India Many countries missed following table luckily Custom holidays specific country. below example, will custom holidays India. Example import holidays add_holidays holidays.HolidayBase() print('28-03-2021' add_holidays) checking holiday here adding Holiday without description add_holidays.append('28-03-2021') print('28-03-2021' add_holidays) True Holiday with description add_holidays.append({'28-03-2021':'Holi: Festival Colors, Holiday'}) print(add_holidays.get('28-03-2021')) Output: False True Holi: Festival Colors, Holiday Explanation: above code, first, have imported date holidays modules. have then created object HolidayBase() checked whether given date consists holiday. retuned false, custom holiday without description. other statement, have added holiday with description printed result. Available Countries Holidays Library Below countries that supported holidays library. Country	Abbreviations Provice/State Argentina None Australia AU prov ACT (default), NSW, QLD, SA, TAS, VIC, WA Austria AT prov (default) Belgium BE None Canada prov AB, BC, NB, NL, NU, (default), PE, QC, SK, YU Colombia CO None Czech CZ None Denmark None England None EuropeanCentralBank ECB,TAR Trans-European Automated Real-time Gross Settlement (TARGET2) Finland FI None France FRA Métropole (default), Alsace-Moselle, Guadeloupe, Guyane, Martinique, Mayotte, Nouvelle-Calédonie, Réunion, Polynésie Française, Saint-Barthélémy, Saint-Martin, Wallis-et-Futuna Germany DE BW, BY, BB, HB, HH, HE, MV, NI, RP, SL, SN, TH Hungary HU None Ireland Isle None Italy prov RM Japan None Mexico MX None Netherlands NL None NewZealand NZ prov NTL, AUK, TKI, HKB, WGN, MBH, NSN, CAN, STC, WTL, OTA, STL, CIT Northern Ireland None Norway None Polish PL None Portugal None PortugalExt PTE Portugal plus extended days most people have Scotland None Slovenia SI None Slovakia SK None South Africa ZA None Spain ES prov AND, ARG, AST, CAN, CAM, CAL, CAT, CVA, EXT, GAL, IBA, ICA, MAD, MUR, NAV, PVA, RIO Sweden None Switzerland CH prov AG, BL, BS, FR, GE, GL, GR, JU, LU, OW, SG, SZ, SO, TG, UR, VD, VS, ZG, ZH UnitedKingdom UK None UnitedStates state AL, AK, AS, AZ, CA, CO, DE, DC, FL, GA, GU, HI, IL, IA, KS, KY, LA, ME, MD, MH, MA, FM, MN, MS, MO, MT, NV, NH, NJ, NM, NY, NC, ND, MP, OH, PW, PA, PR, RI, SC, SD, TN, TX, UT, VT, VA, VI, WA, WV, WI, WY Wales None Next TopicFuzzyWuzzy Python Library prev next