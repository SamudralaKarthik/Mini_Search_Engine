next prev Plot Google using folium package Python folium package built data wrangling strengths Python ecosystem mapping strengths Leaflet.js library JavaScript language. user manipulate their data using Python then visualize using Leaflet.js through folium package. Folium package easy approach visualizing data Leaflet.js map, which been manipulated using Python. Required Module Libraries Folium: user install Folium package using following command. install folium Geopy: geopy module Python makes easy Python users locate coordinates landmarks, cities, countries earth's surface. installing geopy module, user following command: install geopy After successful installation both libraries, follow below steps plot Google map. Step Create Base user create base using following program: import First, import folium package import folium from geopy.geocoders import Nominatim Initialize Nominatim geo_locator NT(user_agent "geoapiExercises") write place place_1 "Yemen" location_1 geo_locator.geocode(place_1) now, will search location using latitude longitude, with zoom_start user_map1 folium.Map(location [location_1.longitude, location_1.latitude], zoom_start last, open base user_map1 Output: Step Circular Marker user mark area with circle popup text using following code: import folium from geopy.geocoders import Nominatim geo_locator NT(user_agent "geoapiExercises") place_1 "Yemen" location_1 geo_locator.geocode(place_1) user_map1 folium.Map(location [location_1.longitude, location_1.latitude], zoom_start CircleMarker with radius folium.CircleMarker(location [location_1.longitude, location_1.latitude], radius popup YEMEN ').add_to(user_map1) Now, open with circular Mark user_map1 Output: Step simple marker parachute style marker with popup text user following code. Example import import folium from geopy.geocoders import Nominatim geo_locator NT(user_agent "geoapiExercises") place_1 "Yemen" location_1 geo_locator.geocode(place_1) user_map1 folium.Map(location [location_1.longitude, location_1.latitude], zoom_start #Now, will pass string popup parameter folium.Marker([location_1.longitude, location_1.latitude], popup ['YEMEN']).add_to(user_map1) now, open user_map1 Output: Step line user following code adding line join coordinates. Example First, import folium package import folium import from geopy.geocoders import Nominatim geo_locator NT(user_agent "geoapiExercises") place_1 "Aden" place_2 "Yemen" location_1 geo_locator.geocode(place_1) location_2 geo_locator.geocode(place_2) user_map1 folium.Map(location [location_1.longitude, location_1.latitude], zoom_start folium.Marker([location_1.longitude, location_1.latitude], popup ['Aden']).add_to(user_map1) folium.Marker([location_2.longitude, location_2.latitude], popup 'Yemen').add_to(user_map1) Now, will line using Polyline method will connect both coordinates line folium.PolyLine(locations [[location_1.longitude, location_1.latitude], [location_2.longitude, location_2.latitude]], line_opacity 0.5).add_to(user_map1) now, open user_map1 Output: Explanation used geopy library latitude longitude location. Then used "folium.map" method folium package creating base Google Maps. step used "folium.CircleMarker" marking circular mark location with pop-up text. step used "folium.Marker" parachute style mark mentioned location. last step, used "folium.PolyLine" joining marks different locations map. Conclusion this tutorial, have shown user Plot Google different required functionalities like circular mark, parachute mark, pop-up text, line joining coordinates map. Next TopicGrid Search Python prev next