next prev lists Python this topic, will learn lists Python. before going through topic, need understand term List Python. Python list used store multiple items variable. Items list ordered, changeable, allow store duplicate values. Each item list appropriate indexed value where first index list starts with {0}, length index list must n-1. Each item list separated comma symbol enclosed within square brackets Syntax ["Apple", "NEW York"] different data type elements same data type elements Here lists containing same different data type elements list. List contains string data type elements, whereas List contains only data type elements. Let's consider program print list Python. programList.py List1 ["Rose", "Lotus", "Gold", "USA" define list define Department Dept2 list Dept2 ["Web Designing", define HR_CS HR_CS [58, "Ms Wiley"] List2 integer list print Display List1", List1) print Display List2", List2) print Display Department List", Dept2) print Display Department HR_CS) Output: Display List1 ['Rose', 'Lotus', 'Gold', 'USA'] Display List2 Display Department List ['Web Designing', Display Department [58, 'Ms Wiley'] Let's discuss various method lists Python Program. Method lists using Naive Method: simple method that adds lists Python using loop appends method lists into third list. loop performs addition both lists with same index number continuously iterates elements until list. After that append method, insert added elements third list. Let's consider program list Python using Naïve Method. naivePro.py initialize Python lists print original list element print Python Original list (lt1)) print "Python Original list (lt2)) naive method list. res_lt declaration list range (lt1)): res_lt.append( lt1[x] lt2[x]) Display list Python print Addition list (res_lt)) Output: Python Original list Python Original list Addition list Method list using Comprehension List shorthand technique Naive method Python. comprehension technique much faster type retrieve addition lists. Therefore, used Python programming perform these types tasks. Let's consider program list Python using Naïve Method. comprehension.py initialize Python lists print original list element print Python list (lt1)) print "Python list (lt2)) list comprehension lists. res_lt lt1[x] lt2[x] range (len (lt1))] Display list Python print Addition list (res_lt)) Output: Python list Python list Addition list Method list Python using map() function with operator: Python, map() function used lists bypassing list variables (lt1, lt2) parameters. Inside map() function, added parameter acts like additional operator lists returns sum. Consider program lists Python using map() function with operator. AddMap.py from operator import import operator from operator module initialize Python list' element display original items lists print ("Display elements List str(lt1)) print ("Display elements List str(lt2)) map() function with operator elements lists res_lt list( (add, lt1, lt2)) pass lt1, parameters Display list print list list str(res_lt)) Output: Display elements List Display elements List list list 36] Method Accepts list element from user joins lists. this program, input user's list elements insert them into list using loop. After that, perform addition lists Python program. Let's consider program take input list element from user them. Accept.py Declaration lt1, lists Takes numeric number from user define total size list items (input Enter total number list elements: Enter list elements from user one. print Enter items into List range(1, items input Enter value index %i)) lt1.append(num) insert items into list1 Enter list elements from user one. print Enter items into List range(1, items input Enter value index %i)) lt2.append(num) insert items into list2 range(items): lt3.append (lt1[j] lt2[j]) list items both list into print ("\n Addition lists lt3) Output: Enter total number list elements: Enter items into List Enter value index Enter value index Enter value index Enter value index Enter value index Enter items into List Enter value index Enter value index Enter value index Enter value index Enter value index addition list Method list using zip() function with sum() function: sum() function used lists using index number list elements grouped zip() function. zip() function used sum() function group list elements using index-wise lists. Let's consider program list elements using function function Python. zipSum.py initializing lists display original items lists print ("Display elements List str(lt1)) print ("Display elements List str(lt2)) zip() function sum() function group lists lists' with index #wise. result_lt [sum(i) zip(lt1, )] Display list print list list str(result_lt)) Output: Display elements List Display elements List list list [10, Next TopicShallow Copy Deep Copy Python prev next