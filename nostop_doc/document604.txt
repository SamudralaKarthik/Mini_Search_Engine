next prev Implementing Apriori Algorithm Python Apriori Algorithm Machine Learning algorithm utilized understand patterns relationships among various products involved. most popular algorithm suggest products based items already user's shopping cart. Walmart specifically utilized algorithm recommending items users. Dataset: Groceries data Implementation algorithm Python: Step Import required libraries import numpy import pandas from mlxtend.frequent_patterns import apriori, association_rules Step Load explore data Now, will load Data data1 pnd.read_excel('Online_Retail.xlsx') data1.head() Output: InvoiceNo StockCode Description Quantity InvoiceDate UnitPrice CustomerID Country 536365 85123A WHITE HANGING HEART T-LIGHT HOLDER 2010-12-01 08:26:00 2.55 17850.0 United Kingdom 536365 71053 WHITE METAL LANTERN 2010-12-01 08:26:00 3.39 17850.0 United Kingdom 536365 84406B CREAM CUPID HEARTS COAT HANGER 2010-12-01 08:26:00 2.75 17850.0 United Kingdom 536365 84029G KNITTED UNION FLAG HOT WATER BOTTLE 2010-12-01 08:26:00 3.39 17850.0 United Kingdom 536365 84029E WOOLLY HOTTIE WHITE HEART. 2010-12-01 08:26:00 3.39 17850.0 United Kingdom Input: here, will explore columns data data1.columns Output: Index(['InvoiceNo', 'StockCode', 'Description', 'Quantity', 'InvoiceDate', 'UnitPrice', 'CustomerID', 'Country'], Dtype 'object') Input: Now, will explore different regions transactions data1.Country.unique() Output: array(['United Kingdom', 'France', 'Australia', 'Netherlands', 'Germany', 'Norway', 'EIRE', 'Switzerland', 'Spain', 'Poland', 'Portugal', 'Italy', 'Belgium', 'Lithuania', 'Japan', 'Iceland', 'Channel Islands', 'Denmark', 'Cyprus', 'Sweden', 'Austria', 'Israel', 'Finland', 'Bahrain', 'Greece', 'Hong Kong', 'Singapore', 'Lebanon', 'United Arab Emirates', 'Saudi Arabia', 'Czech Republic', 'Canada', 'Unspecified', 'Brazil', 'USA', 'European Community', 'Malta', 'RSA'], dtype object) Step Clean Data here, will strip extra spaces description data1['Description'] data1['Description'].str.strip() Now, drop rows which does have invoice number data1.dropna(axis subset ['InvoiceNo'], inplace True) data1['InvoiceNo'] data1['InvoiceNo'].astype('str') Now, will drop transactions which were done credit data1 data1[~data1['InvoiceNo'].str.contains('C')] Step Split data according region transaction Transactions done France basket1_France (data1[data1['Country'] "France"] 		.groupby(['InvoiceNo', 'Description'])['Quantity'] 		.sum().unstack().reset_index().fillna(0) 		.set_index('InvoiceNo')) Transactions done United Kingdom basket1_UK (data1[data1['Country'] "United Kingdom"] 		.groupby(['InvoiceNo', 'Description'])['Quantity'] 		.sum().unstack().reset_index().fillna(0) 		.set_index('InvoiceNo')) Transactions done Portugal basket1_Por (data1[data1['Country'] "Portugal"] 		.groupby(['InvoiceNo', 'Description'])['Quantity'] 		.sum().unstack().reset_index().fillna(0) 		.set_index('InvoiceNo')) basket1_Sweden (data1[data1['Country'] "Sweden"] 		.groupby(['InvoiceNo', 'Description'])['Quantity'] 		.sum().unstack().reset_index().fillna(0) 		.set_index('InvoiceNo')) Step encoding Data Here, will define encoding function making data suitable concerned libraries hot_encode1(P): 	if(P<= 		return 	if(P>= 		return Here, will encode datasets basket1_encoded basket1_France.applymap(hot_encode1) basket1_France basket1_encoded basket1_encoded basket1_UK.applymap(hot_encode1) basket1_UK basket1_encoded basket1_encoded basket1_Por.applymap(hot_encode1) basket1_Por basket1_encoded basket1_encoded basket1_Sweden.applymap(hot_encode1) basket1_Sweden basket1_encoded Step Build models analyse results France: Build model frq_items1 AP(basket1_France, min_support 0.05, use_colnames True) Collect inferred rules dataframe rules1 AR(frq_items1, metric "lift", min_threshold rules1 rules1.sort_values(['confidence', 'lift'], ascending [False, False]) print(rules1.head()) Output: antecedents (JUMBO BAG WOODLAND ANIMALS) (PLASTERS TIN CIRCUS PARADE, TOADSTOOL (RED TOADSTOOL NIGHT LIGHT, PLASTERS TI... (SET/6 SPOTTY PAPER CUPS, SET/20 RETRO... (SET/6 SPOTTY PAPER PLATES, SET/20 RET... consequents antecedent support consequent support (POSTAGE) 0.076531 0.765306 (POSTAGE) 0.051020 0.765306 (POSTAGE) 0.053571 0.765306 (SET/6 SPOTTY PAPER PLATES) 0.102041s 0.127551 (SET/6 SPOTTY PAPER CUPS) 0.102041 0.137755 support confidence lift leverage conviction 0.076531 1.000 1.306667 0.017961 0.051020 1.000 1.306667 0.011974 0.053571 1.000 1.306667 0.012573 0.099490 0.975 7.644000 0.086474 34.897959 0.099490 0.975 7.077778 0.085433 34.489796 From above output, seen that paper cups, paper plates bought together France. This because French culture having get-together with their friends family least once week. Also, since French government banned plastic country, people have purchase paper-based alternatives. United Kingdom: frq_items apriori(basket_UK, min_support 0.01, use_colnames True) rules association_rules(frq_items, metric ="lift", min_threshold rules rules.sort_values(['confidence', 'lift'], ascending =[False, False]) print(rules.head()) guidelines British transactions examined greater detail, discovered that British consumers purchase various colored plates. reason could fact that British love tend collect different colors plates suit different occasions. Portugal: frq_items1 AP(basket1_Sweden, min_support 0.05, use_colnames True) rules1 AR(frq_items1, metric ="lift", min_threshold rules1 rules1.sort_values(['confidence', 'lift'], ascending =[False, False]) print(rules1.head()) Output: antecedents consequents 1170 (SET COLOUR PENCILS DOLLY GIRL) (SET COLOUR PENCILS SPACEBOY) 1171 (SET COLOUR PENCILS SPACEBOY) (SET COLOUR PENCILS DOLLY GIRL) 1172 (SET KNICK KNACK TINS LONDON) (SET COLOUR PENCILS DOLLY GIRL) 1173 (SET COLOUR PENCILS DOLLY GIRL) (SET KNICK KNACK TINS LONDON) 1174 (SET COLOUR PENCILS DOLLY GIRL) (SET KNICK KNACK TINS POPPIES) antecedent support consequent support support confidence lift 1170 0.051724 0.051724 0.051724 19.333333 1171 0.051724 0.051724 0.051724 19.333333 1172 0.051724 0.051724 0.051724 19.333333 1173 0.051724 0.051724 0.051724 19.333333 1174 0.051724 0.051724 0.051724 19.333333 leverage conviction 1170 0.049049 1171 0.049049 1172 0.049049 1173 0.049049 1174 0.049049 analysing association regulations Portuguese transactions, Tiffin (Knick Knack Tins) colour pencils found. These items typically belonging primary school child. Both these items needed students school carry their lunches well work that requires creativity, therefore logical pair them together. Sweden: frq_items1 AP(basket1_Sweden, min_support 0.05, use_colnames True) rules1 AR(frq_items1, metric ="lift", min_threshold rules1 rules1.sort_values(['confidence', 'lift'], ascending =[False, False]) print(rules1.head()) Output: antecedents consequents (PACK SKULL CAKE CASES) PENCILS SMALL TUBE SKULL) PENCILS SMALL TUBE SKULL) (PACK SKULL CAKE CASES) DOILIES DOLLY GIRL) (ASSORTED BOTTLE MAGNETS) (ASSORTED BOTTLE MAGNETS) DOILIES DOLLY GIRL) (CHILDRENS CUTLERY DOLLY GIRL) (CHILDRENS CUTLERY CIRCUS PARADE) antecedent support consequent support support confidence lift 0.055556 0.055556 0.055556 18.0 0.055556 0.055556 0.055556 18.0 0.055556 0.055556 0.055556 18.0 0.055556 0.055556 0.055556 18.0 0.055556 0.055556 0.055556 18.0 leverage conviction 0.052469 0.052469 0.052469 0.052469 0.052469 Analysing above guidelines above rules, find that both girls' boys' cutlery placed together. This makes sense since when parent shops cutlery items their children, they would like item specific child's desires. Next TopicSentiment Analysis using VADER prev next