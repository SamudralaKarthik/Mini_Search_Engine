next prev Python High Order Function must aware basic concept Python functions, should move forward with some advanced concepts related Python functions. this tutorial, going discuss important aspects High order functions Python, like what high order functions are, define them Python, them Python what properties high order functions are. Prerequisites: learn about high order functions Python, must have basic knowledge following concepts: Python functions Parameters Python objects Python decorators First, let's start with first thing, i.e., High order functions, understand basic about them. High order functions function that having another function argument function that returns another function return output called High order function. High order functions operate with other functions given program. fact about High order function that high order function applicable both functions well methods that take function their parameter return function result them. Python, this concept high-order functions supported with every aspect. Properties High order functions Python Now, this section, will discuss some important properties high order functions that applicable Python well. high order function, store function inside variable. high order function, function instant object type. high order function, return function result another function. high order function, pass function parameter argument inside another function. store Python high order functions data structures format such lists, hash tables, etc. High order functions Python Now, this section, will talk specifically about Python high order functions define them. will discuss methods means which will define high order functions Python program. Following ways define High order functions Python code that going discuss this tutorial. Using functions objects High order function Returning function result high order function Functions parameter another function Decorators high order function Now, will discuss each above-given methods detail learn about their implementation high order functions Python program. Method Using functions objects High order function Python, even assign given function variable also. This assignment function into variable will call actual function, instead will create reference function that created. Thus, makes this assignment assigning function variable object will create high order function program. Look following example program learn implementation method discussed above: Example default function take another function parameter spell(text): Making text upper return text.upper() Taking text user input text input("Enter text print uppercase double: Spell function with text print(spell(text)) Assigning variable with default function scream spell Scream with text variable print(scream(text)) Output: Enter text print uppercase double: JavaTPoint JAVATPOINT JAVATPOINT Method Functions parameter another function Basically, Python functions like Python objects, therefore Python functions pass them argument inside another function, that will create high order function program. Look following program understand implementation above-given method: Example Default function making text uppercase scream(word): return word.upper() Default function making text lowercase spell(word): return word.lower() third function that work high order function speak(funct): Storing function variable high order function speaking funct("Hello Python Developers! welcomed JavaTpoint") print(speaking) Printing text uppercase speak(scream) Printing text lowercase speak(spell) Output: HELLO PYTHON DEVELOPERS! YOU ARE WELCOMED JAVATPOINT hello python developers! welcomed javatpoint Method Returning function result high order function also return function result another function object, that makes function high order function. Look following example program learn implementation method discussed above: Example default function addition Adding(a): Nested function with second number Addition(b): return addition numbers return Addition Result Taking both number variable user input int(input("Enter First Number: int(input("Enter Second Number: Assigning nested adding function variable AddVariable Adding(a) Using variable high order function Result AddVariable(b) Printing result print("Sum numbers given Result) Output: Enter First Number: Enter Second Number: numbers given Method Decorators high order function decorators high order function most commonly used high order function Python. Decorators Python allow modify behavior methods functions defined program, also allows wrap function inside another function extend behavior wrapped parent function. even wrap function inside another function without even permanently modifying parent function. Python decorators, function taken argument other function, then these decorators called inside wrapped function. Look following exemplar syntax decorator defined Python program. Syntax Using decorator @JTP_Decorator Python_Decorator(): above syntax decorator equivalent following Python code high order function. Using Python default function Python decorators Python_Decorator(): Python_Decorator @JTP_Decorator(Python_Decorator) have referred @JTP_Decorator callable function inside default Python_Decorator() function above-given code. will have just some extra code this structure, will output wrapper function. Look following program understand implementation above given method: Example Using default function Python decorators Python_Decorator(funct): Inner nested function inner(): print("This line code will printed before execution high order function") funct() print("This line code will printed after execution high order function") return inner default function decorator JTP_Decorator(): print("This line code will printed inside execution high order function") JTP_Decorator Python_Decorator(JTP_Decorator) Python decorator high order function Python decorator calling high order function JTP_Decorator() Output: This line code will printed before execution high order function This line code will printed inside execution high order function This line code will printed after execution high order function Next TopicAssignment Operators Python prev next