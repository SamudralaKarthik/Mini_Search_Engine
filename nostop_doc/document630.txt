next prev Write Program Print Diagonal Elements Given Matrix this tutorial, will write Python program print diagonal elements given matrix. common program that asked technical interviews. matrix given; need print primary secondary diagonals. Input: Output: Primary Diagonal: Secondary Diagonal: Input: Output: Primary Diagonal: Secondary Diagonal: Let's understand row-column pattern matrix Python. Mat00 03 primary diagonal element, need find Mat00, Mat11, Mat22, Mat33; formed using same column name. row-column condition column. </pre></div> class="points"> <li>To primary diagonal element, need find Mat03, Mat12, Mat21, Mat30; condition secondary diagonal -</li> </ul> <div class="codeblock"><textarea name="code" class="python"> row-column condition numberOfRows column </pre></div> <h2 class="h2">What Matrix?</h2> <p>A matrix 2-dimensional structure storing data rows columns. store integer, strings, expressions, special symbols more.</p> <p>A matrix collection rows columns, structure denoted RXC, where denoted number rows denotes number matrix columns, respectively.</p> <p>In Python, create matrix using methods using list Numpy library.</p> <p>The following code represents matrices numbers.</p> <p><strong>Example -</strong></p> <div class="codeblock"><textarea name="code" class="python"> [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']] print (mat) Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']] Matrix Representation Python Remember that always number first then column number. correct format element inside matrix becomes (R, where represent column where element present. Let's following 2x2 matrixes numbers, represents 2X3 matrix string. Example [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']] [[12, 14], [60, 80]] [[1, print(X) print(Y) print(Z) Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']] [[27, 34], [61, 18]] [['one', 'two', 'three'], ['four', 'five', 'six']] have basic idea matrix presentation Python. let's jump solution part. Solution Let's understand first method. Method this method, will loops columns loop rows, inner loop, check condition. Example diagonalMat(mat): print("Primary Diagonal len(mat) len(mat[0]) range(row): range(col): i==j: print(mat[i][j], ',') print() [[1, diagonalMat(mat) Output: Primary Diagonal 1,3,9,3, Explanation above code, rows matrix have used loops. inner loop, checked conditions equal than print corresponding element. will write Program secondary diagonal Example SecondaryDiagonal(mat, print("Secondary Diagonal: range(n): range(n): Condition secondary diagonal 1)): print(mat[i][j], print() [[1, SecondaryDiagonal(mat, Output: Secondary Diagonal: Time Complexity O(n2) there nested loop involved time complexity squared. Auxiliary Space: O(1). extra space occupied Method solve this problem using single loop. Let's understand following example. Example displayPrincipalDiagonal(mat): print("Principal Diagonal: len(mat) range(n): Printing principal diagonal print(mat[i][i], print() displayPrincipalDiagonal(mat) Output: Principal Diagonal: Explanation above code, loop until length matrix print mat[i][i] where index variable. Secondary Diagonal Elements Example displaySecondaryDiagonal(mat): print("Secondary Diagonal: len(mat) range(n): Secondary secondary diagonal print(mat[i][k], print() displaySecondaryDiagonal(mat) Output: Secondary Diagonal: Explanation have used same approach above print mat[i][k] where index variable matrix_length decrease until Complexity Analysis: Time Complexity: (n). nested loop involved, time complexity squared. Auxiliary Space:O (1). extra space occupied. Next TopicEncapsulation Python prev next