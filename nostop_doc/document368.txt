next prev Difference between module function Python Python programming language that considered progressive known optimization capabilities. Python skims down redundant characteristics programming makes tools rich utilization. following tutorial, will discuss difference between module function Python programming language. What Module? module simply Python file with extension that programmer import inside another Python program. name Python file becomes name module. module consists definitions implementation Classes Variables Functions That utilized within another program. Benefits modules Reusability:Working with modules makes code reusable. Simplicity:The module targets small proportion problem rather than aiming complete problem. Scoping:A Module defines distinct namespace that supports avoiding collisions between identifiers. What Function? function block organized reusable code that perform single, associated activity. functions classified into different types User-defined functions Built-in functions Lambda functions Recursive functions User-defined functions: Functions that defined order perform particular activity termed User-defined functions. Benefits User-defined functions User-defined functions decompose large program into small segments, which makes program easy understand, maintain debug. Suppose repeated code occurs program. function include those codes execute when required calling that function. Built-in functions: Python different functions that readily available use. These functions known Built-in functions. List Built-in functions abs(), delattr(), hash(), memoryview(), set(), all(), dict(), help(), min(), setattr(), any(), dir(), hex(), next(), slice(), ascii(), divmod(), id(), object(), sorted(), bin(), enumerate(), input(), oct(), staticmethod(), bool(), eval(), int(), open(), str(), breakpoint(), exec(), isinstance(), ord(), sum(), bytearray(), filter(), issubclass(), pow(),super(), bytes(), float(), iter(), print(), tuple(), callable(), format(), len(), property(), type(), chr(), frozenset(), list(), range(), vars(), classmethod(), getattr(), locals(), repr(), zip(), compile(), globals(), map(), reversed(), __import__(), complex(), hasattr(), max(), round() Lambda functions: Lambda functions known Anonymous functions that defined without name. While define normal functions using keyword Python, define anonymous functions with help lambda keyword. Lambda function Python: need nameless function short period time. Python, usually parameter higher-order function function that accepts other functions parameters). Lambda functions utilized along with built-in functions such filter(), map(), more. filter()\: name suggests, used filter iterables requirements. filter() function filters original iterable passes elements that return TRUE function given filter. map()\: map() function executes requirements function elements iterable allows apply function then passes result, which have identical well different values. Recursion functions: Recursive function function defined terms itself through self-referential expressions. This means that function will continue call itself repeat behavior until some requirements return output. Defining Using Module Python following section, will understand define module Python. order begin, will create Python program file with extension save local repository. utilize this program file import into application involve functionality module application. import command order include multiple modules. Syntax: import module_1, module_2, Note: soon have included module program code, have executed code without calling function. That because have defined called functions file. Therefore, entire file executed first treated larger scale function, being executed while being called. consider following example. Example: importing module import math delete calls function from module created access functions attributes, classes, other valuables using operator. Syntax: module_1.func_1() module_2.name consider following example same. Example: importing module import math using sqrt() function math module print("Square root 16:", math.sqrt(16)) Output: Square root Explanation: above snippet code, have imported math module. have then used sqrt() function math module find square root printed value users. Defining Calling Function Python following section, will understand define call function Python. consider following example order understand definition calling function. Example: defining function my_func(): print("Greetings User! Welcome Javatpoint.") calling function my_func() Output: Greetings User! Welcome Javatpoint. Explanation: above snippet code, have defined simple function that prints string terminates. code this function also altered order make quite more useful. pass parameter function make above block code more reusable hard coding string. consider following example same. Example: defining function my_func(name): print("Greetings name Welcome Javatpoint.") calling function my_func("Daniel") my_func("Michelle") my_func("Chris") my_func("Dana") Output: Greetings Daniel, Welcome Javatpoint. Greetings Michelle, Welcome Javatpoint. Greetings Chris, Welcome Javatpoint. Greetings Dana, Welcome Javatpoint. Explanation: above snippet code, have defined function that accepts parameter 'name' printed statement including that parameter. have then called function specifying value name parameter printed different statements from function. observe, have rewrite function define repeatedly different strings. call this function multiple times whole application. Conclusion Modules functions appear similar their purpose, which reusability. However, modules larger scale because their different classes, functions, attributes fulfil larger functionalities. same time, functions more particular specific activities smaller scale. Next TopicReverse tuple Python prev next