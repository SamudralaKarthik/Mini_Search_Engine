next prev Plot glyphs over Google using Bokeh Library Python Bokeh Interactive Data visualization library Python. creates plots using HTML JavaScript languages. basic targets modern website browsers presenting provided elegance, concise construction novel graphics with high-performance interactivity. bokeh library used plotting glyphs over Google map. glyph hieroglyphic symbol character. using Google Maps Bokeh, gmap() function bokeh.plotting class. gmap() Syntax: gmap(parameter) Parameters: google_api_key: Google map_options: GmapOptions, that configuration which specific Google active_drag: dragging tool that initially active. active_inspect: inspecting tool that initially active. active_scroll: scrolling tool that initially active. active_tap: tapping tool that initially active. title: title Google map. tools: These tools with which plot should start. x_axis_label: used labelling x-axis x_axis_location: location x-axis x_minor_ticks: These number minor ticks between adjacent x-axis major ticks y_axis_label: used labelling y-axis y_axis_location: location y-axis y_minor_ticks: These number minor ticks between adjacent y-axis major ticks Returns: will return object class GMap GMapOptions() Syntax: GMapOptions(parameters) Parameters: lat: used latitude where Google centred. lng: used longitude where Google centred. map_type: defines type Google maps plot. Here four types maps available: -Hybrid -Roadmap -Satellite -Terrain name: name Google map. scale_control: defines whether Google should display distance scale control. styles: used defining style used plot. subscribed_events: used defining list events that subscribed Python callbacks. tags: These tags linked with Google model. tilt: used tilting angle map. zoom: initial zoom level Google map. apply_theme: theme model. Returns: returns object class GMapOptions Steps plotting glyphs over Google map: Step Import following modules libraries: gmap from bokeh.plotting ColumnDataSource from bokeh.models GmapOptions from bokeh.models output_file from bokeh.io show from bokeh.io Step Create file storing model using output_file() Step Configure Google using GMapOptions() Step Generate Google object using gmap() Step Define coordinates glyphs using ColumnDataSource() Step Generate glyphs above created object Google Maps. Step Display output Google Maps using show() Code: First, import required modules from bokeh.plotting import gmap GM from bokeh.models import ColumnDataSource from bokeh.models import GMapOptions GMO from bokeh.io import output_file from bokeh.io import show first, will create file saving model OF("glyphs.html") here, will configure Google latitude 27.2046 longitude 77.4977 map_type1 "satellite" zoom1 google_map_options1 GMO(lat latitude, lng longitude, map_type map_type1, zoom zoom1) Here, will generate Google google_api_key title1 "BIJNOR" google_map1 GM(google_api_key, google_map_options1, title title1) Here, will define coordinates glyphs source1 CDS( data dict(latitude [27.00, 27.10, 27.15, 27.20, 27.25, 27.30, 27.35], longitude [77.30, 77.35, 77.40, 77.45, 77.50, 77.55, 77.60])) here, will generate glyphs over Google "longitude" "latitude" size1 fill_color1 "red" fill_alpha1 google_map1.square(x size size1, fill_color fill_color1, fill_alpha fill_alpha1, source source1) last, will display model show(google_map1) Output: Conclusion this tutorial, have discussed plot glyphs over Google using Bokeh library Python. Next TopicHow Plot Chart using Bokeh Library Python prev next