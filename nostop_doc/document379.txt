next prev Generate Code using Python Understanding Code code machine-readable barcode designed two-dimensional pixelated form. code used store range data. code abbreviated Quick Response. code invented year 1994 Masahiro Hara, Japanese engineer from Automobile Manufacturer Denso Wave, order track movement parts. popularity code increased later 2010s with improvement optical proficiencies Mobile Phones their extensive acceptance. moment, codes being utilized wide range applications such making online payments, checking hotel menus, sharing Wi-Fi passwords, obtaining cost other information products, more. codes have become famous that every smartphone comes with built-in code reader. following tutorial, will learn generate read code using Python programming language. let's started. Generating Code using Python Python programming language that provides different modules packages that allow generate code. this tutorial, will working with qrcode package order generate code. However, order start working with package, have install Installing Python qrcode package install qrcode package with help installer using following command: Syntax: install qrcode package will installed system version Python pip. Verifying Installation order check whether package been installed system properly not, importing package execute program. Once installation complete, create Python file type following syntax Example: importing required module import qrcode Now, save file file using following command command prompt. Syntax: python <file-name>.py program runs without raising import error, module installed properly. Else recommended reinstall package refer official documentation. Now, understand start working with qrcode library. Generating Simple Code generate simple code using make function qrcode pass data parameter. consider following example that produces code that reads "Welcome Javatpoint". Example: importing qrcode library import qrcode generating code using make() function qr_img qrcode.make("Welcome Javatpoint.") saving image file qr_img.save("qr-img.jpg") Output: Explanation: above snippet code, have imported qrcode library defined variable that uses make() function qrcode library generate code. have then saved code using save() function directory. smartphone order read above code. Caution: smartphone read random codes because they contain malicious code/links. Generating Advanced Code programmers customize code using QRCode object which consists parameters shown following table: S.No. Parameter Description version There forty (40) versions code, which regulates size code. Version smallest, whereas version largest. Version will generate 21x21 matrix code. error_correction This parameter used control Error Correction utilized code. This varies from correction errors below: ERROR_CORRECT_L: ERROR_CORRECT_M: ERROR_CORRECT_Q: ERROR_CORRECT_H: box_size This parameter used regulate number pixels individual block code. border This parameter used control thickness border. default border pixels thick. following functions QRCode object order create code. S.No. Functions Description add_data() pass content code parameter this function. make() case where sure about which version code utilize, automatically version Setting version argument None, Setting argument make() function True. make_image() This function used generate code. also order fill color background color code with help fill_color back_color parameters. consider following example order generate code which points towards Python tutorial. Example: importing qrcode module import qrcode creating QRCode object obj_qr qrcode.QRCode( version error_correction qrcode.constants.ERROR_CORRECT_L, box_size border using add_data() function obj_qr.add_data("https://www.javatpoint.com/python-tutorial") using make() function obj_qr.make(fit True) using make_image() function qr_img obj_qr.make_image(fill_color "cyan", back_color "black") saving code image qr_img.save("qr-img1.png") Output: Explanation: above snippet code, have imported qrcode library. have then created instance QRCode class qrcode library. have used different parameters order customize code. have then used add_data() function include information code. have also used make() make_image() functions generate code image. last, have saved image file directory using save() function. read Code? will utilize OpenCV library order read code. package installed system, following command order install using installer: Syntax: install Once installation done, head onto decoding section code. order decode code, will using detectAndDecode function QRCodeDetector object OpenCV. consider snippet code same. Example: importing OpenCV library import reading image qr_img cv2.imread("qr-img1.png") using QRCodeDetector() function qr_det cv2.QRCodeDetector() using detectAndDecode() function val, pts, st_code qr_det.detectAndDecode(qr_img) printing value print("Information:", val) Output: Information: https://www.javatpoint.com/python-tutorial Explanation: above snippet code, have imported library. have then used imread() function read image from directory QRCodeDectector() function detect code image. have then used detectAndDecode() function printed value users. result, detectAndDecode function returns content code, coordinates corners box, binarized code. Next TopicBest Python Library prev next