next prev Difference between Yield Return Python Python Yield statement generators defined using yield statement Python. Generally, converts normal Python function into generator. yield statement hauls function returns back value function caller restart from where left off. yield statement called multiple times. While return statement ends execution function returns value back caller. function returns nothing without Python generators, yield function used replacing return function that sends back value user without ruining local variables. What Generator? Python generators used method generating iterators. Generators have automatically handled task. generator defined special function that returns object generator caller. simple words, generator referred function that returns iterator that iterate upon. Python, very easy create generator uses yield statement instead return statement. Example Python Code using yield statement myfunction(a, yield yield yield yield generator runs with loop getting values value myfunction(49,45): print(value) Output: 2205 1.08 Example Python code using yield statement printoutput(String) String: "a": yield string initialization String "Tutorial examples" print ("The number string String String.strip() printoutput(String): print (ans) Output: number string Python Return Statement return statement generally used execution ending returns value back caller. return statement return types values returns nothing when there expression passed return statement. There multiple return statements function only single statement called specified invocation function. return statement placed block function returning final output execution statements inside function. Also, seen earlier block function stopping execution consequent statements block. execution program caller quickly restarted with return statement. returns none when value specified. Example Python code #demonstrating return statement myfunc(a, return(add, sub, mul, div) Getting return value printing output output myfunc(49,45) print("Addition: output[0]) print("Subtraction: output[0]) print("Multiplication: output[0]) print("Division: output[0]) Output: Addition: Subtraction: Multiplication: 2205 Division: 1.08 Example Python code #demonstrating return statement class check: __init__(self): self.str "Tutorial examples" self.x "Kaushal" Object test will returned this function fun(): return check() Driver code checking above method fun() print(t.str) print(t.x) Output: Tutorial examples Kaushal Difference between yield return Statement Yield Statement Return Statement Yield returns generator object. Returns results caller. multiple times. runs only single time. Code executed next function call after yield statement. Code will executed after return statement. This statement resume from where left paused. function call this statement only runs function from beginning. yield statement hauls function returns back value function caller. return statement takes exit from execution returns value back caller. Conclusion above article, have seen differences return yield statements. Also, have understood concepts both statements know them Python programs. Next TopicGraphene Python prev next