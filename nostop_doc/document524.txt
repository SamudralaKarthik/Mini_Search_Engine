next prev Write Python Program Check List Contains Duplicate Element this tutorial, will learn verify list consists duplicate elements not. basic list program that asked coding interview. will solve this problem using various methods. Let's problem statement. Problem Statement integer array list1 given, return true value appears least twice list, return false every element distinct. Example Input: list Output: true Example Input: list Output: false Let's understand following solutions. Approach Using set() function Example class Solution: duplicate(self, list1): new_value set(list1) len(new_value) len(list1): return 'false' else: return 'true' nums Solution() print(obj.duplicate(nums)) Output: true Explanation above code, have defined class named Solution duplicate() function inside duplicate() function takes argument list. First, have type casted given list into set. know that doesn't contain remove duplicate values. Then checked length new_value list1. length new_value list1 equal, means there duplicate elements list return false, otherwise true. Approach Check Duplicate Element after Sorting this method, first, will sort given list (which will takes 0(N(LogN)), will loop check consecutive elements find they duplicates. Using this method, time complexity will improve 0(N(LogN)) still using 0(1) constant space. Let's below code implementation Example class Solution: solution(self, list1): list1.sort() range(1, len(list1)): range(0, list1[i] list1[i-1]: return 'true' return 'false' Solution() list1 print(obj.solution(list1)) Output: true Explanation above code, have sorted given list using built-in sort() method which will place duplicate values corresponding each other exist. Then first loop store index value second loop compare corresponding values. first iteration, value inner loop will executed times. value list[i] value list[i-1] Hence there duplicated elements have returned 'true'. Approach Using Brute-force Method this approach, simple loops matches values with each other. duplicate elements found return true otherwise false. This brute-force method time complexity O(n2) cost constant space. Let's understand following code implementation Example class Solution: solution(self, list1): range(len(list1)): range(0, list1[i] list1[j]: return 'true' return 'false' Solution() list1 print(obj.solution(list1)) Output: true Explanation have visited each value above code compared them value matched returned true. Conclusion have covered three approaches solve given problem. also solve using other method test code with multiple test cases. Next TopicWrite Python Program Search Element Sorted Array prev next