next prev Write Python Program Combine Dictionary Values Common Keys This tutorial will write Python program combine dictionaries with common keys. Dictionary Python data structure that stores data key-value pair. Each should immutable unique dictionary. Let's understand above problem statement. Problem Statement need merge given dictionary create dictionaries based common keys. Let's following example. Example dict1 {'a': 100, 'b': 200, 'c':300} dict2 {'a': 300, 'b': 200, 'd':400} Sample output: Counter({'a': 400, 'b': 400, 'd': 400, 'c': 300}) Let's understand following solutions. Solution will solve this problem using Counter Module. Let's following code. Example from collections import Counter dict1 {'a': 100, 'b': 200, 'c':300} dict2 {'a': 300, 'b': 200, 'd':400} new_dict Counter(dict1) Counter(dict2) print("The dict is:", new_dict) Output: dict Counter({'a': 400, 'b': 400, 'd': 400, 'c': 300}) Explanation have imported Counter function from collections module above code. Then, assigned dictionaries called Counter() function dict1 dict2. This method finds common keys sums their values. dict1, value 100, dict2, value 200. Counter() method added both values returned value 400. Hence created dictionary. Example dict1 {'a': 100, 'b': 200, 'c':300} dict2 {'a': 300, 'b': 200, 'd':400} new_dict dict2 dict1.items(): dict2: new_dict[i] dict2[i] else: new_dict[i] print("The dict is:", new_dict) Output: dict {'a': 400, 'b': 400, 'd': 400, 'c': 300} Explanation above code, initialized dictionaries dict2 new_dict. Then, loop using items() method dict2. Then, checked exists dict1; true, then with value dict1; else assign new_dict. Example dict1 {'a': 100, 'b': 200, 'c':300} dict2 {'a': 300, 'b': 200, 'd':400} dict3= dict3.update(dict1) dict3.update(dict2) dict1.items(): dict2.items(): ==x: dict3[i] j+y print(dict3) Output: {'a': 400, 'b': 400, 'c': 300, 'd': 400} Example dict1 {'a': 100, 'b': 200, 'c':300} dict2 {'a': 300, 'b': 200, 'd':400} dict3= dict3.update(dict1) dict3.update(dict2) dict2.keys(): dict1[x]=dict1[x]+dict2[x] dict2.pop(x) (dict1,dict2): dict3.update(d) print(dict3) Output: {'a': 400, 'b': 400, 'c': 300, 'd': 400} Conclusion This programming question asked technical interview round. This tutorial included solution problem along with explanation. Next TopicApache Airflow Python Airflow Python Operator prev next