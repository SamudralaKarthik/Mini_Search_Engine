next prev Convert string dictionary Python have worked different problems based strings dictionaries. this tutorial, will convert string dictionary Python. Before that, let's have quick recall strings dictionaries. Strings defined sequence characters denoted using single double inverted commas. example- flower 'Rose' 'Python' name 'James' check data type above variables using type(). Dictionaries defined data structure Python that uses key-value pairs which enclosed curly braces. access values present dictionary with help respective keys. example dictionary Subj {'subj1': 'Computer Science', 'subj2': 'Physics', 'subj3': 'Chemistry', 'subj4': 'Mathematics'} let's list methods that convert string dictionary. Using loads() Using literal_eval() Using Generator Expressions It's time discuss each them detail- Using json.loads() following program shows convert string dictionary using json.loads() #using json() import json #initialising string string_1 '{"subj1":"Computer Science","subj2":"Physics","subj3":"Chemistry","subj4":"Mathematics"}' print("String_1 ",string_1) #using json.loads() res_dict=json.loads(string_1) #printing converted dictionary print("The resultant dictionary ",res_dict) Output: String_1 {"subj1":"Computer Science","subj2":"Physics","subj3":"Chemistry","subj4":"Mathematics"} resultant dictionary {'subj1': 'Computer Science', 'subj2': 'Physics', 'subj3': 'Chemistry', 'subj4': 'Mathematics'} Explanation: Let's understand what have done above program- first step, have imported json module. After this, have initialized string that would like convert. have simply passed 'string_1' parameter loads(). Finally, last step, have displayed resultant dictionary. Using ast.literal_eval() will ast.literal_eval help meet objective. following program illustrates same- #convert string dictionary #using ast() import #initialising string string_1 '{"subj1":"Computer Science","subj2":"Physics","subj3":"Chemistry","subj4":"Mathematics"}' print("String_1 ",string_1) #using ast.literal_eval res_dict=ast.literal_eval(string_1) #printing converted dictionary print("The resultant dictionary ",res_dict) Output: String_1 {"subj1":"Computer Science","subj2":"Physics","subj3":"Chemistry","subj4":"Mathematics"} resultant dictionary {'subj1': 'Computer Science', 'subj2': 'Physics', 'subj3': 'Chemistry', 'subj4': 'Mathematics'} Explanation: Let's understand what have done above program- first step, have imported module. After this, have initialized string that would like convert. have simply passed 'string_1' parameter literal_eval(). Finally, last step, have displayed resultant dictionary. Using Generator Expressions Finally, last example will discuss generator expressions used. Let's study given program carefully. #convert string dictionary #using generator expressions #initialising string string_1 "subj1 subj2 subj3 subj4 14" print("String_1 ",string_1) #using strip() split() res_dict dict((a.strip(), int(b.strip())) (element.split('-') element string_1.split(', '))) #printing converted dictionary print("The resultant dictionary res_dict) print(type(res_dict)) Output: String_1 subj1 subj2 subj3 subj4 resultant dictionary {'subj1': 'subj2': 'subj3': 'subj4': <class 'dict'> It's time check explanation this approach- first step, have declared string that values paired with hyphen, each pair separated with comma. This information important since will great tool obtaining desired output. Further, have used strip() split() loop that dictionary usual format. Finally, have printed dictionary created verified type using type(). Conclusion this tutorial, explored conversion methods string dictionary. Next TopicConvert string JSON Python prev next