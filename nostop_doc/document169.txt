next prev Python Frameworks| Python Framework List this tutorial, will discuss Python's various important frameworks their essential features. know, Python highly demanded effective programming language, contains vast libraries frameworks which almost every technical domain. frameworks provide easiness while developing application software) developers. They offer automatic implementation redundant tasks, reduce development time, focus significantly application logic rather than common element. Python comes with many frameworks, each framework advantages disadvantages. need analyze project requirements choose appropriate frameworks. will discuss following Python frameworks. Bottle CherryPy AIOHTTP Dash Falcon Flask Giotto Django Growler Uvloop Sanic MorePath Picnic Pylons Framework Pyramid TurboGears Web2py CubicWeb There mainly three types Python frameworks, full-stack, micro-framework, asynchronous. Before explaining each framework detail, let's briefly introduce various kinds Python frameworks. Types Python Frameworks There primarily three types frameworks follows. Full-Stack framework These frameworks have development requirements such form generators, form validation, template layouts. These core features typical full-stack Framework. Microframework Micro frameworks require lots code additional requirements manually. This kind framework doesn't provide data abstraction layer's facility, form validation, specific tools libraries. Asynchronous Framework Asynchronous frameworks gaining popularity recently allows handling large concurrent connections. uses asyncio library process concurrently. Let's following Python frameworks. Best Python Frameworks Below list Python frameworks. Bottle microframework that creates single source file every developed application using This framework primarily focuses developing APIs, finest Python web-framework. Bottle doesn't require other dependencies create small applications. allows developer work closely with hardware, most suited framework make small apps simplistic person-use apps. features Bottle built-in HTTP server. comes with plugins support different databases. offers request-dispatching route. access party template engine WSGI/HTTP servers. CherryPy CherryPy open-source, object-oriented micro-framework. follows minimalistic approach. This oldest Python frameworks that were introduced 2002. don't need install apache server cherryPy. This framework allows technology data access, templating Cetera. features CherryPy CherryPy application runs Android. flexible built-in system. provides robust configuration system. offers inbuilt support coverage, profiling, testing. Offers simplicity running multiple HTTP servers simultaneously. AIOHTTP Asynchronous framework that depends intensely Python 3.5+ features, such async await. Python asyncio library plays vital role functioning this framework. Being server framework, AIOHTTP also serve client framework. redirect queries using request object router. features AIOHTTP Pluggable routing. provides facility build view effectively. Signals. supports both server WebSockets client WebSockets without callback hell. gives middleware supports. Dash Python-based micro framework used develop analytical applications popular among data scientists. suitable those data scientists aren't much into development mechanics. Dash's application also webserver such Flask communication with JSON packets HTTP requests. ReactJS used rendering frontend. extend capabilities Dash using Flask plugins. Applications developed using Dash rendered browser deployed server. These applications cross-platform mobile ready. Let's features Dash framework. features Dash There extensive plugin support. works routine (Dash Development Server). supports high degree customization. handle errors effectively. LDAP integration (Dash Development server). Less code needed creating Dash apps. Falcon micro-framework used building APIs, another widely used Python framework. requires many dependencies building HTTP APIs allows developer create cleaner design that permits HTTP REST architecture. Falcon widely used organizations like LinkedIn, OpenStack, RackSpace. handle more requests with same hardware than contemporaries. This framework focuses having 100% code coverage. features Falcon Upfront exception handling provide extra speed with Cython support. highly-optimized code base also extensible. Unit testing WSGI helper mocks. request responsive classes provide easy access headers bodies. Native HTTP error responses. Flask Flask another popular Python micro-framework that comes under license. Sinatra Ruby framework inspires This framework requires Jinja2 templates Werzeug WSGI toolkit. lightweight modular design. Flask readily adaptable. Using Flask, developers build solid application foundation from where possible extension required. also compatible with Google Engine. features Flask provides built-in support. supports jinja2 templating. Unicode-based. HTTP request handling. built-in fast debugger. helps plugging ORM. supports secure cookies establish client-side sessions. Giotto full-stack framework based Model View Controller (MVC). Giotto application framework separates Model, View, controller elements order. provides some essential characteristics such automatic routing Jinja2 HTML templates with accessible RESTful interface. also comes with controller module that offers developers platform create apps using command line Internet Relay charts (IRC). Features Giotto facility automatic routing. Functional crud patterns. There multiple pluggable controllers. Generic model views. Obtainability Jinja2 HTML templates. Tremendously succinct code. Database support with SQLAlchemy. Django Django full-stack Python framework. most famous beloved framework developing rich applications. gaining popularity bypassing time. ended being development frameworks 2021. focuses (Don'tRepeat Yourself) principle. Django offers several built-in libraries excellent features that available free use. Django makes mapping objects database tables. offers database support well provides easiness migrate from database another. However, inherent support MySQL, PostgreSQL, SQLite, Oracle database. also other database using third-party drivers. Features Django much secure compare other frameworks. routing. Template engine. Database schema migration. Authentication support. (Object Relation Model). plethora ready-to-use libraries. Growler Asynchronous framework built upon asyncio; inspired Node Express/Connect frameworks. this framework, request handled framework itself, dealt with passing through middleware technology. best-fitted framework implement complex applications more straightforwardly. Features Growler Support multitude open-source packages. decorator writing clean, reusable code. uses decorators reduce complexity code, write reusable code. There ziapp module that allows zipping entire application into single executable file. Uvloop meant superfast Python frameworks available amongst rest frameworks, cannot ignore that fact. considered substitute asyncio event loop; hence, either used asyncio-based application replace asyncio existing application. Some developers claim Uvloop twice fast Node events, Python asynchronous framework. Features Uvloop Lighting fast speed Replacement asyncio event loop. Sanic Sanic framework built loop. provides best features, i.e., offers fast HTTP responses asynchronous request handling. provides non-blocking capabilities that improve speed. Moreover, supports request handlers compares them with Python await/async functions. Features Sonic Class-based views. Plugging support Capable reading writing cookies. allows various types logging like error logs access logs. Availability handlers with easy apply decorators support. MorePath MorePath Python WSGI framework, primarily focused executing more numbers cases. Moreover, takes responsibility Answer Application Programming (ASAP). also includes standard Python data structure induced into RESTful Services. provides outstanding feature that automatically converts defined paths framework into links creating apps with cleanest URLs. features Morepath provides simple, flexible, robust permissions. Creating generic user interface simple sub-classing. views generic, Reuse views views. offers necessary tools develop RESTful services. extensible with simple, coherent, universal extension overrides mechanism. Picnic object-oriented microframework used develop JSON-based APIs. This framework optimized JSON-based APIs, which hold position among best Python frameworks because creates fastest APIs. Features Picnic gives support cookies. Handling routing. built-in error handling. capable handling JSON-based requests. Pylons Framework Pylons framework Full-stack, open-source framework that aims rapid development applications. This framework includes some best elements properties Perl, Python, Ruby. available maintenance mode, though many developers still Pylons framework because provides highly flexible development structure. promotes reusability makes WSGI (Web Server Gateway Interface). Features Pylons Routes. dispatches URLs. mapping based Routes configuration WebHelpers. provides HTML form validation generation. Pyramid Pyramid open-source full-stack framework that aims reduce much complexity. best advantages Pyramid that work equally well with small large-scale applications. Pyramid updates regularly developers runs Python current version Pyramids 1.10, tenth update since 2010. Features Pyramid Generation Single-file applications flexible authentication authorization. View predicates many per-route views. Renders. Predicates. Templating asset specification. Function Decorators. TurboGears TurboGears full-stack, open-source, data-driven application Python framework. allows developers develop rapid data-driven applications. TurboGears comes with intelligible Templating supports flexible powerful ORM. This framework uses components such Genshi, Repoze, SQLAlchemy, webOp develop quickly develops apps demanding database connectivity. features TurboGears features TurboGears implemented function decorators. Available command-line tools. Multi-database support. MVC-style architecture. uses pylons server. PasteScript templates. Validation support with Form Encode. Web2Py Web2Py framework open-source scalable Python framework that allows users develop applications quickly smoothly. platform-independent, which means supports popular operating systems. Furthermore, this framework provides facility simplify application development process through web-based interface, server, database. features web2py consistent API. Follow pattern. Role-based access control. Devoid installation configuration requirements. provides support internationalization. Backward compatibility. Readability multiple protocols. hosting platform that offers support either Python Java Python. This microframework used develop build APIs. consumes resources when required uses Cython compilation this framework allows complete application development very easily quickly. features Support automatic documentation. Built-in version management. Follows principle "once implemented, anywhere". CubicWeb Cubic full stack framework developed curated Logilab, free-to-use, semantic, open-source, sematic, open-source, Python-based framework. Cubic based data model, required have same defined order develop function application. Cubic uses cube where other application uses separate views models. features Cubic Support multiple databases. Security. Reusable Components. Simplifies data-related queries with RQL. OWL (Web Ontology Language). Conclusion this tutorial, have mentioned essential python frameworks that belong various categories. This framework meet business requirements effectively. have covered almost every import Python frameworks their useful features. developer choose framework according project requirements. Next TopicHow create vector Python using NumPy prev next