Python Programming Python programming, will learn Python Script web; will learn Python file executed Script discuss configuration web-browser Python script CGI. Also, will learn following topics: What CGI? Browsing Configure Apache server Using Module Architecture Diagram Running First Python Program Legends syntaxes Debugging Python Script Functions Advantages Disadvantages Common Problems Solutions What CGI? word acronyms "Common Gateway Interface", which used define exchange information between server custom script. NCSA officially manages scripts. Common Gateway Interface standard external gateway programs interface with server, such HTTP Servers. simple words, collection methods used dynamic interaction between server, client application. When client sends request webserver, programs execute that particular request send back result webserver. users submit information browser using HTML <form> <isindex> element. There server's special directory called cgi-bin, where script generally stored. When client makes request, server adds additional information request. This additional information hostname client, query string, requested URL, webserver executes sends output browser other client application). Sometimes server passes data query string that part URL. query string conventionally hierarchical path structure such following link. https://www.google.com/search?q=wikipedia&oq=wiki&aqs=chrome.1.69i57j0l6j5.3046j0j7&sourceid=chrome&ie=UTF-8 Python provides module, which helps debug script also support uploading files through HTML form. here question arises what does Python script output look like? HTTPs server gives back output sections separated blank line. first section grasps number headers, notifying client what kind data following. Let's understand following example generate minimal header section Python programming. Example HTML following print("Content-Type: text/html") blank line, headers print() above example, first statement says that, server that html code follows; second blank line indicates header ended here. Let's understand following example generating minimal header section Python programming. Example print("<title> This script output</title>") print("<h1>This first script</h1>") print("Hello, JavaTpoint!") Browsing Before understanding concepts, should know internal process page when click given link. client (web browser) communicates with HTTP server asks i.e., filename. browser finds that requested file, then sends back client (web browser), otherwise sends error message client error file. Here responsibility browser display either received file error message. However, HTTP server that whenever user requests particular dictionary, then should sent client; instead, executed program whatever result sent back client display. This process called Common Gateway Interface programs called scripts. write programs Python Script, PERL, Script, Shell Script, C++, programs, etc. Configure Apache server need configure Apache server order script server. Architecture Using module Python provides module, which consists many useful built-in functions. them importing module. import Now, write further script. import cgitb.enable() above script will stimulate exception handler show detailed report browser occurred errors. also save report using following script. import cgitb cgitb.enable(display=0, logdir="/path/to/logdir") above feature module helpful during script development. These reports help debug script effectively. When expected output, remove this. Previously, have discussed users save information using form. that information? Python provides FieldStorage class. apply encoding keyword parameter document form contains non-ASCII character. will find content <META> <HEAD> section HTML document. FieldStorage class reads form information from standard input environment. FieldStorage instance same Python dictionary. len() dictionary function FieldStorage instance. overlooks fields with empty string values. also consider empty values using optional keyword parameter keep_blank_values setting True. Example form cgi.FieldStorage() ("name" form "addr" form): print("<H1>Error</H1>") print("Please enter information name address fields.") return print("<p>name:", form["name"].value) print("<p>addr:", form["addr"].value) #Next lines code will execute here... above example, have used form ["name"], here name key. This used extract value which entered user. getvalue() method fetch string value directly. This function also takes optional second argument default. present, returns default value. submitted form data have more than field with same name, should form.getlist() function. returns list strings. Look following code, number username field, which separated commas. value1 form.getlist("username") usernames1 ",".join(value) field uploaded file, then accessed value attribute getvalue() method read that uploaded file bytes. Let's understand following code user upload file. Example file_item form["userfile"] (fileitem.file): represent uploaded file; counting lines count_line while(True): line fileitem.file.readline() line: break count_line count_line Sometimes error interrupt program while reading content uploaded file (When user clicks Cancel Button Back Button). FieldStorage class provides done attribute value submit form "old" format, item will instances class MiniFieldStorage. this class, list, file, filename attributes always None. Generally, form submitted POST contains query string with both FieldStorage MiniStorage items. Here, defining FieldStorage attribute following table. Attributes Description Name represents field name. Filename represents Client side filename. File file(-like) object from which read data bytes. Value string type value. file uploads, reads file returns bytes. Type used display content-type. Header dictionary type object which contains headers. FieldStorage instance uses many built-in methods manipulate users' data. Below FieldStorage's methods. FieldStorage Methods: Methods Description getfirst() returns first value received. getlist() returns list received values. getvalue() dictionary get() method. keys() dictionary keys() method make_file() returns readable writable file. Running First Python File this section, will discuss program over server. Before doing this, must ensure that system following configuration- Apache Server Python already have XAMPP server your system then skip this part. Installing XAMPP server XAMPP stands cross-platform, Apache, MySQL, PHP, Perl, provides localhost server test deploy websites. Generally, gives essential components installation, first Apache that creates local server MySQL, which database. Follow below steps install xampp. Step Visit official website (https://www.apachefriends.org/download.html) download latest version. Step Once download complete, click button. Step Now, Click Next Button. Step Next, will display xampp components. remove some these will install components xampp, won't affect application. Step Now, ready install, start installation clicking Next button. will take away webserver start installing packages files. Step Here, download completed. Select your desire language, then, will display following dashboard xampp. Python Installation install Python, visit Python installation guide (https://www.javatpoint.com/how-to-install-python). First Program have created folder called example xampp's htdocs folder. Then, write Python script, which includes HTML tags. Let's following directory structure demo.py file. demo.py #C:\Users\DEVANSH SHARMA\AppData\Local\Programs\Python\Python37 print ("Content-Type text/html\r\n\r\n") then come rest hyper-text documents print ("<html>") print ("<head>") print ("<title>My First CGI-Program </title>") print ("<head>") print ("<body>") print <h1>This script </h1> print ("</body>") print ("</html>") And, directory structure follow. Type localhost/example/demo.py into browser. will display following output. Note need start Apache server then execute script. script demo.py will host 127.0.0.1 default. Let's understand another example script. Example #!/usr/bin/python3 Importing 'cgi' module import print("Content-type: text/htmlrnrn") print("<html><body>") print(" <h1> Hello Program! </h1> Using inbuilt methods form cgi.FieldStorage() form.getvalue("name") name form.getvalue("name") print(" <h1>Hello" +name+"! Thanks using script!</h1> form.getvalue("happy") print(" Yayy! happy too! form.getvalue("sad") #!/usr/bin/python3 Importing 'cgi' module import print("Content-type: text/htmlrnrn") print("<html><body>") print(" <h1> Hello Program! </h1> Using inbuilt methods form cgi.FieldStorage() form.getvalue("name") name form.getvalue("name") print(" <h1>Hello" +name+"! Thanks using script!</h1> form.getvalue("happy") print(" Yayy! happy too! form.getvalue("sad") print(" Oh no! sad? Using HTML input forms method print(" <form method='post' action='demo2.py'> print(" Name: <input type='text' name='name' print("<input type='checkbox' name='happy' Happy") print("<input type='checkbox' name='sad' Sad") print("<input type='submit' value='Submit' />") print("</form") print("</body></html>") Structure Python Program Let's understand following structure program. script must contain sections which separated blank line. header must first section, second section will contain kind data that will used during execution script. Legend Syntaxes When scripting program Python, take note following commonly used syntaxes. HTML Header above program, line Content-type:text/html\r\n\r\n portion HTTP, which will programs. HTTP Field Name: Field Content Example Content-type: text/html\r\n\r\n Header Description Content-type MIME string that used define format file being returned. Expires: Date displays valid date information. Location: that returned server. Last-modified: Date displays date last modification resource. Content-length: This information used report estimated download time file. Set-Cookies: String used cookies using string. Environment Variables should remember following environment variable along with HTML syntax. Let's understand commonly used environment variables. CONTENT_TYPE describes data type content. CONTENT_LENGHT defines length query information. HTTP_COOKIE used return cookie, which user current scenario. HTTP_USER_AGENT This variable used display type browser that user currently using. REMOTE_HOST used describe path scripts. PATH_INFO This variable used define path script. REMOTE_ADDR define address visitor using REQUEST_METHOD used make request either POST GET. Functions Python Programming module provides many functions work with cgi. defining important functions follows. parse(fp None, environ os.environ, keep_blanks_values False, strict_parsing False) used parse query environment. also parse using file, default which sys.stdin. parse_qs(qs, keep_blank_values False, strict _parsing False) While this denigrated, Python uses urllib.parse.parse_qs() instead. parse_qsl(qs, keep_blank_value False, strict_parsing False) This also denigrated, maintains backward-compatibility. parse_multipart(fb, pdict) used parse input type multipart/form-data file uploads. first argument input file, second argument dictionary holding other parameters content-type header. parse_header(string) used parse header. permits MIME header into main value dictionary parameters. test() used test script, program. will generally write minimal HTTP headers. print_form(form) formats form HTML. print_directory() formats current directory HTML. escape(s, quote False) escape() function used convert characters '<', '>', string's HTML safe sequence. Debugging Scripts First, need check trivial installation error. Most time, error occurs during installation script. beginning, must follow installation instructions installing copy this module file cgi.py script. Next, test() function from script. Type following code with single statement. cgi.test() Advantages Programming There various advantages using programming. Below some advantages. They language independent. programs with programming languages. programs work almost server portable. They portable. programs perform both simple complex tasks; means they fairly scalable. CGIs increase dynamic communication applications. CGIs also profitable, them development; they reduce development costs maintenance costs. CGIs takes less time process requests. Disadvantages Consider following disadvantages CGI. programs complex hard debug. When initiate program, interpreter evaluate script each initiation. result creates traffic because many requests from side client-server. programs quite vulnerable, most them free easily available without server security. uses process time. During page load, data doesn't store cache memory. There huge extensive codebases, most Perl. Common Problems Solutions face problems during implement script server. have listed below common problems their solutions. First all, check installation instructions. Most problems occur during installation server. Follow installation guide properly. Check HTTP server's file. tail logfile separated window valuable. CGI, possible display progress report client's screen running requests. Most HTTP servers save output from script until script finished. Before executing file, check syntax error your script, following python script.py. script does have syntax error then import library such import cgitb; cgitb.enable() script. absolute path must included when importing external program. path usually very useful value script. When reading writing external files, make sure that they read written user under which your script will running. This authorized user where script file which server running some specified userid server. should remembered that script must set-uid won't work most systems, also security liability.