next prev Abstraction Python Abstraction used hide internal functionality function from users. users only interact with basic implementation function, inner working hidden. User familiar with that "what function does" they don't know "how does." simple words, smartphone very much familiar with functions such camera, voice-recorder, call-dialing, etc., don't know these operations happening background. Let's take another example When remote increase volume. don't know pressing increases volume TV. only know press button increase volume. That exactly abstraction that works object-oriented concept. Abstraction Important? Python, abstraction used hide irrelevant data/class order reduce complexity. also enhances application efficiency. Next, will learn achieve abstraction using Python program. Abstraction classes Python Python, abstraction achieved using abstract classes interfaces. class that consists more abstract method called abstract class. Abstract methods contain their implementation. Abstract class inherited subclass abstract method gets definition subclass. Abstraction classes meant blueprint other class. abstract class useful when designing large functions. abstract class also helpful provide standard interface different implementations components. Python provides module abstraction Python program. Let's following syntax. Syntax from import class ClassName(ABC): import class from module. Abstract Base Classes abstract base class common application program interface subclasses. used third-party, which will provide implementations such with plugins. also beneficial when work with large code-base hard remember classes. Working Abstract Classes Unlike other high-level language, Python doesn't provide abstract class itself. need import module, which provides base defining Abstract Base classes (ABC). works decorating methods base class abstract. registers concrete classes implementation abstract base. @abstractmethod decorator define abstract method don't provide definition method, automatically becomes abstract method. Let's understand following example. Example Python program demonstrate abstract base class work from import ABC, abstractmethod class Car(ABC): 	def mileage(self): 		pass class Tesla(Car): 	def mileage(self): 		print("The mileage 30kmph") class Suzuki(Car): 	def mileage(self): 		print("The mileage 25kmph class Duster(Car): mileage(self): print("The mileage 24kmph class Renault(Car): mileage(self): print("The mileage 27kmph Driver code t= Tesla t.mileage() Renault() r.mileage() Suzuki() s.mileage() Duster() d.mileage() Output: mileage 30kmph mileage 27kmph mileage 25kmph mileage 24kmph Explanation above code, have imported module create abstract base class. created class that inherited class defined abstract method named mileage(). have then inherited base class from three different subclasses implemented abstract method differently. created objects call abstract method. Let's understand another example. Let's understand another example. Example Python program define abstract class from import class Polygon(ABC): abstract method sides(self): pass class Triangle(Polygon): sides(self): print("Triangle sides") class Pentagon(Polygon): sides(self): print("Pentagon sides") class Hexagon(Polygon): sides(self): print("Hexagon sides") class square(Polygon): sides(self): print("I have sides") Driver code Triangle() t.sides() square() s.sides() Pentagon() p.sides() Hexagon() K.sides() Output: Triangle sides Square sides Pentagon sides Hexagon sides Explanation above code, have defined abstract base class named Polygon also defined abstract method. This base class inherited various subclasses. implemented abstract method each subclass. created object subclasses invoke sides() method. hidden implementations sides() method inside each subclass comes into play. abstract method sides() method, defined abstract class, never invoked. Points Remember Below points which should remember about abstract base class Python. Abstract class contain both method normal abstract method. Abstract cannot instantiated; cannot create objects abstract class. Abstraction essential hide core functionality from users. have covered basic concepts Abstraction Python. Next TopicPython MySQL Environment Setup prev next