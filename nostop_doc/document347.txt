next prev Python Glob Module Python, have many in-built modules performing various tasks, such tasks want perform with Python modules finding locating files present system, which follows similar pattern. This similar pattern file extension, file name's prefix, similarity between many files. have many different Python modules with which easily perform this task using Python program, modules efficient others. this tutorial, going learn about such efficient modules, i.e., glob module Python, with which perform file matching with specific pattern using inside program. will learn detail about glob module Python, inside program, what features application this module. Glob Module Python With help Python glob module, search path names which looking files matching specific pattern (which defined us). specified pattern file matching defined according rules dictated Unix shell. result obtained following these rules specific pattern file matching returned arbitrary order output program. While using file matching pattern, have fulfil some requirements glob module because module travel through list files some location local disk. module will mostly through those lists files disk that follow specific pattern only. Pattern Matching Functions Python, have several functions which list down files that match with specific pattern which have defined inside function program. With help these functions, result list files which will match given pattern specified folder arbitrary order output. will discuss following such functions this section: fnmatch() scandir() path.expandvars() path.expanduser() first functions present above-given list, i.e., fnmatch.fnmatch() os.scandir() function, actually used perform pattern matching task invoking sub-shell Python. These functions perform pattern matching task list filenames that arbitrary order. Here catch that glob module treats special cases files which names begin with which very unlikely fnmatch.fnmatch() function. last functions given list, i.e., os.path.expandvars() os.path.expanduser() function used shell tilde variable expansion filename pattern-matching task. Rules Pattern thinks that define pattern perform pattern matching filename task, then clarify here that possible. can't define pattern pattern collect list files with same. have follow specific rules while defining pattern filename pattern matching functions glob module. this section, will discuss such rules which have keep mind adhere them while defining pattern filename pattern matching functions. will only discuss these rules briefly don't in-depth about them they primary focus this tutorial. Following rules pattern that define inside glob module's pattern matching functions: have follow standard rules UNIX path expansion pattern matching. path define inside pattern should either absolute relative, can't define unclear path inside pattern. special characters allowed inside pattern only wild-cards, i.e., '*, normal characters that expressed inside pattern expressed rules pattern glob module functions applied filename segment (which provided functions), stops path separator, i.e., '/' files. These some general rules patterns define inside glob module functions filename pattern matching tasks, have follow these rules order perform task successfully. Applications Glob Module have already discussed pattern matching very helpful when looking similar files disk. Here, will discuss applications glob module very helpful Following some listed applications Python glob module, this module given functions: Sometimes, want search file that certain prefix name, common string middle names many files have same certain extension. Now, perform this task, have write code that will scan whole directory then will produce result. Instead glob module going very helpful this case functions glob module perform this task very easily save time. Other than this, Glob module also very useful when programs have look list files given file system with names files matching similar pattern. Glob module easily perform this task that without opening result program other sub-shell. looking application glob module, that important this module where reduce complexity code save time. Glob Module Functions Now, will discuss various more functions glob module understand their working inside Python program. will also learn that these functions help pattern matching task. Look following list functions that have glob module, with help these functions, carry task filename pattern matching very smoothly: iglob() glob() escape() Now, will briefly discuss these functions then understand implementation these functions using them inside Python program. will each above- given functions example program list file names following similar pattern (that will define function) output. iglob() Function: iglob() function glob module very helpful yielding arbitrary values list files output. create Python generator with iglob() method. Python generator created glob module list down files under given directory. This function also returns iterator when called, iterator returned yields values (list files) without storing filenames simultaneously. Syntax: Following syntax using iglob() function glob module inside Python program: iglob(pathname, recursive=False) syntax iglob() function, takes total three parameters which defined given below: pathname: pathname parameter optional parameter function, even leave while working file directory that same where Python installed. have define pathname from where have collect list files that following similar pattern (which also defined inside function). (ii) recursive: also optional parameter iglob() function, takes only bool values (true false) recursive parameter used function following recursive approach finding file names not. (iii) '*': This mandatory parameter iglob() function here have define pattern which iglob() function will collect file names list them down output. pattern define inside iglob() function (such extension file) pattern matching should start with symbol. Now, let's this iglob() function example program that understand implementation function better way. Example Look following Python program with implementation iglob() function: Import glob module program import glob Initialize variable inVar gb.iglob("*.py") Pattern iglob() function Returning class type variable print(type(inVar)) Printing list names files that matched pattern print("List files directory having extension .py: inVar: print(py) Output: <class 'generator'> List files directory having extension .py: adding.py changing.py code#1.py code#2.py code-3.py code-4.py code.py code37.py code_5.py code_6.py configuring.py Explanation: have first imported glob module that iglob() function program. After that, have initialized variable where used iglob() function, inside iglob() function, have defined pattern which function will perform filename pattern matching. pattern have defined iglob() function files with extension, i.e., "*.py". After that, have returned class type variable have initialized. After that, have used loop variable print list filenames that have matched iglob() function pattern have defined output, first program printed class type initialized variable, then printed list files with ".py" extension. glob() Function: With help glob() function, also list files that matching specific pattern have define that specific pattern inside function). list returned glob() function will string that should contain path specification according path have defined inside function. string iterator glob() function actually returns same value returned iglob() function without actually storing these values (filenames) Syntax: Following syntax using glob() function glob module inside Python program: glob(pathname, recursive True) syntax glob() function, also takes total three parameters like iglob() function. three parameters defined glob() function same those have read iglob() function above. Now, let's this glob() function example program that understand implementation function better way. Example Look following Python program with implementation glob() function: Import glob module program import glob Initialize variable genVar gb.glob("*.py") Pattern glob() function Printing list names files that matched pattern print("List files directory having extension .py: genVar: print(py) Output: List files directory having extension .py: adding.py changing.py code#1.py code#2.py code-3.py code-4.py code.py code37.py code_5.py code_6.py configuring.py above example program, have followed same logic have followed example with iglob() function. program returned list filenames that match pattern inside glob() function. escape() Function: escape() becomes very impactful allows escape given character sequence, which defined function. escape() function very handy locating files that having certain characters will define function) their file names. will match sequence matching arbitrary literal string file names with that special character them. Syntax: Following syntax using escape() function glob module inside Python program: escape(pathname) escape() should used with either glob() iglob() function that print list file names output result. Now, let's this escape() function example program that understand implementation function better way. Example Look following Python program with implementation escape() function: Import glob module program import glob Initialize variable charSeq "-_#" print("Following list filenames that match special character sequence escape function: Using nested loop filenames splChar charSeq: Pathname glob() function escSet gb.escape(splChar) ".py" Printing list filenames with glob() function (gb.glob(escSet)): print(py) Output: Following list filenames that match special character sequence escape function: code-3.py code-4.py code_5.py code_6.py code#1.py code#2.py Explanation: have first defined character sequence escape() sequence that escape() function will collect file names having that special character sequence have used nested loop such that first, have created pathname glob() function from escape() function. after that, have used pathname glob() function print list filenames matching special character sequence defined earlier. output, have filenames with special character sequences their names which defined program. Conclusion have used functions glob modules, i.e., glob(), escape() iglob() function, easily understand functionality glob module functions. With this, also depict that glob module very helpful performsing filename pattern matching task list files that following specific pattern. Next TopicWriting Python Module prev next