next prev Plot Python using Matplotlib What Plot? plot visualize distribution data using some vertical lines. known whisker plot. data distributed between five ranges, which follows: Minimum: Q1-1.5*IQR quartile (Q1): 25th percentile Median:50th percentile quartile(Q3):75th percentile Maximum: Q3+1.5*IQR Here represents InterQuartile Range which starts from first quartile (Q1) ends third quartile (Q3). Plot visualization plot, those points which range called outliers. create plot data determine following: number outliers dataset data skewed range data range data from minimum maximum called whisker limit. Python, will matplotlib module's pyplot module, which inbuilt function named boxplot() which create plot data set. Syntax: matplotlib.pyplot.boxplot(data,notch=none,vert=none,patch_artist,widths=none) boxplot() function, have attributes which used create more attractive amazing plot data set. data: data should array sequence arrays which will plotted. notch: This parameter accepts only Boolean values, either true false. vert: This attribute accepts Boolean value. true, then graph will vertical. Otherwise, will horizontal. position: accepts array integers which defines position box. widths: accepts array integers which defines width box. patch_artist: this parameter accepts Boolean values, either true false, this optional parameter. labels: This accepts strings which define labels each data point meanline: accepts boolean value, optional. order: sets order boxplot. bootstrap: accepts integer value, which specifies range notched boxplot. Example1: will create random data numpy array create plot. import matplotlib.pyplot import numpy np.random.seed(15) dataSet np.random.normal(100, 200) print(dataSet) figure plt.figure(figsize =(10, plt.boxplot(dataSet) plt.show() Output: Explanation: above code, first all, have imported numpy matplotlib libraries code. Then created random dataset plotted plot using boxplot() function. Example2: create multiple plots simultaneously same file. import matplotlib.pyplot import numpy np.random.seed(10) dataSet1 np.random.normal(100, 220) dataSet2 np.random.normal(80, 200) dataSet3 np.random.normal(60, 220) dataSet4 np.random.normal(50, 200) dataSet [dataSet1, dataSet2, dataSet3, dataSet4] figure plt.figure(figsize =(10, figure.add_axes([0, ax.boxplot(dataSet) plt.show() Output: Explanation: above code, have four data sets using random methods numpy. Then have created list four data sets this inside boxplot() function. Example some attributes boxplot() function customize plot. import matplotlib.pyplot import numpy np.random.seed(10) dataSet1 np.random.normal(100, 220) dataSet2 np.random.normal(80, 200) dataSet3 np.random.normal(60, 220) dataSet4 np.random.normal(50, 200) dataSet [dataSet1, dataSet2, dataSet3, dataSet4] figure plt.figure(figsize =(10, figure.add_subplot(111) ax.boxplot(dataSet, patch_artist True,notch ='True', vert colors ['#00FF00','#0F00FF', '#F00FF0','#FFFF0F'] patch, color zip(bp['boxes'], colors): 	patch.set_facecolor(color) whisker bp['whiskers']: 	whisker.set(color ='#8E008B',linewidth 1.4,linestyle =":") bp['caps']: 	cap.set(color ='#8E008B',linewidth 2.1) median bp['medians']: 	median.set(color ='blue',linewidth flier bp['fliers']: 	flier.set(marker ='D',color ='#d7298c',alpha 0.6)	 ax.set_yticklabels(['dataSet1', 'dataSet2','dataSet3', 'dataSet4']) plt.title("Customized plot using attributes") ax.get_xaxis().tick_bottom() ax.get_yaxis().tick_left()	 plt.show() Output: Explanation: above code, have created four datasets using random functions them list. have different colors each plot using list colors using function set_facecolor(). have line width each plot also labels each plot. have attribute vert =0, which means plots will horizontal mode. Next TopicBox-Cox Transformation Python prev next