next prev Nested Tuples Python nested tuple Python tuple that been placed inside another tuple. Let's have look following 8-element tuple. tuple (12, (200, 240, 100)) This last element, which consists three items enclosed parenthesis, known nested tuple since contained inside another tuple. name main tuple with index value, tuple[index], used obtain nested tuple, access each item nested tuple using tuple[index-1][index-2]. Example Nested Tuple Code Python program create nested tuple Creating nested tuple element only employee ((10, "Itika", 13000),) print(employee) Creating multiple-value nested tuple employee ((10, "Itika", 13000), (24, "Harry", 15294), (15, "Naill", 20001), (40, "Peter", 16395)) print(employee) Output: ((10, 'Itika', 13000),) ((10, 'Itika', 13000), (24, 'Harry', 15294), (15, 'Naill', 20001), (40, 'Peter', 16395)) Some Operations Nested Tuples will necessary operations nested tuples. Concatenating Tuples Nested Tuples When dealing with tuples, it's occasionally necessary turn separate records into nested group while keeping them independent elements. Tuples often added adding contents, which flattens resulting container, which typically undesirable. Let's talk about some approaches solving this issue. Using operator during initialization this technique, tuple members when initializing tuples, append comma after each tuple prevent flattening during addition. Code Python program concatenate tuples make nested tuple initializing tuples tup1 tup2 printing original tuples print("Tuple str(tup1)) print("Tuple str(tup2)) Concatenating tuples nested tuple using operator nested tup1 tup2 printing result print("The nested tuple str(nested)) Output: Tuple ((5, 4),) Tuple ((1, 6),) nested tuple ((5, Using Operator This task performed applying operator during concatenation. perform safe concatenation. Code Python program concatenate tuples make nested tuple initializing tuples tup1 tup2 printing original tuples print("Tuple str(tup1)) print("Tuple str(tup2)) Concatenating tuples using "operator after tuples nested ((tup1, (tup2, printing result print("The nested tuple str(nested)) Output: Tuple Tuple nested tuple ((5, Sorting Nested Tuples sorted() method sort given tuple. default, this method sorts tuple ascending order. instance, print(sorted(employee)) will arrange tuple "employee" according identification number that appears member nested tuples. lambda function sort tuple depending other elements nested tuple, like employee name count, which first second member nested tuples: print(sorted(employee, lambda x[1])). this case, tells sorted() function, according which elements should sort tuple. lambda expression: lambda x[1] implies that key, which index element, should considered sorting. write lambda expression lambda x[2] sort tuple according word count. Code Python program sort nested tuple using sorted() function Creating nested tuple employee ((10, "Itika", 13000), (24, "Harry", 15294), (15, "Naill", 20001), (40, "Peter", 16395)) Sorting tuple default print(sorted(employee)) Sorting tuple reverse order print(sorted(employee, reverse True)) Sorting tuple name using lambda function print(sorted(employee, lambda x[1])) Sorting tuple name reverse order print(sorted(employee, lambda x[1], reverse True)) Sorting tuple word count print(sorted(employee, lambda x[2])) Sorting tuple word count reverse print(sorted(employee, lambda x[2], reverse True)) Output: [(10, 'Itika', 13000), (15, 'Naill', 20001), (24, 'Harry', 15294), (40, 'Peter', 16395)] [(40, 'Peter', 16395), (24, 'Harry', 15294), (15, 'Naill', 20001), (10, 'Itika', 13000)] [(24, 'Harry', 15294), (10, 'Itika', 13000), (15, 'Naill', 20001), (40, 'Peter', 16395)] [(40, 'Peter', 16395), (15, 'Naill', 20001), (10, 'Itika', 13000), (24, 'Harry', 15294)] [(10, 'Itika', 13000), (24, 'Harry', 15294), (40, 'Peter', 16395), (15, 'Naill', 20001)] [(15, 'Naill', 20001), (40, 'Peter', 16395), (24, 'Harry', 15294), (10, 'Itika', 13000)] Next TopicGUI Assistant using Wolfram Alpha Python prev next