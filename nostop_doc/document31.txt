next prev Python Date time Python provides datetime module work with real dates times. real-world applications, need work with date time. Python enables schedule Python script particular timing. Python, date data type, work with date objects importing module named with datetime, time, calendar. this section tutorial, will discuss work with date time objects Python. datetime classes classified main classes. date naive ideal date. consists year, month, attributes. time perfect time, assuming every precisely 24*60*60 seconds. hour, minute, second, microsecond, tzinfo attributes. datetime grouping date time, along with attributes year, month, day, hour, minute, second, microsecond, tzinfo. timedelta represents difference between dates, time datetime instances microsecond resolution. tzinfo provides time zone information objects. timezone included version Python. class that implements tzinfo abstract base class. Tick Python, time instants counted since January 1970. function time() module time returns total number ticks spent since January 1970. tick seen smallest unit measure time. Consider following example import time; #prints number ticks spent since January 1970 print(time.time()) Output: 1585928913.6519969 current time? localtime() functions time module used current time tuple. Consider following example. Example import time; #returns time tuple print(time.localtime(time.time())) Output: time.struct_time(tm_year=2020, tm_mon=4, tm_mday=3, tm_hour=21, tm_min=21, tm_sec=40, tm_wday=4, tm_yday=94, tm_isdst=0) Time tuple time treated tuple numbers. Let's look members time tuple. Index Attribute Values Year digit (for example 2018) Month Hour Minute Second weak year Daylight savings Getting formatted time time formatted using asctime() function time module. returns formatted time time tuple being passed. Example import time #returns formatted time print(time.asctime(time.localtime(time.time()))) Output: Tue 15:31:39 2018 Python sleep time sleep() method time module used stop execution script given amount time. output will delayed number seconds provided float. Consider following example. Example import time range(0,5): print(i) #Each element will printed after second time.sleep(1) Output: datetime Module datetime module enables create custom date objects, perform various operations dates like comparison, etc. work with dates date objects, have import datetime module into python source code. Consider following example datetime object representation current time. Example import datetime #returns current datetime object print(datetime.datetime.now()) Output: 2020-04-04 13:18:35.252578 Creating date objects create date objects bypassing desired date datetime constructor which date objects created. Consider following example. Example import datetime #returns datetime object specified date print(datetime.datetime(2020,04,04)) Output: 2020-04-04 00:00:00 also specify time along with date create datetime object. Consider following example. Example import datetime #returns datetime object specified time print(datetime.datetime(2020,4,4,1,26,40)) Output: 2020-04-04 01:26:40 above code, have passed datetime() function year, month, day, hour, minute, millisecond attributes sequential manner. Comparison dates compare dates using comparison operators like <=. Consider following example. Example from datetime import datetime #Compares time. time between 8AM 4PM, then prints working hours otherwise prints hours dt(dt.now().year,dt.now().month,dt.now().day,8)<dt.now()<dt(dt.now().year,dt.now().month,dt.now().day,16): print("Working hours....") else: print("fun hours") Output: hours calendar module Python provides calendar object that contains various methods work with calendars. Consider following example print calendar last month 2018. Example import calendar; calendar.month(2020,3) #printing calendar December 2018 print(cal) Output: March 2020 Printing calendar whole year prcal() method calendar module used print calendar entire year. year which calendar printed must passed into this method. Example import calendar #printing calendar year 2019 calendar.prcal(2020) Output: Next TopicPython Regular Expressions prev next