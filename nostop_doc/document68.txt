next prev Python OOPs Concepts Like other general-purpose programming languages, Python also object-oriented language since beginning. allows develop applications using Object-Oriented approach. Python, easily create classes objects. object-oriented paradigm design program using classes objects. object related real-word entities such book, house, pencil, etc. oops concept focuses writing reusable code. widespread technique solve problem creating objects. Major principles object-oriented programming system given below. Class Object Method Inheritance Polymorphism Data Abstraction Encapsulation Class class defined collection objects. logical entity that some specific attributes methods. example: have employee class, then should contain attribute method, i.e. email name, age, salary, etc. Syntax class ClassName: <statement-1> <statement-N> Object object entity that state behavior. real-world object like mouse, keyboard, chair, table, pen, etc. Everything Python object, almost everything attributes methods. functions have built-in attribute __doc__, which returns docstring defined function source code. When define class, needs create object allocate memory. Consider following example. Example: class car: __init__(self,modelname, year): self.modelname modelname self.year year display(self): print(self.modelname,self.year) car("Toyota", 2016) c1.display() Output: Toyota 2016 above example, have created class named car, attributes modelname year. have created object access class attribute. object will allocate memory these values. will learn more about class object next tutorial. Method method function that associated with object. Python, method unique class instances. object type have methods. Inheritance Inheritance most important aspect object-oriented programming, which simulates real-world concept inheritance. specifies that child object acquires properties behaviors parent object. using inheritance, create class which uses properties behavior another class. class known derived class child class, whose properties acquired known base class parent class. provides re-usability code. Polymorphism Polymorphism contains words "poly" "morphs". Poly means many, morph means shape. polymorphism, understand that task performed different ways. example have class animal, animals speak. they speak differently. Here, "speak" behavior polymorphic sense depends animal. abstract "animal" concept does actually "speak", specific animals (like dogs cats) have concrete implementation action "speak". Encapsulation Encapsulation also essential aspect object-oriented programming. used restrict access methods variables. encapsulation, code data wrapped together within single unit from being modified accident. Data Abstraction Data abstraction encapsulation both often used synonyms. Both nearly synonyms because data abstraction achieved through encapsulation. Abstraction used hide internal details show only functionalities. Abstracting something means give names things that name captures core what function whole program does. Object-oriented Procedure-oriented Programming languages difference between object-oriented procedure-oriented programming given below: Index Object-oriented Programming Procedural Programming Object-oriented programming problem-solving approach used where computation done using objects. Procedural programming uses list instructions computation step step. makes development maintenance easier. procedural programming, easy maintain codes when project becomes lengthy. simulates real world entity. real-world problems easily solved through oops. doesn't simulate real world. works step step instructions divided into small parts called functions. provides data hiding. more secure than procedural languages. cannot access private data from anywhere. Procedural language doesn't provide proper data binding, less secure. Example object-oriented programming languages C++, Java, .Net, Python, etc. Example procedural languages are: Fortran, Pascal, etc. Next TopicPython Class Objects prev next