next prev Getopt module Python getopt modules analyser used command-line options, which based convention organized UNIX getopt() function. basically used analysing argument sequence like sys.argv. also understand this module helps scripts analyse command line arguments sys.argv. This module works like programming language getotp() function analysing command line parameters. Python getopt Function This modules provide some primary function that (goes same name that is) getopt(). functionality this function analyse command line options parameter lists. Syntax: getopt.getopt args options long_options Parameters: getopt.getopt() module takes following parameters. args: args list arguments which passed options: options string options letters which script wants recognize. option that needs arguments should written with colon :). long_options: This list string which have name long options. option that needs arguments should written with equal sign Return Type: return value getopt module function consists elements. first element return value list option value pairs, second element return value list program arguments which left when options list stripped. Supported option syntax includes: bvalue value -	-- noargument -	-- withargument=value -	-- withargument value Function Arguments Getopt() getopt module function takes three arguments: first argument getopt() module consists classification arguments analysed. This generally derives from sys.argv (the program name ignored sys.argv argument sequence. second argument string which option definition single-character options. option needs argument, letter written with colon third argument getopt module function sequence names long-style option. Long style options name consisting more than single character, example: noargument witharguement. name options sequence arguments must include prefix. long style option needs argument, name should written with equals sign. Users combine Long short form options single call. Short Form Options: Suppose user's program taking options with option needs argument, then value must ab: import getopt #importing getopt module print getopt.getopt -bval ab:c: python getopt_short.py Long-form options Getopt user's program wants take options, such noarguement witharguement then, sequence arguements will noarguement witharguement= import getopt importing getopt module print getopt.getopt -noarguement -witharguement value -witharguement2 another noarguement witharguement witharguement2 python getopt_long.py -noarguement '?witharguement value -witharguement2 another Example import importing getopt module import getopt full_name first_name None last_name None argv sys.argv try: opts args getopt.getopt argv, f:l: except: print Error opts: first_name elif last_name print first_name last_name full_name Output: Here, user created function full_name(), which will print full name user after receiving first name last name from command line. user also abbreviated first name last name Example this example, user full form first_name last_name instead using short form import import getopt import getopt module full_name first_name None last_name None argv sys.argv try: opts args getopt.getopt argv f:l: first_name last_name except: print Error opts: --first_name first_name elif last_name last_name print first_name last_name full_name Output: user remember that single dash short forms arguments long forms arguments users should double dash Conclusion: this article, have discussed getopt() module functions their arguments. have also explained different implementing forms with proper rules command line prompt, with well-defined examples. Next TopicMerge Dictionaries Python prev next