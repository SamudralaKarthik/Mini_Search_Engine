next prev Write Python Program Sort Odd-Even sort even transposition Sort this tutorial, will learn about transposition sort, also known brick sort parity sort. relatively simple sorting algorithm, developed originally parallel processors with local interconnections. This algorithm similar bubble sort shares many feature characteristics. designed compare odd/even indexed pairs adjacent elements list, pair wrong order, elements swapped. This step repeated even/odd indexed. Then alternates between odd/even even/odd steps until list sorted. Let's have example understand better way. Suppose have list some integers. need arrange numbers even then odd. need place even number first then numbers. given list result will like 9]. will following steps solve this problem while size list list[j] even, then swap list[i] list[j], increase increase return list Let's implement above solution into Python code Example parity_sort(list1: list) list: list1_size len(list1) range(list1_size): range(_ list1_size list1[i list1[i]: list1[i], list1[i list1[i list1[i] return list1 nums print("\nOriginal list:") print(nums) parity_sort(nums) print("Sorted order is:", nums) nums [15, 100, -14, 178, 192, 246, -118, print("\nOriginal list:") print(nums) parity_sort(nums) print("Sorted order is:", nums) Output Original list: Sorted order Original list: [15, 100, -14, 178, 192, 246, -118, Sorted order [-118, -14, 100, 178, 192, 246] Explanation above code, have created function named parity sort, which takes list argument. Into function, initialized length list, used nested loop. outer loop will length list, inner loop will from modulus list jump elements list. next element smaller than previous element, then swap element. Once list sorted, function returns sorted list. also solve this problem using while loop. Let's understand following example. Example parity_sort(list1: list) list: =0 while len(list1): list1[j]%2==0: list1[i],list1[j] list1[j],list1[i] i+=1 j+=1 return list1 nums print("\nOriginal list:") print(nums) parity_sort(nums) print("Sorted order is:", nums) nums [15, 100, -14, 178, 192, 246, -118, print("\nOriginal list:") print(nums) parity_sort(nums) print("Sorted order is:", nums) Output Original list: Sorted order Original list: [15, 100, -14, 178, 192, 246, -118, Sorted order [100, -14, 178, 192, 246, -118, Conclusion this tutorial, have implemented parity sort even-odd sort. loop while loop solve this problem. This problem asked technical interviews. Next TopicWrite Python Program Print Doubly Linked List Reverse Order prev next