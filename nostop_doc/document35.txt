next prev Python Write File File stands "comma-separated values", which defined simple file format that uses specific structuring arrange tabular data. stores tabular data such spreadsheet database plain text standard format data interchange. file opens into excel sheet, rows columns data define standard format. Python Module Functions module work handle files read/write data from specified columns. There different types functions, which follows: csv.field_size_limit returns current maximum field size allowed parser. csv.get_dialect Returns dialect associated with name. csv.list_dialects Returns names registered dialects. csv.reader Read data from file csv.register_dialect associates dialect with name, name must string Unicode object. csv.writer Write data file csv.unregister_dialect deletes dialect, which associated with name from dialect registry. name registered dialect name, then error being raised. csv.QUOTE_ALL instructs writer objects quote fields. csv.QUOTE_MINIMAL instructs writer objects quote only those fields which contain special characters such quotechar, delimiter, etc. csv.QUOTE_NONNUMERIC instructs writer objects quote non-numeric fields. csv.QUOTE_NONE instructs writer object never quote fields. Writing Files also write existing files Python using csv.writer() module. similar csv.reader() module also methods, i.e., writer function Dict Writer class. presents functions, i.e., writerow() writerows(). writerow() function only write row, writerows() function write more than row. Dialects defined construct that allows create, store, re-use various formatting parameters. supports several attributes; most frequently used are: Dialect.delimiter: This attribute used separating character between fields. default value comma (,). Dialect.quotechar: This attribute used quote fields that contain special characters. Dialect.lineterminator: used create lines, default value '\r\n'. Let's write following data File. data [{'Rank': 'B', 'first_name': 'Parker', 'last_name': 'Brian'}, {'Rank': 'A', 'first_name': 'Smith', 'last_name': 'Rodriguez'}, {'Rank': 'C', 'first_name': 'Tom', 'last_name': 'smith'}, {'Rank': 'B', 'first_name': 'Jane', 'last_name': 'Oscar'}, {'Rank': 'A', 'first_name': 'Alex', 'last_name': 'Tim'}] Example import with open('Python.csv', 'w') csvfile: fieldnames ['first_name', 'last_name', 'Rank'] writer csv.DictWriter(csvfile, fieldnames=fieldnames) writer.writeheader() writer.writerow({'Rank': 'B', 'first_name': 'Parker', 'last_name': 'Brian'}) writer.writerow({'Rank': 'A', 'first_name': 'Smith', 'last_name': 'Rodriguez'}) writer.writerow({'Rank': 'B', 'first_name': 'Jane', 'last_name': 'Oscar'}) writer.writerow({'Rank': 'B', 'first_name': 'Jane', 'last_name': 'Loive'}) print("Writing complete") Output: Writing complete returns file named 'Python.csv' that contains following data: first_name,last_name,Rank Parker,Brian,B Smith,Rodriguez,A Jane,Oscar,B Jane,Loive,B Write into Dictionary also class DictWriter write file directly into dictionary. file named python.csv contains following data: Parker, Accounting, November Smith, October Example import with open('python.csv', mode='w') csv_file: fieldnames ['emp_name', 'dept', 'birth_month'] writer csv.DictWriter(csv_file, fieldnames=fieldnames) writer.writeheader() writer.writerow({'emp_name': 'Parker', 'dept': 'Accounting', 'birth_month': 'November'}) writer.writerow({'emp_name': 'Smith', 'dept': 'IT', 'birth_month': 'October'}) Output: emp_name,dept,birth_month Parker,Accounting,November Smith,IT,October Writing Files Using Pandas Pandas defined open source library which built Numpy library. provides fast analysis, data cleaning preparation data user. easy reading file using pandas. need create DataFrame, which two-dimensional, heterogeneous tabular data structure consists three main components- data, columns, rows. Here, take slightly more complicated file read, called hrdata.csv, which contains data company employees. Name,Hire Date,Salary,Leaves Remaining John Idle,08/15/14,50000.00,10 Smith Gilliam,04/07/15,65000.00,8 Parker Chapman,02/21/14,45000.00,10 Jones Palin,10/14/13,70000.00,3 Terry Gilliam,07/22/14,48000.00,7 Michael Palin,06/28/13,66000.00,8 Example import pandas pandas.read_csv('hrdata.csv', index_col='Employee', parse_dates=['Hired'], header=0, names=['Employee', 'Hired', 'Salary', 'Sick Days']) df.to_csv('hrdata_modified.csv') Output: Employee, Hired, Salary, Sick Days John Idle, 2014-03-15, 50000.0,10 Smith Gilliam, 2015-06-01, 65000.0,8 Parker Chapman, 2014-05-12, 45000.0,10 Jones Palin, 2013-11-01, 70000.0,3 Terry Gilliam, 2014-08-12 48000.0,7 Michael Palin, 2013-05-23, 66000.0,8 Next TopicPython read excel file prev next