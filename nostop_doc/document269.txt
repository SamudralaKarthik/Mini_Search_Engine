next prev Cos Python this tutorial, going discuss trigonometric cosine (cos) function Python. will talk about modules that implement function Python program. will also learn about plotting graphs using function program. let's start looking modules that import into program function. Python Modules function Python, have math module that import implement function well other important mathematical operations program. Other than math module, also numpy module Python implement function program. will learn both modules, i.e., math module numpy module, after another, implement function program, respectively. Method cos() function math module math module Python comes with number important mathematical values operations, cos() function them. cos() function math module implement trigonometric value program. math.cos() function returns trigonometric cosine value argument give inside function, i.e., value degree cosine. And, value giving argument function should radians. Syntax Following syntax using math.cos() function Python program: math.cos(a) Parameters: Here, parameter value radian. Return value: math.cos() function returns cosine value argument radians that have given inside function. Let's understand cos() function math module Python through following example program: Example Import math module import math Define input radian value math.pi Printing cosine value respective input value print ("The cosine value value given ="") print (math.cos(x)) Output: cosine value value given 0.9659258262890683 Method cos() function Numpy module Other than math module, also numpy module implementation trigonometric cosine value program. this, provided with cos() function inside numpy module that gives math cosine value output. Like math.cos() function, while using cos() function numpy module, have give argument value radians inside function. Following syntax using numpy.cos() function Python program: numpy.cos(a) Parameters: give following parameter types inside numpy.cos() function: give single value argument radians function. also give array containing multiple radian values argument function. Return type: numpy.cos() function will return cosine values given number. Let's understand numpy module's cos() function Python through following example program: Example importing numpy module program import numpy defining multiple input values single array ValArray jtp.pi jtp.pi jtp.pi/9, jtp.pi/12, jtp.pi/5] printing input array output print ("Values given input array: \n", ValArray) using cos() function cosine values CosArray jtp.cos(ValArray) printing values output print ("\nRespective Cosine values input array values: \n", CosArray) Output: Values given input array: 0.7853981633974483, 0.4487989505128276, 0.3490658503988659, 0.2617993877991494, 0.6283185307179586] Respective Cosine values input array values: 0.70710678 0.90096887 0.93969262 0.96592583 0.80901699] Plotting Graphical representation cosine value output have learned cos() function both numpy math modules inside Python program till now. Now, will both numpy math modules, with that, will also cos() function plot graphical representation cosine values. this graphical representation following ways: Directly importing implementing cos() function numpy math module Iterating over cos() function with numpy math module Let's understand implementation both methods using them Python program plotting graphs with them output. Example Directly importing implementing cos() function numpy math module importing numpy module import numpy importing matplotlib module import matplotlib.pyplot Defining array containing radian values RadValArray jtp.linspace(-(2*jtp.pi), 2*jtp.pi, cosine values respective array value CosValArray jtp.cos(RadValArray) printing values output print("Radian values array: RadValArray) print("\nRespective values array: CosValArray) using plot() function with variables mlt.plot(RadValArray, CosValArray, color 'blue', marker "*") mlt.title("Graphical representation function") mlt.xlabel("X-axis") mlt.ylabel("Y-axis") plotting graph output mlt.show() Output: Radian values array: [-6.28318531 -5.62179738 -4.96040945 -4.29902153 -3.6376336 -2.97624567 -2.31485774 -1.65346982 -0.99208189 -0.33069396 0.33069396 0.99208189 1.65346982 2.31485774 2.97624567 3.6376336 4.29902153 4.96040945 5.62179738 6.28318531] Respective values array: 0.78914051 0.24548549 -0.40169542 -0.87947375 -0.9863613 -0.67728157 -0.08257935 0.54694816 0.94581724 0.94581724 0.54694816 -0.08257935 -0.67728157 -0.9863613 -0.87947375 -0.40169542 0.24548549 0.78914051 Example Iterating over cos() function with numpy math module importing math module import math importing numpy module import numpy importing matplotlib module import matplotlib.pyplot Defining array containing radian values RadValArray jtp.linspace(-(2*jtp.pi), 2*jtp.pi, Empty array cosine values CosValArray #Iterating over values array range(len(RadValArray)): CosValArray.append(math.cos(RadValArray[j])) printing respective values output print("Radian values array: RadValArray) print("\nRespective values array: CosValArray) using plot() function with variables mlt.plot(RadValArray, CosValArray, color 'orange', marker "+") mlt.title("Graphical representation function") mlt.xlabel("X-axis") mlt.ylabel("Y-axis") plotting graph output mlt.show() Output: Radian values array: [-6.28318531 -5.62179738 -4.96040945 -4.29902153 -3.6376336 -2.97624567 -2.31485774 -1.65346982 -0.99208189 -0.33069396 0.33069396 0.99208189 1.65346982 2.31485774 2.97624567 3.6376336 4.29902153 4.96040945 5.62179738 6.28318531] Respective values array: [1.0, 0.7891405093963934, 0.2454854871407988, -0.40169542465296987, -0.8794737512064891, -0.9863613034027223, -0.6772815716257412, -0.08257934547233249, 0.5469481581224268, 0.9458172417006346, 0.9458172417006346, 0.5469481581224268, -0.0825793454723316, -0.6772815716257405, -0.9863613034027223, -0.8794737512064893, -0.40169542465296987, 0.2454854871407988, 0.7891405093963934, 1.0] Next Topicvif Python prev next