next prev Difference between Property Attributes Python this tutorial, will understand difference between property attributes Python. Everything Python object, each class attributes, methods, functions. When work with object-oriented programming language, encounter terms Attributes Properties. terms English, properties attributes utilized similarly, terms programming, both different. will discuss some critical differences between them. Let's move introduction attributes. Attributes Python Attributes defined data variables such name, age, height, etc. Python, there types attributes Class Attributes Instance Attributes Class Attributes Class attributes attributes that created inside class definition belong class These attributes shared between other objects same class. Let's understand following example Example declare class class Student: class attribute 	count 0	 define method 	def increment(self): 		Student.count create Student class object Student() calling object's method a1.increment() print value class attribute print(a1.count) Student() a2.increment() print(a2.count) print(Student.count) Output: Explanation above code, have created class named Student, assigned class attributes count. access using instance class class name itself. Instance Attribute object nothing instance class Python. Instance Attributes unique each instance, every object/instance contains attributes changed without modifying other instances. Let's understand following example. Example create class class Student: constructor 	def __init__(self): instance attribute 		self.name 'JavaTpoint' 		self.salary 50000 define method 	def show(self): 		print(self.name) 		print(self.salary) create object Student class Student() method calling x.show() Output: JavaTpoint 50000 have brief idea about idea attributes; let's understand example. Properties Python Properties unique attributes that contain getter, setter, deleter methods such __get__, __set__, __delete__ methods. Python provides @property decorator, which used define properties Python code. decorator changes behaviour wrapped function without changing actual definition. Let's understand following example Example create class class PropertyDeco: constructor 	def __init__(self, message): 		self._message message getting messages 	@property			 	def message(self): 		print('Getting message') 		return self._message setting messages	 	@message.setter 	def message(self, message): 		print('Setting message message) 		self._message message deleting messages 	@message.deleter 	def message(self): 		print('Deleting message') 		del self._message create object class PropertyDeco('Welcome JavaTpoint') print(x.message) x.message 'Happy Learning!' deleting message x.message Output: Getting message Welcome JavaTpoint Setting message Happy Learning! Deleting message Explanation above code, created class that will display message. First, initialized message attribute defined property using @property decorator. Then explained setter method that will method when modify message. Then described deleter method. These unique attributes property decorator. also define properties using property() method. Example create class class PropertyDeco: constructor 	def __init__(self, message): 		self._message message getting messages 	@property			 	def getter(self): 		print('Getting message') 		return self._message setting messages	 	def setter(self, message): 		print('Setting message message) 		self._message message deleting messages 	def deleter(self): 		print('Deleting message') 		del self._message 	message property(getter, setter, deleter, create object class PropertyDeco('Welcome JavaTpoint') print(x.message) x.message 'Happy Learning!' deleting message x.message Output: Getting message Welcome JavaTpoint Setting message Happy Learning! Deleting message above code similar previous code. only difference that, created getter, setter, deleter() methods instead decorator. Attributes V/s Property Below table attributes properties. Attribute Property Attributes defined data variables like name, age, height etc. Properties special type attributes. There types attributes Class attributes Instance attributes Property method comes with getter, setter delete methods like __get__, __set__, __delete__ methods. Class attributes defined class body functions. define getters, setters, delete methods with property() function. Instance attributes defined class body using self keyword usually __init__() method. read property, @property decorator which added above method. Conclusion Thus, this tutorial, learned significant difference between attributes properties Python. This tutorial included types attributes Python what properties Python. will help grasp object-oriented programming concepts better way. Next TopicDraw Great Indian Flag using Python Code prev next