next prev Shutil Module Python this tutorial, will learn about Shutil module Python. will discuss perform high-level file operation such creating copy file archive copy content file another file using Python script. Let's have basic introduction Shutil module. Python Shutil Module Python shutil module provides facility perform high-level file operation. operate with file object offers ability copy remove files. handles low-level semantic such creating closing file objects after performing operations. Working Shutil Module Python shutil module comes with many built-in methods. will explore important methods. start working with this module, first need import current Python file. Copy Files This module provides copy() function which used copy data from file another. files must same directory destination file must writable. Let's understand following syntax. Syntax- shutil.copyfile(source, destination, follow_symlinks True) Parameter: above syntax first argument source which shows path source file. second argument destination which shows path destination file. third argument optional; default value this parameter true. returns string which shows path newly created file. Let's understand following example. Example import import shutil Creating folder current directory os.mkdir('javatpoint') will show empty folder print('Empty Folder:', os.listdir('javatpoint')) testcompare.py file will copied javatpoint folder shutil.copy('testcompare.py', 'javatpoint') After coping file folder shows file print('File Copied Name:', os.listdir('javatpoint')) Output: Empty Folder: File Copied Name: ['testcompare.py'] Explanation copy() function takes directory name argument. Here metadata copied, copied file will considered freshly created file. This method also cloned permission file. thing note that destination file already exists, will replaced with source file. Let's another example. Example destination directory import import shutil hello.txt file will copied source r'D:\Python Project\javatpoint\hello.txt' newly created foloder destination r'D:\Python Project\NewFile' Storing path hello.txt file dest shutil.copy(source, destination) Print path print(dest) Output: D:\Python Project\NewFile\hello.txt have mentioned that, copy() function doesn't copy metadata. But, will copy2() function which allows copy file including metadata. Example Error handling while using copy method importing shutil module import shutil source path source r"D:\Python Project\NewFolder" destination path destination r"D:\Python Project\NewFolder" try: shutil.copy(source, destination) print("File copied successfully.") given source path same except shutil.SameFileError: print("Source destination represents same file.") there permission write except PermissionError: print("Permission denied.") other errors except: print("Error occurred while copying file.") Output: Source destination represents same file. copy2() Function This function similar copy() function. also copy content file another only difference preserve file's metadata. Let's understand following syntax. Syntax: shutil.copy2(source, destination, follow_symlinks True) Parameter: above syntax first argument source which shows path source file. second argument destination which shows path destination file. third argument optional; default value this parameter true. returns string which shows path newly created file. Let's understand following example. Example import import shutil hello.txt file will copied source r'D:\Python Project\javatpoint\hello.txt' metadata os.stat(source) print(metadata) newly created foloder destination r'D:\Python Project\NewFile' Storing path hello.txt file dest1 shutil.copy2(source, destination) metadata os.stat(dest1) print("After copying file") print(metadata) Print path print(dest1) Output: os.stat_result(st_mode=33206, st_ino=562949953459285, st_dev=3029671014, st_nlink=1, st_uid=0, st_gid=0, st_size=17, st_atime=1622815671, st_mtime=1622705607, st_ctime=1622705607) After copying file os.stat_result(st_mode=33206, st_ino=562949953459287, st_dev=3029671014, st_nlink=1, st_uid=0, st_gid=0, st_size=17, st_atime=1622815748, st_mtime=1622705607, st_ctime=1622706243) D:\Python Project\NewFile\hello.txt shutil.copyfile() Function This method used copy content source file destination file expect metadata. Source destination must have file destination file must provide write permission. there destination file already present then will replaced file otherwise create file. Let's following syntax. Syntax: shutil.copyfile(source, destination, follow_symlinks True) Parameters: above syntax first argument source which shows path source file. second argument destination which shows path destination file. third argument optional; default value this parameter true. returns string which shows path newly created file. Let's understand following example. Example import shutil hello.txt file will copied source r'D:\Python Project\javatpoint\hello.txt' newly created foloder destination r'D:\Python Project\NewFile\hi.txt' Storing path hello.txt file dest1 shutil.copyfile(source, destination) Print path print(dest1) Output: D:\Python Project\NewFile\hi.txt shutil.copytree() Function This method used replicate complete directory. copies entire directory tree rooted source destination directory. destination directory must already present. Let's following syntax. Syntax: shutil.copytree(src, dst, symlinks False, ignore None, copy_function copy2, igonre_dangling_symlinks False) Parameters: above syntax: shows path source directory. dest shows path destination directory. symlinks(optional) takes Boolean values True False. depends which metadata original links links will copied tree. ignore(optional) default None ignore passed, must callable that receive arguments. directory visited copytree(). copy_function(optional) copy2 default value this parameter. copy() function used parameter. ignore_dangling_symlinks(optional) This parameter used raise exception file pointed symlink doesn't exist. returns string which represents path newly created directory. Example importing shutil module import shutil source path r'D:\Python Project\javatpoint' destination path dest r'D:\Python Project\NewFolder' Copy content source destination dest1 shutil.copytree(src, dest) print path newly created file print("Destination path:", dest1) Output: Destination path: D:\Python Project\NewFolder shutil.rmtree() This method used delete complete directory tree. Let's following syntax. Syntax: shutil.rmtree(path, ignore_errors=False, onerror=None) Parameter- above syntax path represents file path. path-like object either string bytes object. ignore_errors removal will ignored this argument True. onerror ignore_errors false, such errors handled calling handler specified onerror. Let's understand following example Example import shutil import location location_dir r"D:\Python Project\NewFile" directory directory r"D:\Python Project\javatpoint" path path1 os.path.join(location_dir, directory) removing directory shutil.rmtree(path1) above code will remove given directory. shutil.which() Function shutil.which() function used path executable application that would given called. finds file given path. Let's following syntax. Syntax: shutil.which(cmd, mode os.F_OK os.X_OK, path None) Parameters above syntax string that represents file. mode specifies mode file which method should executed. path This parameter specifies path used. This method returns path executable application. Let's understand following example. Example importing shutil module import shutil search file 'python' Using shutil.which() method locating shutil.which(cmd) Print result print(locating) Output: C:\Python\python.EXE will find given file computer, file found returns path file otherwise returns None. Next TopicPython epoch Datetime prev next