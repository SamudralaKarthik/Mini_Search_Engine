next prev Create Requirements.txt File Python developer, know that while working Python project data science project, essential always work environment that makes your project reusable repeatable without creating issue anyone that picks your project. before discussing create requirement .txt file Python, know what requirement.txt need What requirement.txt file Python? Python requirement.txt file type file that usually stores information about libraries, modules, packages itself that used while developing particular project. also stores files packages which that project dependent requires run. Typically this file "requirement.txt" stored resides) root directory your projects. Here another essential question arises need this type file projects. need requirement.txt? helps several ways, even when revisit project future, solves almost compatibility issues. ever work Python project developed project, surely know that usually require several numbers packages. However, while developing project, generally used particular version packages. Later package manager maintainer make some changes, these modifications easily break your entire application. Therefore much work keep track every modification packages. Specifically, where project big, essential keep track each package using avoid unexpected surprises. standard ways solve these types issues virtual environment. reason that there main types packages locations where Python libraries usually stored, usually need types these packages while working particular project; hence required know which required project make easier reproducibility. usually involves following files: System Packages that forms part Standard Python Library Site Packages (Third Party Packages) that your install using pip. What virtual environment? Virtual Environment type isolated artificial workspace which keeps user's packages separate from local main) system installation. allows create "virtual" isolated environment each Python project. This makes easier each project independent other project, especially where they share same dependencies. There various packages avialble that used create virtual environment. Some basic packages follows: virtualenv pipenv once virtual environment created project, install packages libraries. very easy required packages need project with virtual environment. Lets first "virtualenv." virtualenv type library that allows create virtual environment install virtualenv, follow given instructions: Open Cmd, type following command press enter button shown below-given image: Command install virtualenv Output Creating working directory project create virtual environment inside that project's directory avoid unnecessary issues. Command Python3 venv name_of_env Output this newly created virtual environment, just need activate activate this isolated environment, type following given command press enter button shown below: Command name_of_envirnment\Scripts\activate Output verify that virtual environment created, prompt that prefix changed with name your virtual environment, case, have named virtual environment "name_of_envirnmnet." also verify opening project's directory folder where directory with specified name will created. create requirement.txt file order create requirement.txt file, will good know what contains. requirement.txt files include types standard packages libraries that used that particular project. Therefore this requirement.txt file plays essential role while developing small bigger projects. also helps make projects more portable. With help "requirement.txt" file, several major problems easily avoided. understand more details, consider following given example: Example: Suppose have created project, such application that compatible with specific version library packages. Thus some reason, forward this application your friend. Since have used requirement.txt file, possible that your application will properly even started your friend's system. main reason behind this that users same version libraries packages. However, used requirement.txt file, anyone your project application because required used packages libraries also specified form file (requirement.txt) with your project. this requirement .txt file, user easily select, store maintain required files their requirements. Requirements.txt File: Using Virtualenv Here, able requirements.txt file. create requirement.txt file, following command: Command pip3 freeze requirements.txt Output Requirements.txt File: Using Pipenv Pipenv also excellent virtual environment creation library tool that some cool features. following given instruction requirement.txt file. Type following command install pipenv Command install pipenv Output type following command press enter button. Command pipenv install mypackage above command used install packages that required projects. Output After installing packages project, need activate virtual environment. Therefore activate virtual environment, following commands: Command pipenv shell pipenv These commands used activate newly created virtual environment, shown below: Output type following command script virtual environment. Command pipenv Python myscript.py Explanation This command used specified script virtual environment shown below: Output easier, also automatically keeps track libraries used project pipfile pipfile. lock file. These files play same role just requirements.txt also stores additional information several things that included requirement.txt. Thus, this pipfile alternate requirements.txt file. However, still want requirements.txt file, following command: pipenv -r lock requirements.txt Output Requirements.txt File: Without Virtualenv using Pipreqs Pipreqs most efficient straightforward tool use, which doesn't requires create virtual environment. Therefore quite useful user only requires packages libraries used application project. most important things that automatically scans scripts Python files their imported libraries generates requirements.txt. Lets works: First all, have install "pipreqs," download type following given command enter button: Command install pipreqs Output Once installation gets completes, then start "pipreqs" requirement.txt file pointing location where your project folder located. Command pipreqs /path/to/project Output verify that requirement.txt file successfully created, your project's folder that file "requirement.txt" will created, shown below: Next TopicTic-Tac-Toe Python prev next