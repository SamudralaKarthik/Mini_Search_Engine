next prev Python pprint Module While printing data from program, have faced issue printing datasets standard format. data printed output printed without defined format, which makes data look unorganized. Also, makes difficult look particular information from printed dataset. have print this data some format, have multiple format functions with every column dataset. This becomes time-consuming hectic when given dataset multiple numbers rows columns with different size entries. Therefore, have print dataset some sorted output from program, have look some alternate choices printing dataset format. This format printed dataset will also help when look some particular information from dataset. That's importance such pretty printer packages increases during development programming tasks. Many programming languages provide with packages that print datasets format output. Talking specifically about Python, pprint module that comes with multiple functions used print datasets some defined format. Therefore, will study this pprint module Python this tutorial learn functions this module print datasets some specific format output. Introduction pprint Module Python pprint module part Python's standard library that comes with multiple functions used print given dataset specific format output. name pprint module itself stands pretty-printer module, also known Data pretty printer module. aesthetically good-looking appearance data structures datasets also possible because functionality pprint module. pprint module enables print given data structure defined format thus gives aesthetically good-looking appearance output. data structure dataset, which correctly parsed executed Python program, elegantly formatted output functionality pprint module. possible, formatted expression data structures output kept single line pprint module, sometimes when length format expression exceeds defined length, broken into multiple lines. Sometimes, formatted expression breaks into multiple lines when size exceeds default width parameter pprint module's formatting functions. dictionary data pprint output program automatically formatted before representing displaying result output, unique feature pprint module. Thus, that data printed using pprint module well-structured more readable form. pprint Module Python: Installation pprint module comes with standard libraries Python, i.e., pprint pre-installed module Python installed along with installation standard Python distribution. Therefore, don't have perform carry installation process before using pprint module Python programs. directly start importing this module into Python programs work with understand implementation functioning. following line code importing pprint module Python programs: Importing pprint module import pprint Thus, this module example programs this tutorial work with understand implementation. Classes pprint Module pprint module Python contains definition PrettyPrinter class standard library given data structure sorted format. PrettyPrinter class this module, have define constructor class program, only after that functions pprint module from this PrettyPrinter class. Syntax Defining PrettyPrinter Class Constructor: have pprint class program, defining constructor this class program then constructor with functions pprint module while printing data structures datasets some specific format. have following syntax line code defining constructor pprint class: Constructor pprint class pcr ppr.PrettyPrinter(indentGiven, widthOfLine, depthInData, stream, compact) Arguments: syntax written above, constructor pprint class defined using PrettyPrinter() function pprint module. PrettyPrinter() function takes following five arguments while using define constructor PrettyPrinter class: indentGiven: indent parameter function used define indentation that should added after each recursive level (Data values each column). don't define this parameter passing argument function, function will take default argument, which indent argument. (ii) widthOfLine: This parameter function defines width every line from data structure, desired output format data structure restricted this format. default value width parameter used when don't provide width argument function. length line data structure more than width parameter defined function, will break into multiple line structures output. (iii) depthInData: depth parameter function used control number levels printed output. optional argument function, default value present this parameter. (iv) stream: default value stream parameter std.out- default output machine. This parameter used function take stream object such files while printing data structures output. compact: last argument used PrettyPrinter() function, default, compact parameter False. have this argument True only when data displaying adjustable within width. These five arguments that should given PrettyPrinter() function while defining constructor PrettyPrinter class. these arguments specify format want print given data structure output. Methods PrettyPrinter Class: pprint module multiple methods which some them defined using constructor PrettyPrinter class. These methods functions defined PrettyPrinter class's constructor used program print data structure specified format. Following methods that defined under constructor PrettyPrinter class: pprint() function: first method PrettyPrinter class pprint() function, which prints formatted representation PrettyPrinter object (where data from data structure stored specific format) output. this function print statement print data from program. pformat() function: Based parameters provided constructor PrettyPrinter class, this function returns formatted representation PrettyPrinter object. These functions defined under PrettyPrinter class's constructor, these methods with constructor print data structure output. pprint Module Python: Implementation have learned about functions, classes, methods pprint module till this tutorial. Now, will understand working pprint module classes functions this part tutorial. will functions class constructors pprint module example programs understand their functioning working program. will pprint() pformat() functions example programs understand their implementation work that pformat (use these functions print data structures according specified format output. Look following example programs understand implementation functions pprint module printing data structures: Implementation Using pprint() Function Formatted Output: this implementation part, will pprint() function pprint module print data structures given program specified format that will look catchier formatted. will some example programs understand working this pprint() functions with different arguments given function. First, look following example program understand output printed using pprint() function: Example Look following Python program where have compared simple print statement output with pprint() function output: Importing pprint module import pprint Defining data structure that students data studentDS {"Dwayne Johnson": ["English", "Chemistry", "Physics", "Mathematics", "Biology"], "Randy Orton" :{"English": 50,"Physics": "Chemistry": "Mathematics": "Biology": 90}, "Karl Marx" :(50, 90)} Defining Constructor PrettyPrinter class ppConst ppr.PrettyPrinter() Printing normal output student data structure print ("Normal output student data structure with print statement:") print (studentDS) print ("----") Printing formatted output pprint() function print ("The pprint function's formatted output student data structure:") Using pprint() function ppConst.pprint(studentDS) Output: Normal output student data structure with print statement: {'Dwayne Johnson': ['English', 'Chemistry', 'Physics', 'Mathematics', 'Biology'], 'Randy Orton': {'English': 'Physics': 'Chemistry': 'Mathematics': 'Biology': 90}, 'Karl Marx': (50, 90)} ---- pprint function's formatted output student data structure: {'Dwayne Johnson': ['English', 'Chemistry', 'Physics', 'Mathematics', 'Biology'], 'Karl Marx': (50, 90), 'Randy Orton': {'Biology': 'Chemistry': 'English': 'Mathematics': 'Physics': 60}} see, normal print output pprint function's formatted output student data structure printed output. observe difference between normal output pprint() function's formatted output conclude that pprint() function's formatted output much simple easily observable. That's pprint() function without argument inside print formatted output given data structure. Explanation: have first imported pprint module program ppr, after that, defined constructor PrettyPrinter class. have also defined sample data structure some students' data named this data structure studentDS. named PrettyPrinter class's constructor variable ppConst used later with pprint() function. have then used pprint() function with ppConst constructor variable. While using pprint() function, passed student's data structure variable argument format output student data structure. After that, first, have printed normal output data structure using studentDS variable. And, lastly, printed pprint() function's formatted output using pprint() function compare with normal output. Recursive Data Structure Printing with pprint() Function: also print data structure recursively with pprint() function. Here, will also print recursive object from given data structure, further recursion process, only references will printed output. Look following example program understand recursive object printing implementation pprint() function: Example Look following program where have printed recursive object output: Importing pprint module import pprint Define list numbers numList list(range(24, 31)) Appending list numList.append(numList) Printing appended number list print("Appended list numbers: print(numList) print("----------------") #Printing recursive object with pprint() function print("Appended list with recursive object from pprint function: ppr.pprint(numList) Output: Appended list numbers: [24, [...]] ---------------- Appended list with recursive object from pprint function: [24, see, when printed appended list output using pprint() function, last item from list printed recursive object. output shows that recursion started list with object reference last item. Providing Width Parameter: Now, will provide width parameter (which discussed previous section) PrettyPrinter class while defining constructor same. width provide inside PrettyPrinter() function formats output according given width presents same format. Look following example program understand width parameter implementation PrettyPrinter class: Example Look following program where used width parameter PrettyPrinter class's constructor: Importing pprint module import pprint Defining data structure which having student's data studentDS {"Dwayne Johnson": ["English", "Chemistry", "Physics", "Mathematics", "Biology"], "Randy Orton" :{"English": 50,"Physics": "Chemistry": "Mathematics": "Biology": 90}, "Karl Marx" :(50, 90)} Defining Constructor PrettyPrinter class with width argument ppConst ppr.PrettyPrinter(width Printing formatted output pprint() function print ("The pprint function's formatted output student data structure with defined width:") ppConst.pprint(studentDS) Output: pprint function's formatted output student data structure with defined width: {'Dwayne Johnson': ['English', 'Chemistry', 'Physics', 'Mathematics', 'Biology'], 'Karl Marx': (50, 90), 'Randy Orton': {'Biology': 'Chemistry': 'English': 'Mathematics': 'Physics': 60}} see, formatted output student's data structure printed according width have provided inside PrettyPrinter class using width argument, i.e., width Implementation Using pformat() Function Formatted Output: will learn implement pformat() function printing formatted output given data structure this implementation part. implement pformat function from PrettyPrinter constructor using following ways: pformat method (ii) pformat function will example program each case understand implementation pformat. Using pformat Method: Here, will pformat like method print formatted output with this function. look following example program understand method implementation pformat: Importing pprint module import pprint Defining data structure which having student's data studentDS {"Dwayne Johnson": ["English", "Chemistry", "Physics", "Mathematics", "Biology"], "Randy Orton" :{"English": 50,"Physics": "Chemistry": "Mathematics": "Biology": 90}, "Karl Marx" :(50, 90)} Defining Constructor PrettyPrinter class ppConst ppr.PrettyPrinter() Using pformat() function pfOutput ppConst.pformat(studentDS) Printing formatted output pprint() function print ("The pformat method's formatted output student data structure:") print(pfOutput) Output: pformat method's formatted output student data structure: {'Dwayne Johnson': ['English', 'Chemistry', 'Physics', 'Mathematics', 'Biology'], 'Karl Marx': (50, 90), 'Randy Orton': {'Biology': 'Chemistry': 'English': 'Mathematics': 'Physics': 60}} (ii) Using pformat Function: look following example program understand function implementation pformat: Importing pprint module import pprint Defining data structure which having student's data studentDS {"Dwayne Johnson": ["English", "Chemistry", "Physics", "Mathematics", "Biology"], "Randy Orton" :{"English": 50,"Physics": "Chemistry": "Mathematics": "Biology": 90}, "Karl Marx" :(50, 90)} Using pformat() function pfOutput ppr.pformat(studentDS) Printing formatted output pprint() function print ("The pformat function's formatted output student data structure:") print(pfOutput) Output: pformat function's formatted output student data structure: {'Dwayne Johnson': ['English', 'Chemistry', 'Physics', 'Mathematics', 'Biology'], 'Karl Marx': (50, 90), 'Randy Orton': {'Biology': 'Chemistry': 'English': 'Mathematics': 'Physics': 60}} Next TopicPython PrimePy Module prev next