



next →
← prev

Screen Rotation GUI Using Python Tkinter
In this module, we will create a Python code for rotating the screen and put it into use with a GUI.
Using some of the functions from the rotatescreen module, a simple Python library for rotating the screen in a system, the display may be changed to four orientations.
Installing rotate-screen :

pip install rotate-screen

Walking through the code :
Step 1 :
Importing all the packages from the Python library in order to use them in our code. So, we imported Tkinter and rotatescreen.

# Importing the reqd. packages
from tkinter import *
import rotatescreen

Step 2 :
Creating a function Scr_Rotation() to be used for calling where the screen needs to be rotated. Also, we created a variable called scr to store and detect the default screen orientation.

# Defining of a new function in order to be used to 
# rotate the screen
def Scr_rotation(flag):
    # Getting the default display of the screen
    scr = rotatescr.get_primary_display()

Step 3 :
Under the Scr_Rotation() function, we will now introduce the different methods to change the orientation of the screen. To rotate the screen upwards, we will use the set_Landscape() method. To rotate the screen rightwards, we will use the set_portrait_flipped() method. To rotate the screen downwards, we will use the set_Landscape_flipped() method. To rotate the screen leftwards, we will use the set_portarait() method.

    # Rotating the screen upwards to attain landscape view
    if flag == "up" :
        scr.set_landscape()
    # Rotating the screen rightwards to attain flipped portrait view
    elif flag == "right" :
        scr.set_portrait_flipped()
    # Rotating the screen downwards to attain flipped landscape view
    elif flag == "down" :
        scr.set_landscape_flipped()
    # Rotating the screen leftwards to attain portrait view
    elif flag == "left" :
        scr.set_portrait()

Step 4 :
Finally, we will create the buttons for each of these orientations. Clicking on these buttons, the orientation will be changed.

# Creating buttons in order to change the view
Button(base, text = "Up" , command = lambda: Scr_rotation(
    "up"), bg = "white").grid(row = 0 , column = 3)

Button(base , text = "Right" , command = lambda: Scr_rotation(
    "right"), bg = "white").grid(row = 1 , column = 6)

Button(base , text = "Left" , command = lambda: Scr_rotation(
    "left") , bg = "white").grid(row = 1 , column = 2)

Button(base , text = "Down" , command = lambda: Scr_rotation(
    "down") , bg = "white").grid(row = 3 , column = 3)

The rest of the general widgets are explained along the code itself in the program.
Complete Code :

# Python program to Build an App for the Screen Rotation 
# Using Tkinter in Python

# Importing the reqd. packages
from tkinter import *
import rotatescreen
 
# Defining of a new function in order to be used to 
# rotate the screen
def Scr_rotation(flag):
    # Getting the default display of the screen
    scr = rotatescr.get_primary_display()
    # Rotating the screen upwards to attain landscape view
    if flag == "up" :
        scr.set_landscape()
    # Rotating the screen rightwards to attain flipped portrait view
    elif flag == "right" :
        scr.set_portrait_flipped()
    # Rotating the screen downwards to attain flipped landscape view
    elif flag == "down" :
        scr.set_landscape_flipped()
    # Rotating the screen leftwards to attain portrait view
    elif flag == "left" :
        scr.set_portrait()
 
 
# Creating a new instance of the tkinter object
base = Tk()
# Setting the dimensions of the screen
base.geometry("100x100")
# Giving the title for the screen
base.title("Screen Rotation")
# Setting the bg color
base.configure(bg = #54c5d1)
 
 
# Var classes of the tkinter
final = StringVar()
 
# Creating buttons in order to change the view
Button(base, text = "Up" , command = lambda: Scr_rotation(
    "up"), bg = "white").grid(row = 0 , column = 3)

Button(base , text = "Right" , command = lambda: Scr_rotation(
    "right"), bg = "white").grid(row = 1 , column = 6)

Button(base , text = "Left" , command = lambda: Scr_rotation(
    "left") , bg = "white").grid(row = 1 , column = 2)

Button(base , text = "Down" , command = lambda: Scr_rotation(
    "down") , bg = "white").grid(row = 3 , column = 3)
 
# Calling the main loop to execute the program 
mainloop()

Output:
The screenshot of the output of the code jotted above is given below. The orientation can be changed by clicking on these buttons, in whichever way the user wants.



Next TopicApplication to Search Installed Applications using Tkinter in Python




← prev
next →




