



next →
← prev

Assignment Operators in Python
In this section, we will discuss the assignment operators in the Python programming language. Before moving on to the topic, let's give a brief introduction to operators in Python. Operators are special symbols used in between operands to perform logical and mathematical operations in a programming language. The value on which the operator operates the computation is called the operand. There are different types of operators arithmetic, logical, relational, assignment, and bitwise, etc.

Python has an assignment operator that helps to assign values or expressions to the left-hand-side variable. The assignment operator is represented as the "=" symbol used in assignment statements and assignment expressions. In the assignment operator, the right-hand side value or operand is assigned to the left-hand operand.
Following are the examples of the assignment operators:

x = 8                  # here 8 is assigned to the x (left side operand)
y = 20                  # here 8 is assigned to the x (left side operand)
c = a + b - 5            # here the value of expression a + b - 5 is assigned to c

Types of Assignment Operators
Following are the different types of assignment operators in Python:

Simple assignment operator ( = )
Add and equal operator ( += )
Subtract and equal operator ( -= )
Asterisk and equal operator ( *= )
Divide and equal operator ( /= )
Modulus and equal operator ( %= )
Double divide and equal operator ( //= )
Exponent assign operator ( **= )
Bitwise And Operator ( &= )
Bitwise OR Operator ( |= )
Bitwise XOR Assignment Operator ( ^= )
Bitwise right shift assignment operator ( >>= )
Bitwise left shift assignment operator ( <<= )

Assignment Operator (=)
A simple assignment operator assigns the right side operand expression or value to the left side operand.
Syntax

C = A + B

Example:

# Program to demonstrate the simple Assignment Operator.
a = 5 # assign value
b = a # assign the expression to the left operand
# print result
print( "Output = ", b)

Output:
Output = 5

Add and Assignment Operator (+=)
An operator adds the right side operand or value to the left operand before assigning the result to the left operand.
Syntax

A += B or A = A + B

Example:

# Program to demonstrate the Add and Assignment Operators in Python. 
a = 5 # assign value
b = 3
# a = a + b assign the expression to the left operand 
a += b 
# print result
print( "Output = ", a)

Output:
Output = 9

Subtract and Assignment Operator (-=)
An operator subtracts the right side operand or value from the left operand and stores the value to the left operand.
Syntax

C -= A or C = C - A

Example:

# Program to demonstrate the Subtract and Assign Operators in Python. 
a = 5 # assign value
b = 3
# a = a - b or a -= b assign the expression to the left operand 
a -= b 
# print result
print( "Output = ", a)

Output:
Output = 2

Multiply and Assignment Operator (*=)
An operator multiplies the right side operand or value to the left operand and stores the product to the left operand.
Syntax

A *= B or A = A * B

Example:

# Program to demonstrate the Multiply and Assign Operators in Python. 
a = 15 # assign value
b = 4
# a = a * b, or a *= b assign the expression to the left operand 
a *= b 
# print result
print( "Output = ", a)

Output:
Output = 60

Divide and Assignment Operator (/=)
An operator divides the left operand by the right operand before assigning the result to the left operand.
Syntax

B /= A or B = B / A

Example:

# Program to demonstrate the Divide and Assign Operators in Python. 
a = 80 # assign value
b = 4
# a = a / b or a /= b assign the expression to the left operand 
a /= b 
# print result
print( "Output = ", a)

Output:
Output = 20.0

Modulus and Assignment Operator (%=)
An operator divides the left operand by the right side operand or value and places the remainder to the left side operand.
Syntax

B %= A or B = B % A

Example:

# Program to demonstrate the Modulus and Assign Operators in Python. 
a = 80 # assign value
b = 6
# a = a % b or a %= b assign the expression to the left operand 
a %= b 
# print result
print( "Output = ", a)

Output:
Output = 2

Floor division and Assignment Operator (//=)
A floor division operator divides the left operand by the right side operand or value and then assigns floor (value) to the left operand.
Syntax

B //= A or B = B // A

Example:

# Program to demonstrate the Floor division and Assign Operators in Python. 
a = 131 # assign value
b = 6
# a = a // b or a //= b assign the expression to the left operand 
a //= b 
# print result
print( "Output = ", a)

Output:
Output = 21

Exponent and Assignment Operator (**=)
An exponent assign operator is used to get the exponent value using both operands and assign the result into the left operand.
Syntax

B **= A or B = B ** A

Example:

# Program to demonstrate the exponent (**) and Assign Operators in Python.
a = 4 # assign value
b = 3
# a = a ** b or a **= b assign the expression to the left operand 
a **= b 
# print result
print( "Output = ", a)

Output:
Output = 64

Bitwise And (&) and Assignment Operator (&=)
A Bitwise And (&) and assigns operator is used to operate on both (left and right) operands and assign results into the left operand.
Syntax

B &= A

Example:

# Program to demonstrate the Bitwise And (&) and Assign Operators in Python. 
a = 6 # assign value
b = 13 
#   0110  (6 in binary)
# & 1101  (13 in binary)
#  ________
#   0100 = 4 (In decimal)

# a = a & b or a &= b assign the expression value to the left operand 
a &= b   
# print result
print( "Output = ", a)

Output:
Output = 4

Bitwise OR and Assignment Operator (|=)
A Bitwise OR and Assignment operator is used to operate on both (left and right) operand and store results into the left operand.
Syntax

B |= A

Example:

# Program to demonstrate the Bitwise OR and Assign Operators in Python. 
a = 6 # assign value
b = 13 
#   0110  (6 in binary)
# | 1101  (13 in binary)
#  ________
#   0100 = 4 (In decimal)

# a = a | b or a |= b assign the expression values to the left operand 
a |= b   
# print result
print( "Output = ", a)

Output:
Output = 15

Bitwise XOR and Assignment Operator (^=)
A Bitwise XOR and Assignment operator operated on both (left and right) operand and assign the results into the left operand.
Syntax

B ^= A

Example:

# Program to demonstrate the Bitwise XOR and Assign Operators in Python. 
a = 6 # assign value
b = 13 

# a = a | b or a |= b assign the expression values to the left operand 
a ^= b   
# print result
print( "Output = ", a)

Output:
Output = 11

Bitwise Right Shift and Assign Operator (>>=)
An operator shifts the specified amount of bits or operands to the right and assigns value to the left operand.
Syntax

B >>= A

Example:

# Program to demonstrate the Bitwise Right shift and Assign Operators in Python. 
a = 6 # assign value
b = 2 

# a = a >> b or a >>= b assign the expression value to the left operand 
a >>= b   
# print result
print( "Output = ", a)

Output:
Output = 1

Bitwise Left Shift and Assign operator (<<=)
An operator shifts the specified amount of operands to the left side and assigns the result to the left operand.
Syntax

B <<= A

Example:

# Program to demonstrate the Bitwise Left shift and Assign Operators in Python. 
a = 6 # assign value
b = 2 

# a = a >> b or a >>= b, assign the expression value to the left operand 
a <<= b   
# print result
print( "Output = ", a)	

Output:
Output = 24



Next TopicSpeech Recognition python




← prev
next →




