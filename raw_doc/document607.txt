



next →
← prev

Break Statement in Python
The break is a control statement of a loop in Python. It is used to manage the loop's sequencing. Let's say we want to end a loop and go on to the subsequent code following it; a break can assist us in doing that. When an external situation causes the loop's termination, employing the Break statement in Python is a common case.
When we've accepted input for some variable, displayed that by using a for or while loop, and wish to provide the user the choice to display it again, we can use 'Break' in Python. We can break the cycle if the user says "No." Isn't it a little perplexing? Don't panic; this tutorial will go over some instances and explain how this functions in plain English.
A break can be used in any loops in Python, including while, for, and even nested. Applying a break statement in nested loops will end the particular loop in which we used it, and the program's execution will pass to the outer loop. In other words, it interrupts the loop's sequence and directs control to the very first statement of the loop outside it.
Break Statement
When an outside condition is satisfied, the break statement in Python is invoked to pull the control out of that particular loop. It is put inside the body of our loop (usually after an if condition).
Syntax
a break statement has the following syntax in Python:

break

Code

# Python code to show the working of break statement
  
word = 'Javatpoint Python'
# Using for loop
for l in word:
  
    print(l)
    # breaking the loop when it sees 'y' or 'n'
    if l == 'y' or l == 'n':
        break
  
print(" We are out of the for loop")
print()
  
i = 0
  
# Using while loop
while True:
    print(word[i])
  
    # breaking the loop when it sees 'y' or 'n'
    if word[i] == 'y' or word[i] == 'n':
        break
    i += 1
  
print("We are out of the while loop")

Output:
J
a
v
a
t
p
o
i
n
 We are out of the for loop

J
a
v
a
t
p
o
i
n
We are out of the while loop

Both loops in the previous instance iterate the text 'Javatpoint Python,' and then when they reach the alphabet 'y' or 'n,' the if the condition is invoked, and the path of execution is taken out of the loop.


Next TopicHandling Imbalanced Data in Python with SMOTE Algorithm and Near Miss Algorithm




← prev
next →




