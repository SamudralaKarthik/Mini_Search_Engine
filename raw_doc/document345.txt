



next →
← prev

Fabs in Python
The fabs method in Python is used to return the absolute value of a number.
It can be used by importing the math module.
The math module in Python can be used to implement different basic mathematical operations like addition, subtraction, division, and multiplication.
It can also be used to perform calculations involving exponents, logarithms, and trigonometry.
Syntax
The syntax for using fabs in Python is-

math.fabs(x)

It's time to have a look at some programs for a better understanding.
Program 1:
In the first program, we will discuss the basics of the fabs method.

#working of fabs()
import math
# initializing the variables a, b, and c
a = -20.3
b = -30.66
c = 19.13
#printing the values
print ("The fabs of a is: ", math.fabs(a))
print ("The fabs of b is: ", math.fabs(b))
print ("The fabs of c is: ", math.fabs(c))

Output:
The fabs of a is:  20.3
The fabs of b is:  30.66
The fabs of c is:  19.13

Explanation:
Let's have a look at the explanation of this program-

Since we have to use fabs(), we have imported the math module.
After this, we have initialized the variables a, b, and c with positive and negative values.
In the next step, we have passed these values to fabs() and printed them.
On executing the program, it displays the desired output.

Program 2:
In the next program, we will perform some basic operations on these numbers that involve the usage of fabs().
The following program illustrates the same-

#working of fabs()
import math
# initializing the variables a, b, and c
a = -20.3
b = -30.66
c = 19.13
# calculating the sum
print ("The sum of a and b is: ", (a + b))
print ("The sum of b and c is: ", (b + c))
# printing the values
d = math.fabs(a)
e = math.fabs(b)
f = math.fabs(c)
#calculating sum after fabs
print ("The sum of d and e is: ", (d + e))
print ("The sum of e and f is: ", (e +  f))

Output:
The sum of a and b is:  -50.96
The sum of b and c is:  -11.530000000000001
The sum of d and e is:  50.96
The sum of e and f is:  49.79

Explanation:
Let us see what we have done in the above program-

Since we have to use fabs(), we have imported the math module.
After this, we have initialized the variables a, b, and c with positive and negative values.
In the next step, we have printed the sum of a + b and b + c.
Now we have passed these three variables in fabs() and stored the returned values in variables d, e, and f.
We have calculated the sum again to check the difference between the results obtained using the values that were used for evaluation before and after passing into fabs.
On executing the program, it displays the desired output.

Program 3:
Finally, in the last program, we will perform one more mathematical operation on the numbers.

#working of fabs()
import math
#initialising the variables a, b and c
a = -20.3
b = -30.66
c = 19.13
#calculating the product
print ("The product of a and b is: ", (a * b))
print ("The product of b and c is: ", (b * c))
#printing the values
d = math.fabs(a)
e = math.fabs(b)
f = math.fabs(c)
#calculating product after fabs
print ("The product of d and e is: ", (d * e))
print ("The product of e and f is: ", (e * f))

Output:
The product of a and b is:  622.398
The product of b and c is:  -586.5258
The product of d and e is:  622.398
The product of e and f is:  586.5258

Explanation:
Let's have a look at the explanation of this program-

Since we have to use fabs(), we have imported the math module.
After this, we have initialized the variables a, b, and c with positive and negative values.
In the next step, we have printed the product of a * b and b * c.
Now we have passed these three variables in fabs() and stored the returned values in variables d, e, and f.
We have calculated the product again to check the difference between the results obtained using the values that were used for evaluation before and after passing into fabs.
On executing the program, it displays the desired output.

Conclusion
In this Tutorial, we learned fabs() and how they can be used in Python programs to make our work much easier.


Next TopicHow to Remove Decimal in Python




← prev
next →




