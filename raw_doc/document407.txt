



next →
← prev

How to Plot a Pie Chart using Bokeh Library in Python
Bokeh is a Python library which is used for data visualization. It creates its plots using HTML and JavaScript languages, and it also targets modern website browsers to provide presentation elegant, concise construction of novel graphics good high-performance interactivity.
In this tutorial, we will learn how to plot a pie chart by using the Bokeh library in Python. Although the bokeh library does not provide any module for directly plotting a pie chart, users can use wedge glyphs to create the pie chart.
The wedge () function has the following primary parameters:

The x and y coordinates of wedge
The radius
The start_angle of wedge
The end_angle of wedge

To plot wedges in such a way that the output looks like a pie chart. However, the x and y coordinates of the wedge and the radius parameters, the user has to adjust the start_angle and end_angle parameters.
Example 1:

# First, we will import the required modules
from bokeh.plotting import figure as fig
from bokeh.plotting import output_file as OF
from bokeh.plotting import show
  
# Create a file for saving the model 
OF("JTP.html") 
           
# then, we will instantiate the figure object 
graph1 = fig(title = "Pie Chart using Bokeh") 
  
# initiate the center of the pie chart
x = 0
y = 0
  
# then, we will initiate the radius of the glyphs
radius = 1
  
# start angle values
start_angle = [0, 1.2, 2.1,
               3.3, 5.1]
  
# end angle values
end_angle = [1.2, 2.1, 3.3,
             5.1, 0]
  
# now, generate the color of the wedges
color1 = ["brown", "grey", "green",
          "orange", "red"]
  
# now, we will plot the graph
graph1.wedge(x, y, radius,
            start_angle,
            end_angle,
            color = color1)
  
# At last, we will display the graph
show(graph1)

Output:

Example 2:
In this example, the user will visualize some data. The data contains the detail of the field in which a company invested in 2014 - 15. The fields are:

Customers: 5%
Innovation: 1%
Shares: 2%
Marketing: 1%
Technology: 1%

The user can convert the percentage into radian for finding the value of start_angle and end_angle by using the following formula:

math.radians((percent / 100) * 360)

Code:

# First, we will import the required modules
from bokeh.plotting import figure as fig
from bokeh.plotting import output_file as OF
from bokeh.plotting import show
import math
  
# Create a file for saving the model 
OF("JTP.html") 
           
# then, we will instantiate the figure object 
graph1 = fig(title = "Pie Chart using Bokeh") 
  
# name of the fields for investment
fields = ["Customers", "Innovation", "Shares", "Marketing", "Technology"]
  
# % tage weightage of the sectors
percentages = [12.5, 32.1, 21.2, 15.1, 19.1]
  
# formula for converting percentage into radians
radians1 = [math.radians((percent / 100) * 360) for percent in percentages]
  
# Generating the start angle values
start_angle = [math.radians(0)]
prev = start_angle[0]
for k in radians1[:-1]:
    start_angle.append(k + prev)
    prev = k + prev
  
# generating the end angle values
end_angle = start_angle[1:] + [math.radians(0)]
  
# initiate the center of the pie chart
x = 0
y = 0
  
# then, we will initiate the radius of the glyphs
radius = 1
  
# now, generate the color of the wedges
color1 = ["pink", "yellow", "lightgreen",
          "orange", "red"]
  
# now, we will plot the graph
for k in range(len(fields)):
    graph1.wedge(x, y, radius,
                start_angle = start_angle[k],
                end_angle = end_angle[k],
                color = color1[k],
                legend_label = fields[k])
  
# At last, we will display the graph
show(graph1)

Output:

Conclusion
In this tutorial, we have discussed how we can plot a pie chart for the visualization of data by using the bokeh library in Python.


Next TopicHow to Read Contents of PDF using OCR (Optical Character Recognition) in Python




← prev
next →




