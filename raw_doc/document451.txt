



next →
← prev

Python Program to Count the Number of Matching Characters in a Pair of String
In this tutorial, we will discuss how the users can write a Python program for counting the number of matching characters in the given pair of strings.
We will pass the pair of non-empty strings. The program will count the number of matching characters in that pair of strings. Here, we will consider that the strings we passed are having duplicates of characters in them.
Example:

Input: string_1 = 'Javtpoint'
strint_2 = 'Juvpionk'
Output: no. matching characters in the pairs of strings: 6
(That is, the matching characters are: - J, v, p, i, o, n)
Input: string_1: 'zyxw531@7#'
string_2: 'xwuv234#'
Output: no. matching characters in the pairs of strings: 4
(That is, the matching characters are: - x, w, 3, #)

Approach 1:

Step 1: we will initialize the counter variable with 0.
Step 2: we will iterate over the first string from the first character to the last character.
Step 3: If the character extracted from the string_1 is found in the string_2. And if the first occurrence index of that character in the string_1 is the same as that of the index of the current extracted character, then it will increase the value of the counter by 1.

We will then use string.find('character') in Python to find the same characters. This will return the first occurrence index of the character in the string if found; otherwise, it will return "-1".
Example:

string_1 = 'zyxwvwwv'
string_1find('w') ? 3
string_1find('v') ? 4
string_1find('t') ? -1


Step 4: print the output value of the counter.

Example: Method 1

# First, we will define the count function
def count_1(string_1, string_2): 
    count, find_1 = 0, 0
      
# The loop will execute till the length of string_1 and it will 
# Stores the value of string_1 character by character and stores in "store_1" at every iteration.
    for store_1 in string_1:    
          
        # This will check if the extracted from of the characters of string_1 
        # is present in string_2 or not.
        if string_2.find(store_1) >= 0 and find_1 == string_1.find(store_1): 
            count += 1
        find_1 += 1
    print ('The no. matching characters in the pairs of strings: ', count)
  
# Main function
def main(): 
    string_1 = str(input ("Please enter the characters for String 1: "))
    string_2 = str(input ("Please enter the characters for String 2: "))
    count_1(string_1, string_2) # At last, calling the count function

  
# Driver Code
if __name__ == "__main__":
    main()

Output:
Please enter the characters for String 1:  ajg 78y
Please enter the characters for String 2:  gjy 23r
The no. matching characters in the pairs of strings:  2

Approach 2:

Step 1: In this method, we will use the set() function for removing the duplicate on the given strings.
Step 2: We will use the set(intersection) on both strings.
Step 3: We will use the len() function for calculating the length of the "matched_characters_1" string.

Example 2: Method 2

# First, we will define the count function
def count_1(string_1, string_2): 
    # The set of characters of string_1
    set_string_1 = set(string_1)
  
    # The set of characters of string2
    set_string_2 = set(string_2)
  
    # We will use "&" intersection mathematical operation on the sets
    # the unique characters present in both the strings
    # will be stored in matched_characters_1 set variable
    matched_characters_1 = set_string_1 & set_string_2
  
    #Then, we will print the length of matched_characters_1 set
    # which will give the number of matched characters in the pair of strings.
    Print ('The number matching characters in the pairs of strings: ' + str (len (matched_characters_1)))
  
  
# Driver code
if __name__ == "__main__" :
  
    string_1 = str(input ("Please enter the characters for String 1: "))
    string_2 = str(input ("Please enter the characters for String 2: "))
  
    count_1(string_1, string_2) # At last, calling the count function

Output:
Please enter the characters for String 1:  awe ret #$65
Please enter the characters for String 2:  rty urw @!34 
The number matching characters in the pairs of strings: 4

Approach 3:

Step 1: We will import the Re module.
Step 2: We will use the re.search() function to check if any character of string_1 is present in string_2 and if it does, then 1 will be added into the counter variable.

Example 3: Method 3

import re
string_1 = str(input ("Please enter the characters for String 1: "))
string_2 = str(input ("Please enter the characters for String 2: "))
  
count = 0
for store_1 in string_1:
    if re.search(store_1, string_2):
        count = count + 1
print ('The number matching characters in the pairs of strings: ', count)

Output:
Please enter the characters for String 1: learning
Please enter the characters for String 2: working
The number matching characters in the pairs of strings: 5

Conclusion
In this tutorial, we have discussed different methods of writing a Python program for counting the number of matching characters in the given pair of strings.


Next TopicPing Pong Game Using Turtle in Python




← prev
next →




