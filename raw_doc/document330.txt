



next →
← prev

Python Program to Find Number of Days Between Two Given Dates
In this tutorial, we will discuss how to write a Python program to find the number of days between two given numbers.
Suppose we have given two dates our expected output would be:
Example:

Input: Date_1 = 12/10/2021, Date_2 = 31/08/2022
Output: Number of Days between the given Dates are: 323 days
Input: Date_1 = 10/09/2023, Date_2 = 04/02/2025
Output: Number of Days between the given Dates are: 323 days: 513 days

Method 1: Naïve Approach
In this approach, the naïve solution will start from date_1, and it will keep counting the number of days until it reaches date_2. This solution will require more than O(1) times. It is a simple solution for counting the total number of days before date_1, which means it will count total days from 00/00/0000 to date_1, then it will count the total number of days before date_2. At last, it will return the difference between the two counts in the form of total days between the two given dates.
Example:

# First, we will create a class for dates
class date_n:
    def __init__(self, day, month, year):
        self.day = day
        self.month = month
        self.year = year
 
 
# For storng number of days in all months from
# January to December.
month_Days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
 
# This function will count the number of leap years from 00/00/0000 to the #given date
 
 
def count_Leap_Years(day):
 
    years = day.year
 
    # Now, it will check if the current year should be considered for the count          # of leap years or not.
    if (day.month <= 2):
        years -= 1
 
    # The condition for an year is a leap year: if te year is a multiple of 4, and a            # multiple of 400 but not a multiple of 100.
    return int(years / 4) - int(years / 100) + int(years / 400)
 
 
# This function will return number of days between two given dates
def get_difference(date_1, date_2):
 
    # Now, it will count total number of days before first date "date_1"
 
    # Then, it will initialize the count by using years and day
    n_1 = date_1.year * 365 + date_1.day
 
    # then, it will add days for months in the given date
    for K in range(0, date_1.month - 1):
        n_1 += month_Days[K]
 
    # As every leap year is of 366 days, we will add 
    # a day for every leap year
    n_1 += count_Leap_Years(date_1)
 
    # SIMILARLY, it will count total number of days before second date "date_2"
 
    n_2 = date_2.year * 365 + date_2.day
    for K in range(0, date_2.month - 1):
        n_2 += month_Days[K]
    n_2 += count_Leap_Years(date_2)
 
    # Then, it will return the difference between two counts
    return (n_2 - n_1)
 
 
# Driver program
date_1 = date_n(12, 10, 2021)
date_2 = date_n(30, 8, 2022)
 
print ("Number of Days between the given Dates are: ", get_difference(date_1, date_2), "days")

Output:
Number of Days between the given Dates are:  322 days

Method 2: By using Python datetime module
In this method, we will see how we can use a built_in function of Python "datetime", which can help the users in solving various date-time related problems. For finding the difference between two dates, we can input the two dates in a date type format and subtract them, and this will result in output as the number of days between the two given dates.
Example:

from datetime import date as date_n
 
def number_of_days(date_1, date_2):
    return (date_2 - date_1).days
     
# Driver program
date_1 = date_n(2023, 9, 10)
date_2 = date_n(2025, 2, 4)
print ("Number of Days between the given Dates are: ", number_of_days(date_1, date_2), "days")

Output:
Number of Days between the given Dates are:  513 days

Conclusion
In this tutorial, we have discussed two different methods of how to write a python code to find the total number of days between the two given dates.


Next TopicObject Recognition using Python




← prev
next →




