



next →
← prev

Polymorphism in Python
What is polymorphism? Polymorphism refers to having multiple forms. Polymorphism is a programming term that refers to the use of the same function name, but with different signatures, for multiple types.
Example of in-built polymorphic functions:

# Python program for demonstrating the in-built poly-morphic functions

# len() function is used for a string
print (len("Javatpoint"))

# len() function is used for a list
print (len([110, 210, 130, 321]))

Output:
10
4


Examples of user-defined polymorphic functions:

# here, is a simple Python function
# for demonstrating the Polymorphism

def add(p, q, r = 0):
	return p + q + r

# Driver code
print (add(6, 23))
print (add(22, 31, 544))

Output:
29
597

Polymorphism with Class Methods
Below is an example of how Python can use different types of classes in the same way. For loops that iterate through multiple objects are created. Next, call the methods without caring about what class each object belongs to. These methods are assumed to exist in every class.
Example:

class xyz():
	def websites(self):
		print("Javatpoint is a website out of many availabe on net.")

	def topic(self):
		print("Python is out of many topics about technology on Javatpoint.")

	def type(self):
		print("Javatpoint is an developed website.")

class PQR():
	def websites(self):
		print("Pinkvilla is a website out of many availabe on net. .")

	def topic(self):
		print("Celebrities is out of many topics.")

	def type(self):
		print("pinkvilla is a developing website.")

obj_jtp = xyz()
obj_pvl = PQR()
for domain in (obj_jtp, obj_pvl):
	domain.websites()
	domain.topic()
	domain.type()

Output:
Javatpoint is a website out of many availabe on net.
Python is out of many topics about technology on Javatpoint.
Javatpoint is an developed website.
Pinkvilla is a website out of many availabe on net.
Celebrities is out of many topics.
pinkvilla is a developing website.

Polymorphism with Inheritance:
Polymorphism allows us to define methods in Python that are the same as methods in the parent classes. In inheritance, the methods of the parent class are passed to the child class. It is possible to change a method that a child class has inherited from its parent class. This is especially useful when the method that was inherited from the parent doesn't fit the child's class. We re-implement such methods in the child classes. This is Method Overriding.
Example:

class Birds:
    def intro1(self):
        print("There are multiple types of birds in the world.")
    def flight1(self):
        print("Many of these birds can fly but some cannot.")

class sparrow1(Birds):
    def flight1(self):
        print("Sparrows are the bird which can fly.")
	
class ostrich1(Birds):
    def flight1(self):
        print("Ostriches are the birds which cannot fly.")
	
obj_birds = Birds()
obj_spr1 = sparrow1()
obj_ost1 = ostrich1()

obj_birds.intro1()
obj_birds.flight1()

obj_spr1.intro1()
obj_spr1.flight1()

obj_ost1.intro1()
obj_ost1.flight1()

Output:
There are multiple types of birds in the world.
Many of these birds can fly but some cannot.
There are multiple types of birds in the world.
Sparrows are the bird which can fly.
There are multiple types of birds in the world.
Ostriches are the birds which cannot fly.

Polymorphism with a Function and Objects
We can also create functions that can take any object. This allows for polymorphism. Let's take the following example: let's make a function called "func()", which will take an object we will call "obj". Even though we use the name "obj", any object that is instantiated will be able to call into this function. Let's next to give the function something it can do with the 'obj object passed to it. Let's call these three methods websites(), topic(), and type(). Each of them is defined in the classes' xyz' and 'PQR'. If we don't already have instantiations of the 'xyz" and 'PQR classes, let us create them. We can then call their actions using the same function func().
Example:

def func(obj):
       obj.websites()
       obj.topic()
      obj.type()

obj_jtp = xyz()
obj_pvl = PQR()

func(obj_jtp)
func(obj_pvl)

Output:
Javatpoint is a website out of many availabe on net.
Python is out of many topics about technology on Javatpoint.
Javatpoint is a developed website.
Pinkvilla is a website out of many availabe on net. .
Celebrities is out of many topics.
pinkvilla is a developing website.

Code: Implementing Polymorphism with a Function

class xyz():
     def websites(self):
          print("Javatpoint is a website out of many availabe on net.")

     def topic(self):	
          print("Python is out of many topics about technology on Javatpoint.")

     def type(self):
          print("Javatpoint is an developed website.")

class PQR():
     def websites(self):
          print("Pinkvilla is a website out of many availabe on net. .")

     def topic(self):
          print("Celebrities is out of many topics.")

     def type(self):	
          print("pinkvilla is an developing website.")

def func(obj):
      obj.websites()
      obj.topic()
      obj.type()

obj_jtp = xyz()
obj_pvl = PQR()

func(obj_jtp)
func(obj_pvl)

Output:
Javatpoint is a website out of many availabe on net.
Python is out of many topics about technology on Javatpoint.
Javatpoint is a developed website.
Pinkvilla is a website out of many availabe on net. .
Celebrities is out of many topics.
pinkvilla is a developing website.



Next TopicStringIO Module in Python




← prev
next →




