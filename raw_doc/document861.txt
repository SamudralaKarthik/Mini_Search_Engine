



next →
← prev

Save json File in Python
Python allows file manipulation (create, save, read, write, delete files, and many more). Python simplifies saving numerous file formats, and saves several file formats.
JSON is JavaScript Object Notation. Data is stored and sent via a text-based computer language script (executable) file.
Python's json module supports JSON. JSON uses quoted-string with key-value mapping within curly bracket { }.
Steps to save the json file
There are the following steps to create and save json files:
1. Import json package

import json

2. Write json data in hash format

Json_value ={
	"best_student": {
		"key1": "value1",
		"key2": "value2"		
	},
}

3. Create json file and use "w" (write) mode to save data and files.

save_file = open("filename", "w")

4. Use json.dump method to connect file and json data.
5. Close the file.

save_file.close()

Examples
The following example shows the saving json file in Python.
Example #1
The given Python example saves object data in json file. It is basic data to convert file into json and save in a file. The example shows single variable data to save in json file.

import json
# python objects can store in json format
value ={
		"a": "1",
		"b": "2",
		"c": "4",
		"d": "8"
}
# the json file to save the output data 
save_file = open("savedata.json", "w")
json.dump(value, save_file, indent = 6)
save_file.close()

Output:
The below image shows the json file and object value in json format.

Example #2
The given Python example saves object data in json file. In this example, we can use integer and string value in a single object and display them in json file.

import json
# python objects can store in json format
value ={
	"best_student": {
		"name": "Ram",
		"subject": "python",
		"age": "24",
		"marks": "98"
	},
}
# the json file to save the output data 
save_file = open("savedata.json", "w")
json.dump(value, save_file, indent = 6)
save_file.close()

Output
The below image shows the json file and object value in json format.

Example #3
The given Python example saves object data in json file. Here, we can use multiple objects and their data to convert into json files and save them using Python.

import json
# python objects can store in json format
Topper_student ={
	"student1": {
		"name": "Ram",
		"subject": "python",
		"age": "24",
		"marks": "98"
	},
"student2": {
		"name": "sam",
		"subject": "Java",
		"age": "24",
		"marks": "92"
	},
"student3": {
		"name": "Radha",
		"subject": "Html",
		"age": "24",
		"marks": "96"
	},

}
# the json file to save the output data 
save_file = open("savedata.json", "w")
json.dump(Topper_student, save_file, indent = 6)
save_file.close()

Output
The below image shows the json file and object value in json format.

Example #4
The given python example saves object data in json file. Here we can see the object value without a name and using the array format for values.

import json
# python objects can store in json format
value =[{
		"a": "1",
		"b": "2",
		"c": "4",
		"d": "8"
},
{
		"a1": "11",
		"b1": "21",
		"c1": "41",
		"d1": "18"
},
{
		"a2": "21",
		"b2": "22",
		"c2": "42",
		"d2": "28"
}]
# the json file to save the output data 
save_file = open("savedata.json", "w")
json.dump(value, save_file, indent = 6)
save_file.close()

output
the below image shows the json file and object value in json format.

Example #5
The given python example saves object data in json file. We can use different objects and its name as hash format data. In this example, we can create two Json files for different objects.

import json
# python objects can store in json format
Topper_student =[{
		"a": "1",
		"b": "2",
		"c": "4",
		"d": "8"
},
{
		"a1": "11",
		"b1": "21",
		"c1": "41",
		"d1": "18"
}]
value = {
		"a2": "21",
		"b2": "22",
		"c2": "42",
		"d2": "28"
}
# the json file to save the output data 
save_file = open("savedata.json", "w")
save_file1 = open("save.json", "w")
json.dump(Topper_student, save_file, indent = 6)
json.dump(value, save_file1, indent = 6)
save_file.close()
save_file1.close()# the json file to save the output data 
save_file = open("savedata.json", "w")
save_file1 = open("save.json", "w")
json.dump(Topper_student, save_file, indent = 6)
json.dump(Topper_student, save_file1, indent = 6)
save_file.close()
save_file1.close()

Output
The below image shows the json file and object value in json format.

Conclusion
We can save json files using Python language with object data. Python stores object data in json file after converts into a hash format. This data contains in the file and stored on the user's desktop.


Next TopicScratch and Python Basics




← prev
next →




